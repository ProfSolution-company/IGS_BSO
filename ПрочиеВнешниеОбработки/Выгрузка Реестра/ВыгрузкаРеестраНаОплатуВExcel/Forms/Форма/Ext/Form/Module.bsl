
&НаСервере
Процедура ЗаполнитьРеестраНаСервере()  
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	игсЗаявкаНаОплату.Ссылка КАК Заявка,
		|	игсЗаявкаНаОплату.ВидОплаты КАК ВидОплаты,
		|	игсЗаявкаНаОплату.СуммаДокумента КАК Сумма,
		|	игсЗаявкаНаОплату.СуммаНДС КАК СуммаНДС,
		|	игсЗаявкаНаОплату.ВалютаПлатежа КАК Валюта,
		|	игсЗаявкаНаОплату.Контрагент КАК Контрагент,
		|	игсЗаявкаНаОплату.ДоговорКонтрагента КАК Договор,
		|	игсЗаявкаНаОплату.Ответственный КАК Инициатор
		|ИЗ
		|	Документ.игсЗаявкаНаОплату КАК игсЗаявкаНаОплату
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПлатежноеПоручение КАК ПлатежноеПоручение
		|		ПО игсЗаявкаНаОплату.Ссылка = ПлатежноеПоручение.игсСсылкаЗаявкаНаОплату
		|ГДЕ
		|	игсЗаявкаНаОплату.Проведен
		|	И НЕ игсЗаявкаНаОплату.ПометкаУдаления
		|	И игсЗаявкаНаОплату.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания
		|	И игсЗаявкаНаОплату.Ответственный = &Инициатор
		|	И игсЗаявкаНаОплату.Контрагент = &Контрагент" ;
	
	Запрос.УстановитьПараметр("ДатаНачала", 	ПериодОтбор.ДатаНачала);
	Запрос.УстановитьПараметр("ДатаОкончания", 	ПериодОтбор.ДатаОкончания); 
	
	Если ЗначениеЗаполнено(ИнициаторОтбор) Тогда
		Запрос.УстановитьПараметр("Инициатор", 	ИнициаторОтбор);	
	Иначе 
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "И игсЗаявкаНаОплату.Ответственный = &Инициатор", "");
	КонецЕсли;
	
	Если ЗначениеЗаполнено(КонтрагентОтбор) Тогда
		Запрос.УстановитьПараметр("Контрагент", КонтрагентОтбор); 
	Иначе 
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "И игсЗаявкаНаОплату.Контрагент = &Контрагент", "");
	КонецЕсли;
	
	Результат = Запрос.Выполнить();
	ТаблицаЗаявок = Результат.Выгрузить();
	
	Объект.Заявки.Очистить();
	Объект.Заявки.Загрузить(ТаблицаЗаявок);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьРеестра(Команда)
	
	Если Не ЗначениеЗаполнено(ПериодОтбор) Тогда  
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Укажите ""Период"" !");
		
		Возврат;
		
	Иначе    
		
		ЗаполнитьРеестраНаСервере();
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ПечатьРеестраНаСервере() 
	
	ДокументОбъект = РеквизитФормыВЗначение("Объект");
	
	Возврат ДокументОбъект.СФормироватьРеестр();
	
Конецфункции

&НаКлиенте
Процедура ПечатьРеестра(Команда)
	
	Если Объект.Заявки.Количество() > 0 Тогда 
		
		ОписаниеФайлаРеестра = ВыборФайла();
		
		Если ОписаниеФайлаРеестра = Неопределено Тогда
			Возврат;
		КонецЕсли;
		
		ДанныеРеестра = ПечатьРеестраНаСервере();
		ДанныеРеестра.ТабличныйДокумент.Записать(ОписаниеФайлаРеестра.ИмяФайла, ТипФайлаТабличногоДокумента.XLSX);
		
		Для Каждого ВложениеZip Из ДанныеРеестра.Вложения Цикл
			ВложениеZip.Значение.ДвоичныеДанные.Записать(ОписаниеФайлаРеестра.Каталог + "\" + ВложениеZip.Значение.ИмяФайлаАрхива);
		КонецЦикла;	
		
		ПоказатьПредупреждение(, НСтр("ru = 'Реестр сформирован!';"), 10); 
		
	Иначе  
		
		ПоказатьПредупреждение(, НСтр("ru = 'Сначала заполните заявки';"), 10);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Функция ВыборФайла()
	
	ДиалогФайла = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Сохранение);
	ДиалогФайла.Фильтр = "Реестр (*.xlsx)|*.xlsx";
	
	Если ДиалогФайла.Выбрать() Тогда
		
		Возврат Новый Структура("ИмяФайла, Каталог", ДиалогФайла.ПолноеИмяФайла, ДиалогФайла.Каталог);  
		
	Иначе 
		
		Возврат Неопределено;
		
	КонецЕсли;

КонецФункции

&НаКлиенте
Процедура ЗаявкиПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр) 
	
	Отказ = Истина; 
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаявкиПередУдалением(Элемент, Отказ)
	
	Отказ = Истина;
	
КонецПроцедуры

