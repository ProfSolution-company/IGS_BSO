
Функция СведенияОВнешнейОбработке() Экспорт     
	
	ПараметрыРегистрации 	= Новый Структура;
	МассивНазначений 		= Новый Массив; 
	
	МассивНазначений.Добавить("Документ.ИнвентаризацияОС"); //Указываем документ к которому делаем внешнюю печ. форму 
	
	ПараметрыРегистрации.Вставить("Вид", "ПечатнаяФорма"); //может быть - ПечатнаяФорма, ЗаполнениеОбъекта, ДополнительныйОтчет, СозданиеСвязанныхОбъектов... 
	ПараметрыРегистрации.Вставить("Назначение", МассивНазначений);
	ПараметрыРегистрации.Вставить("Наименование", "ИНВ-1 (внешняя)"); //имя под которым обработка будет зарегестрирована в справочнике внешних обработок
	ПараметрыРегистрации.Вставить("БезопасныйРежим", Ложь);
	ПараметрыРегистрации.Вставить("Версия", "1.0"); 
	ПараметрыРегистрации.Вставить("Информация", "");
	
	ТаблицаКоманд = ПолучитьТаблицуКоманд();
	ДобавитьКоманду(ТаблицаКоманд, "ИНВ-1 (Внешняя)", "ИНВ1", "ВызовСерверногоМетода", Истина, "ПечатьMXL"); 
	
	ПараметрыРегистрации.Вставить("Команды", ТаблицаКоманд);
	
	Возврат ПараметрыРегистрации;
	
КонецФункции

Функция ПолучитьТаблицуКоманд()   
	
	Команды = 											Новый ТаблицаЗначений;
	Команды.Колонки.Добавить("Представление", 			Новый ОписаниеТипов("Строка")); //как будет выглядеть описание печ.формы для пользователя
	Команды.Колонки.Добавить("Идентификатор", 			Новый ОписаниеТипов("Строка")); //имя макета печ.формы
	Команды.Колонки.Добавить("Использование", 			Новый ОписаниеТипов("Строка"));
	Команды.Колонки.Добавить("ПоказыватьОповещение", 	Новый ОписаниеТипов("Булево"));
	Команды.Колонки.Добавить("Модификатор", 			Новый ОписаниеТипов("Строка")); 
	
	Возврат Команды;
	
КонецФункции

Процедура ДобавитьКоманду(ТаблицаКоманд, Представление, Идентификатор, Использование, ПоказыватьОповещение = Ложь, Модификатор = "")   
	
	НоваяКоманда 						= ТаблицаКоманд.Добавить();
	НоваяКоманда.Представление 			= Представление; 
	НоваяКоманда.Идентификатор 			= Идентификатор;
	НоваяКоманда.Использование 			= Использование;
	НоваяКоманда.ПоказыватьОповещение 	= ПоказыватьОповещение;
	НоваяКоманда.Модификатор 			= Модификатор;
	
КонецПроцедуры

Функция Печать(МассивОбъектов, ПараметрыПечати, ОбъектыПечати, КоллекцияПечатныхФорм) Экспорт
	
	УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(ПараметрыПечати, "ИНВ1", НСтр("ru = 'ИНВ-1 (Инвентаризационная опись)'"), 
	ПечатьИНВ1(МассивОбъектов, ОбъектыПечати, ПараметрыПечати), ,);	
	
КонецФункции

Функция ПечатьИНВ1(МассивОбъектов, ОбъектыПечати, ПараметрыПечати) 
	
	УстановитьПривилегированныйРежим(Истина);
	
	ВалютаРегламентированногоУчета = ОбщегоНазначенияБПВызовСервераПовтИсп.ПолучитьВалютуРегламентированногоУчета();
	
	// Создаем колонки Таблицы итогов
	ТаблицаИтогов = Новый ТаблицаЗначений();
	ТаблицаИтогов.Колонки.Добавить("ПорядковыйНомерИтогов");
	ТаблицаИтогов.Колонки.Добавить("ИтогНаличиеФактическое");
	ТаблицаИтогов.Колонки.Добавить("ИтогСтоимостьФактическая");
	ТаблицаИтогов.Колонки.Добавить("ИтогНаличиеПоДаннымУчета");
	ТаблицаИтогов.Колонки.Добавить("ИтогСтоимостьПоДаннымУчета");
	ТаблицаИтогов.Колонки.Добавить("КоличествоФактическоеПрописью");
	ТаблицаИтогов.Колонки.Добавить("СтоимостьФактическаяПрописью");
	
	// Варианты заголовков разделов с подписями печатной формы	
	ЗаголовокРазделаПодписей = Новый Структура();
	ЗаголовокРазделаПодписей.Вставить("МОЛ",                  НСтр("ru = 'Лицо(а), ответственное(ые) за сохранность основных средств:'"));
	ЗаголовокРазделаПодписей.Вставить("ПредседательКомиссии", НСтр("ru = 'Председатель комиссии'"));
	ЗаголовокРазделаПодписей.Вставить("ЧленыКомиссии",        НСтр("ru = 'Члены комиссии'"));
	ЗаголовокРазделаПодписей.Вставить("Проверяющий",          НСтр("ru = 'Указанные в настоящей описи данные и расчеты проверил'"));
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	
	ТабличныйДокумент.АвтоМасштаб 				= Истина;
	ТабличныйДокумент.ПолеСверху              	= 10;
	ТабличныйДокумент.РазмерКолонтитулаСверху 	= 10;
	ТабличныйДокумент.ПолеСлева		          	= 10;
	ТабличныйДокумент.ПолеСправа    	      	= 10;
	ТабличныйДокумент.ОриентацияСтраницы      	= ОриентацияСтраницы.Ландшафт;
	ТабличныйДокумент.КлючПараметровПечати 		= "ПАРАМЕТРЫ_ПЕЧАТИ_ИнвентаризацияОС_ИНВ1";
	
	Макет = ПолучитьМакет("ИНВ1_Измененный");
	
	// Получаем области макета для вывода в табличный документ
	Шапка            = Макет.ПолучитьОбласть("Шапка");
	Расписка         = Макет.ПолучитьОбласть("Расписка");
	Примечание       = Макет.ПолучитьОбласть("Примечание");
	Подпись          = Макет.ПолучитьОбласть("Подпись");
	ПолеДаты         = Макет.ПолучитьОбласть("ПолеДаты");
	ЗаголовокТаблицы = Макет.ПолучитьОбласть("ЗаголовокТаблицы");
	ИтогоПоСтранице  = Макет.ПолучитьОбласть("ИтогоПоСтранице");
	ИтогоПоОписи     = Макет.ПолучитьОбласть("ИтогоПоОписи");
	Итоги            = Макет.ПолучитьОбласть("Итоги");
	Подсчеты         = Макет.ПолучитьОбласть("Подсчеты");
	Претензии        = Макет.ПолучитьОбласть("Претензии");
	
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	Запрос.УстановитьПараметр("ВестиУчетГрупповыхОС", ПолучитьФункциональнуюОпцию("ВедетсяУчетГрупповыхОС"));
	
	Запрос.Текст = 
	"ВЫБРАТЬ
		|	ИнвентаризацияОСОС.Ссылка КАК Ссылка,
		|	ИнвентаризацияОСОС.Ссылка.Дата КАК Дата,
		|	ИнвентаризацияОСОС.НомерСтроки КАК НомерСтроки,
		|	ИнвентаризацияОСОС.ОсновноеСредство КАК ОсновноеСредство,
		|	ИнвентаризацияОСОС.Ссылка.Организация КАК Организация,
		|	ИнвентаризацияОСОС.СтоимостьПоДаннымУчета КАК СтоимостьПоДаннымУчета,
		|	ИнвентаризацияОСОС.СтоимостьФактическая КАК СтоимостьФактическая,
		|	СУММА(ВЫБОР
		|			КОГДА &ВестиУчетГрупповыхОС
		|				ТОГДА ИнвентаризацияОСОС.КоличествоПоДаннымУчета
		|			ИНАЧЕ ВЫБОР
		|					КОГДА ИнвентаризацияОСОС.НаличиеПоДаннымУчета
		|						ТОГДА 1
		|					ИНАЧЕ 0
		|				КОНЕЦ
		|		КОНЕЦ) КАК НаличиеПоДаннымУчета,
		|	СУММА(ВЫБОР
		|			КОГДА &ВестиУчетГрупповыхОС
		|				ТОГДА ИнвентаризацияОСОС.КоличествоФактическое
		|			ИНАЧЕ ВЫБОР
		|					КОГДА ИнвентаризацияОСОС.НаличиеФактическое
		|						ТОГДА 1
		|					ИНАЧЕ 0
		|				КОНЕЦ
		|		КОНЕЦ) КАК НаличиеФактическое,
		|	ИнвентаризацияОСОС.ОсновноеСредство.Код КАК ОсновноеСредствоКод
		|ПОМЕСТИТЬ ОСИОрганизации
		|ИЗ
		|	Документ.ИнвентаризацияОС.ОС КАК ИнвентаризацияОСОС
		|ГДЕ
		|	ИнвентаризацияОСОС.Ссылка В(&МассивОбъектов)
		|
		|СГРУППИРОВАТЬ ПО
		|	ИнвентаризацияОСОС.Ссылка,
		|	ИнвентаризацияОСОС.ОсновноеСредство,
		|	ИнвентаризацияОСОС.СтоимостьПоДаннымУчета,
		|	ИнвентаризацияОСОС.СтоимостьФактическая,
		|	ИнвентаризацияОСОС.НомерСтроки,
		|	ИнвентаризацияОСОС.Ссылка.Организация,
		|	ИнвентаризацияОСОС.Ссылка.Дата,
		|	ИнвентаризацияОСОС.ОсновноеСредство.Код
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ОсновноеСредство
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	МестонахождениеОСБухгалтерскийУчетСрезПоследних.ОсновноеСредство КАК ОсновноеСредство,
		|	МестонахождениеОСБухгалтерскийУчетСрезПоследних.Организация КАК Организация,
		|	МАКСИМУМ(МестонахождениеОСБухгалтерскийУчетСрезПоследних.Период) КАК МестонахождениеПериод,
		|	МестонахождениеОСБухгалтерскийУчетСрезПоследних.МОЛ КАК МОЛ
		|ПОМЕСТИТЬ втМестонахождение
		|ИЗ
		|	РегистрСведений.МестонахождениеОСБухгалтерскийУчет.СрезПоследних(
		|			,
		|			ОсновноеСредство В
		|				(ВЫБРАТЬ
		|					ОСИОрганизации.ОсновноеСредство КАК ОсновноеСредство
		|				ИЗ
		|					ОСИОрганизации КАК ОСИОрганизации)) КАК МестонахождениеОСБухгалтерскийУчетСрезПоследних
		|
		|СГРУППИРОВАТЬ ПО
		|	МестонахождениеОСБухгалтерскийУчетСрезПоследних.ОсновноеСредство,
		|	МестонахождениеОСБухгалтерскийУчетСрезПоследних.Организация,
		|	МестонахождениеОСБухгалтерскийУчетСрезПоследних.МОЛ
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ОсновноеСредство
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	МАКСИМУМ(ПервоначальныеСведенияОСБухгалтерскийУчетСрезПоследних.Период) КАК Период,
		|	ПервоначальныеСведенияОСБухгалтерскийУчетСрезПоследних.Организация КАК Организация,
		|	МАКСИМУМ(ПервоначальныеСведенияОСБухгалтерскийУчетСрезПоследних.ИнвентарныйНомер) КАК ИнвентарныйНомер,
		|	ПервоначальныеСведенияОСБухгалтерскийУчетСрезПоследних.ОсновноеСредство КАК ОсновноеСредство
		|ПОМЕСТИТЬ втСведенияОС
		|ИЗ
		|	РегистрСведений.ПервоначальныеСведенияОСБухгалтерскийУчет.СрезПоследних(
		|			,
		|			ОсновноеСредство В
		|				(ВЫБРАТЬ
		|					ОСИОрганизации.ОсновноеСредство КАК ОсновноеСредство
		|				ИЗ
		|					ОСИОрганизации КАК ОСИОрганизации)) КАК ПервоначальныеСведенияОСБухгалтерскийУчетСрезПоследних
		|
		|СГРУППИРОВАТЬ ПО
		|	ПервоначальныеСведенияОСБухгалтерскийУчетСрезПоследних.Организация,
		|	ПервоначальныеСведенияОСБухгалтерскийУчетСрезПоследних.ОсновноеСредство
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ОсновноеСредство
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ОСИОрганизации.Ссылка КАК Ссылка,
		|	ОСИОрганизации.Дата КАК Дата,
		|	ОСИОрганизации.НомерСтроки КАК НомерСтроки,
		|	ОСИОрганизации.ОсновноеСредство КАК ОсновноеСредство,
		|	ОСИОрганизации.Организация КАК Организация,
		|	ОСИОрганизации.СтоимостьПоДаннымУчета КАК СтоимостьПоДаннымУчета,
		|	ОСИОрганизации.СтоимостьФактическая КАК СтоимостьФактическая,
		|	МАКСИМУМ(ЕСТЬNULL(втМестонахождение.МОЛ, НЕОПРЕДЕЛЕНО)) КАК МОЛ,
		|	ВЫБОР
		|		КОГДА втСведенияОС.ИнвентарныйНомер <> """"
		|			ТОГДА втСведенияОС.ИнвентарныйНомер
		|		ИНАЧЕ ОСИОрганизации.ОсновноеСредствоКод
		|	КОНЕЦ КАК ИнвентарныйНомер,
		|	СУММА(ОСИОрганизации.НаличиеПоДаннымУчета) КАК НаличиеПоДаннымУчета,
		|	СУММА(ОСИОрганизации.НаличиеФактическое) КАК НаличиеФактическое
		|ПОМЕСТИТЬ ОСИСведения
		|ИЗ
		|	ОСИОрганизации КАК ОСИОрганизации
		|		ЛЕВОЕ СОЕДИНЕНИЕ втМестонахождение КАК втМестонахождение
		|		ПО ОСИОрганизации.Организация = втМестонахождение.Организация
		|			И ОСИОрганизации.ОсновноеСредство = втМестонахождение.ОсновноеСредство
		|			И ОСИОрганизации.Дата >= втМестонахождение.МестонахождениеПериод
		|		ЛЕВОЕ СОЕДИНЕНИЕ втСведенияОС КАК втСведенияОС
		|		ПО ОСИОрганизации.Организация = втСведенияОС.Организация
		|			И ОСИОрганизации.ОсновноеСредство = втСведенияОС.ОсновноеСредство
		|			И ОСИОрганизации.Дата >= втСведенияОС.Период
		|
		|СГРУППИРОВАТЬ ПО
		|	ОСИОрганизации.Ссылка,
		|	ОСИОрганизации.Дата,
		|	ОСИОрганизации.НомерСтроки,
		|	ОСИОрганизации.ОсновноеСредство,
		|	ОСИОрганизации.Организация,
		|	ОСИОрганизации.СтоимостьПоДаннымУчета,
		|	ОСИОрганизации.СтоимостьФактическая,
		|	ВЫБОР
		|		КОГДА втСведенияОС.ИнвентарныйНомер <> """"
		|			ТОГДА втСведенияОС.ИнвентарныйНомер
		|		ИНАЧЕ ОСИОрганизации.ОсновноеСредствоКод
		|	КОНЕЦ
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ОсновноеСредство
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ОСИОрганизации
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ОСИСведения.Ссылка КАК Ссылка,
		|	ОСИСведения.Дата КАК Дата,
		|	ОСИСведения.МОЛ КАК МОЛ
		|ИЗ
		|	ОСИСведения КАК ОСИСведения
		|
		|УПОРЯДОЧИТЬ ПО
		|	Дата,
		|	Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ОСИСведения.Ссылка КАК Ссылка,
		|	КОЛИЧЕСТВО(ОСИСведения.ОсновноеСредство) КАК КоличествоОС
		|ПОМЕСТИТЬ ВТ_КоличествоОСВДокументеИнвентаризации
		|ИЗ
		|	ОСИСведения КАК ОСИСведения
		|
		|СГРУППИРОВАТЬ ПО
		|	ОСИСведения.Ссылка
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ИнвентаризацияОС.Ссылка КАК Ссылка,
		|	ИнвентаризацияОС.Дата КАК Дата,
		|	ИнвентаризацияОС.Номер КАК Номер,
		|	ИнвентаризацияОС.Организация КАК Организация,
		|	ВЫБОР
		|		КОГДА ИнвентаризацияОС.Организация.КодОКВЭД2 = """"
		|			ТОГДА ИнвентаризацияОС.Организация.КодОКВЭД
		|		ИНАЧЕ ИнвентаризацияОС.Организация.КодОКВЭД2
		|	КОНЕЦ КАК ВидДеятельности,
		|	ИнвентаризацияОС.ПодразделениеОрганизации КАК ПодразделениеОрганизации,
		|	ИнвентаризацияОС.ПодразделениеОрганизации.Представление КАК ПодразделениеПредставление,
		|	ИнвентаризацияОС.ДатаНачалаИнвентаризации КАК ДатаНачалаИнвентаризации,
		|	ИнвентаризацияОС.ДатаОкончанияИнвентаризации КАК ДатаОкончанияИнвентаризации,
		|	ИнвентаризацияОС.ДокументОснованиеВид КАК ДокументОснованиеВид,
		|	ИнвентаризацияОС.ДокументОснованиеДата КАК ДокументОснованиеДата,
		|	ИнвентаризацияОС.ДокументОснованиеНомер КАК ДокументОснованиеНомер,
		|	ОСИСведения.НомерСтроки КАК НомерСтроки,
		|	ЕСТЬNULL(КоличествоОСДокументе.КоличествоОС, 0) КАК КоличествоОС,
		|	ОСИСведения.ОсновноеСредство КАК ОсновноеСредство,
		|	ВЫБОР
		|		КОГДА ОСИСведения.ОсновноеСредство.НаименованиеПолное ПОДОБНО """"
		|			ТОГДА ОСИСведения.ОсновноеСредство.Наименование
		|		ИНАЧЕ ОСИСведения.ОсновноеСредство.НаименованиеПолное
		|	КОНЕЦ КАК ОсновноеСредствоНаименованиеПолное,
		|	ОСИСведения.ОсновноеСредство.ДатаВыпуска КАК ДатаВыпуска,
		|	ОСИСведения.ОсновноеСредство.ЗаводскойНомер КАК ЗаводскойНомер,
		|	ОСИСведения.ОсновноеСредство.НомерПаспорта КАК НомерПаспорта,
		|	ОСИСведения.СтоимостьПоДаннымУчета КАК СтоимостьПоДаннымУчета,
		|	ОСИСведения.СтоимостьФактическая КАК СтоимостьФактическая,
		|	ОСИСведения.ИнвентарныйНомер КАК ИнвентарныйНомер,
		|	ОСИСведения.НаличиеПоДаннымУчета КАК НаличиеПоДаннымУчета,
		|	ОСИСведения.НаличиеФактическое КАК НаличиеФактическое,
		|	ИнвентаризацияОС.игсСклад КАК Склад
		|ИЗ
		|	ОСИСведения КАК ОСИСведения
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_КоличествоОСВДокументеИнвентаризации КАК КоличествоОСДокументе
		|		ПО ОСИСведения.Ссылка = КоличествоОСДокументе.Ссылка
		|		ПОЛНОЕ СОЕДИНЕНИЕ Документ.ИнвентаризацияОС КАК ИнвентаризацияОС
		|		ПО ОСИСведения.Ссылка = ИнвентаризацияОС.Ссылка
		|ГДЕ
		|	ИнвентаризацияОС.Ссылка В(&МассивОбъектов)
		|
		|УПОРЯДОЧИТЬ ПО
		|	Дата,
		|	Ссылка,
		|	ОСИСведения.НомерСтроки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ОСИСведения.Дата КАК Дата,
		|	ОСИСведения.Ссылка КАК Ссылка,
		|	ЕСТЬNULL(ИнвентаризацияОСИнвентаризационнаяКомиссия.НомерСтроки, 0) КАК НомерСтроки,
		|	ЕСТЬNULL(ИнвентаризацияОСИнвентаризационнаяКомиссия.ФизЛицо, ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка)) КАК ФизЛицо,
		|	ЕСТЬNULL(ИнвентаризацияОСИнвентаризационнаяКомиссия.Председатель, ИСТИНА) КАК Председатель,
		|	ЕСТЬNULL(ИнвентаризацияОСИнвентаризационнаяКомиссия.игсДолжность, ЗНАЧЕНИЕ(Справочник.Должности.ПустаяСсылка)) КАК Должность
		|ИЗ
		|	ОСИСведения КАК ОСИСведения
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ИнвентаризацияОС.ИнвентаризационнаяКомиссия КАК ИнвентаризацияОСИнвентаризационнаяКомиссия
		|		ПО ОСИСведения.Ссылка = ИнвентаризацияОСИнвентаризационнаяКомиссия.Ссылка
		|
		|УПОРЯДОЧИТЬ ПО
		|	Дата,
		|	Ссылка,
		|	Председатель УБЫВ,
		|	НомерСтроки";
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	
	ВыборкаМОЛ = РезультатЗапроса[5].Выбрать();
	Док = РезультатЗапроса[7].Выбрать();
	ИнвентаризационнаяКомиссия = РезультатЗапроса[8].Выбрать();
	
	ПервыйДокумент = Истина;
	
	ОбработаныОбъекты = Ложь;   
	
	Пока Док.СледующийПоЗначениюПоля("Ссылка") Цикл  
		
		Если ЗначениеЗаполнено(Док.Склад) Тогда
			
			Запрос.Текст =
			"ВЫБРАТЬ
			|	ОтветственныеЛицаСрезПоследних.ФизическоеЛицо КАК игсФизическоеЛицо,
			|	ОтветственныеЛицаСрезПоследних.игсФизическоеЛицо2 КАК игсФизическоеЛицо2,
			|	ОтветственныеЛицаСрезПоследних.игсФизическоеЛицо3 КАК игсФизическоеЛицо3,
			|	ОтветственныеЛицаСрезПоследних.игсФизическоеЛицо4 КАК игсФизическоеЛицо4,
			|	ОтветственныеЛицаСрезПоследних.игсФизическоеЛицо5 КАК игсФизическоеЛицо5,
			|	ОтветственныеЛицаСрезПоследних.игсФизическоеЛицо6 КАК игсФизическоеЛицо6,
			|	ОтветственныеЛицаСрезПоследних.игсФизическоеЛицо7 КАК игсФизическоеЛицо7,
			|	ОтветственныеЛицаСрезПоследних.игсФизическоеЛицо8 КАК игсФизическоеЛицо8,
			|	ОтветственныеЛицаСрезПоследних.игсФизическоеЛицо9 КАК игсФизическоеЛицо9,
			|	ОтветственныеЛицаСрезПоследних.игсФизическоеЛицо10 КАК игсФизическоеЛицо10,
			|	ОтветственныеЛицаСрезПоследних.игсФизическоеЛицо11 КАК игсФизическоеЛицо11,
			|	ОтветственныеЛицаСрезПоследних.игсФизическоеЛицо12 КАК игсФизическоеЛицо12,
			|	ОтветственныеЛицаСрезПоследних.игсФизическоеЛицо13 КАК игсФизическоеЛицо13,
			|	ОтветственныеЛицаСрезПоследних.игсФизическоеЛицо14 КАК игсФизическоеЛицо14,
			|	ОтветственныеЛицаСрезПоследних.игсФизическоеЛицо15 КАК игсФизическоеЛицо15
			|ИЗ
			|	РегистрСведений.ОтветственныеЛица.СрезПоследних(&ДатаДокумента, СтруктурнаяЕдиница = &Склад) КАК ОтветственныеЛицаСрезПоследних";   
			
			Запрос.УстановитьПараметр("Склад", Док.Склад);
			Запрос.УстановитьПараметр("ДатаДокумента", Док.Дата);
			
			РезультатМОЛ = Запрос.Выполнить();
			
			Если Не РезультатМОЛ.Пустой() Тогда
				
				МассивМОЛ = Новый Массив();
				
			КонецЕсли; 
			
			Выборка = РезультатМОЛ.Выбрать();
			
			Пока Выборка.Следующий() Цикл
				
				Для Сч = 1 По 15 Цикл
					
					ФизЛицо = Выборка["игсФизическоеЛицо" + ?(Сч = 1, "", Сч)]; 
					
					Если ЗначениеЗаполнено(ФизЛицо) Тогда
						МассивМОЛ.Добавить(ФизЛицо);
					КонецЕсли; 
					
				КонецЦикла; 
				
			КонецЦикла; 
			
		КонецЕсли;
		
		ОбработаныОбъекты = Истина; 
		
		Если НЕ ПервыйДокумент Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;    
		
		ПервыйДокумент = Ложь;
		
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		ТаблицаИтогов.Очистить();
		
		РежимСобственности = НСтр("ru = 'в собственности'");
		
		//////////////////////////////////////////////////////////////////////
		// 1-я страница формы
		
		// Выведем шапку документа
		СведенияОбОрганизации = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Док.Организация, Док.Дата);
		
		Шапка.Параметры.Заполнить(Док);
		Шапка.Параметры.Организация 			= ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОбОрганизации);
		Шапка.Параметры.ОрганизацияКодПоОКПО 	= СведенияОбОрганизации.КодПоОКПО;
		Шапка.Параметры.РежимСобственности 		= РежимСобственности;
		Шапка.Параметры.Подразделение 			= Док.ПодразделениеПредставление;
		Шапка.Параметры.Местонахождение 		= Док.Склад;
		Шапка.Параметры.НомерДокумента 			= ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(Док.Номер, Истина, Ложь);
		Шапка.Параметры.ДатаДокумента 			= Док.Дата;
		
		ТабличныйДокумент.Вывести(Шапка);
		
		// Выведем расписку МОЛов 
		ТабличныйДокумент.Вывести(Расписка);
		
		// Выведем подписи МОЛов
		ВыводитьЗаголовок  = Истина; // Флаг вывода заголовка набора подписей
		ВыводитьПримечание = Истина; // Флаг вывода примечания-звездочки
		
		ДанныеМОЛ = ОбщегоНазначенияБПВызовСервера.ДанныеФизЛиц(Док.Организация, МассивМОЛ, Док.Дата);
		
		// Сначала выведем МОЛов из выборки
		Для каждого СтрокаМОЛ Из ДанныеМОЛ Цикл
			
			ПодписьСПримечанием = Новый Массив;
			ПодписьСПримечанием.Добавить(Подпись);
			ПодписьСПримечанием.Добавить(Примечание);
			
			Если НЕ ОбщегоНазначения.ПроверитьВыводТабличногоДокумента(ТабличныйДокумент, ПодписьСПримечанием) Тогда
				
				// Выведем примечание
				ТабличныйДокумент.Вывести(Примечание);
				ВыводитьПримечание = Ложь;
				
				// Выведем разрыв страницы
				ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
				ВыводитьЗаголовок = Истина; // на новой странице выведем заголовок набора подписей
				
			КонецЕсли;
			
			Подпись.Параметры.ЗаголовокРазделаПодписей = ?(ВыводитьЗаголовок, ЗаголовокРазделаПодписей.МОЛ, "");
			Подпись.Параметры.Должность                = СтрокаМОЛ.Должность;
			Подпись.Параметры.РасшифровкаПодписи       = СтрокаМОЛ.Представление;
			
			ТабличныйДокумент.Вывести(Подпись);
			
			ВыводитьЗаголовок = Ложь; // в следующей итерации вывод заголовка не нужен
			
		КонецЦикла;
		
		// Затем выведем пустые места для подписей (чтобы в итоге получилось не менее 3-х
		// подписей, как в форме, утвержденной Госкомстатом)
		Если ДанныеМОЛ.Количество() < 3 Тогда
			
			ПодписьСПримечанием = Новый Массив;
			ПодписьСПримечанием.Добавить(Подпись);
			ПодписьСПримечанием.Добавить(Примечание);
			
			Если НЕ ОбщегоНазначения.ПроверитьВыводТабличногоДокумента(ТабличныйДокумент, ПодписьСПримечанием) Тогда
				
				// Выведем примечание
				ТабличныйДокумент.Вывести(Примечание);
				ВыводитьПримечание = Ложь;
				
				// Выведем разрыв страницы
				ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
				ВыводитьЗаголовок = Истина; // на новой странице выведем заголовок набора подписей
				
			КонецЕсли;
			
			Для Итератор = ДанныеМОЛ.Количество() + 1 По 3 Цикл
				
				Подпись.Параметры.ЗаголовокРазделаПодписей = ?(ВыводитьЗаголовок, ЗаголовокРазделаПодписей.МОЛ, "");
				Подпись.Параметры.Должность                = "";
				Подпись.Параметры.РасшифровкаПодписи       = "";
				
				ТабличныйДокумент.Вывести(Подпись);
				
				ВыводитьЗаголовок = Ложь; // в следующей итерации вывод заголовка не нужен
				
			КонецЦикла;
			
		КонецЕсли;
		
		// Выведем примечание
		Если ВыводитьПримечание Тогда
			ТабличныйДокумент.Вывести(Примечание);
		КонецЕсли;
		
		// Выведем разрыв страницы
		ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		
		//////////////////////////////////////////////////////////////////////
		// 2-я страница формы
		
		// Выведем заголовок таблицы	
		ТабличныйДокумент.Вывести(ЗаголовокТаблицы);
		
		ПорядковыйНомерИтогов = 1; // счетчик количества итоговых строк в таблице
		
		НаличиеФактическоеПоСтранице          = 0;
		СтоимостьФактическаяПоСтранице        = 0;
		НаличиеПоДаннымУчетаПоСтранице        = 0;
		СтоимостьПоДаннымУчетаПоСтранице      = 0;
		КоличествоПорядковыхНомеровНаСтранице = 0;
		
		НаличиеФактическоеПоОписи          = 0;
		СтоимостьФактическаяПоОписи        = 0;
		КоличествоПорядковыхНомеровПоОписи = 0;
		
		// Выведем строки таблицы
		
		Если Док.КоличествоОС > 0 Тогда
			
			Пока Док.Следующий() Цикл
				
				СтрокаТаблицы = Макет.ПолучитьОбласть("СтрокаТаблицы");
				
				СтрокаТаблицы.Параметры.Заполнить(Док);
				
				// Присвоим имена с номерами строк областям таблицы.
				// Номера потребуются для включения/отключения видимости значений в ячейках.
				СтрокаТаблицы.Области.НаличиеФактическое.Имя     = "НаличиеФактическое"        + Формат(Док.НомерСтроки, "ЧДЦ=0; ЧН=; ЧГ=");
				СтрокаТаблицы.Области.СтоимостьФактическая.Имя   = "СтоимостьФактическая"      + Формат(Док.НомерСтроки, "ЧДЦ=0; ЧН=; ЧГ=");
				СтрокаТаблицы.Области.НаличиеПоДаннымУчета.Имя   = "НаличиеПоДаннымУчета"      + Формат(Док.НомерСтроки, "ЧДЦ=0; ЧН=; ЧГ=");
				СтрокаТаблицы.Области.СтоимостьПоДаннымУчета.Имя = "СтоимостьПоДаннымУчета"    + Формат(Док.НомерСтроки, "ЧДЦ=0; ЧН=; ЧГ=");
				
				СтрокаСПодвалом = Новый Массив;
				СтрокаСПодвалом.Добавить(СтрокаТаблицы);
				СтрокаСПодвалом.Добавить(ИтогоПоСтранице);
				СтрокаСПодвалом.Добавить(Итоги);
				
				Если НЕ ОбщегоНазначения.ПроверитьВыводТабличногоДокумента(ТабличныйДокумент, СтрокаСПодвалом) Тогда
					
					ИтогоПоСтранице = Макет.ПолучитьОбласть("ИтогоПоСтранице");
					
					// Присвоим имена с порядковыми номерами итогов областям таблицы.
					// Номера потребуются для включения/отключения видимости значений в ячейках.
					ИтогоПоСтранице.Области.ИтогНаличиеФактическое.Имя     = "ИтогНаличиеФактическое"     + Формат(ПорядковыйНомерИтогов, "ЧДЦ=0; ЧН=; ЧГ=");
					ИтогоПоСтранице.Области.ИтогСтоимостьФактическая.Имя   = "ИтогСтоимостьФактическая"   + Формат(ПорядковыйНомерИтогов, "ЧДЦ=0; ЧН=; ЧГ=");
					ИтогоПоСтранице.Области.ИтогНаличиеПоДаннымУчета.Имя   = "ИтогНаличиеПоДаннымУчета"   + Формат(ПорядковыйНомерИтогов, "ЧДЦ=0; ЧН=; ЧГ=");
					ИтогоПоСтранице.Области.ИтогСтоимостьПоДаннымУчета.Имя = "ИтогСтоимостьПоДаннымУчета" + Формат(ПорядковыйНомерИтогов, "ЧДЦ=0; ЧН=; ЧГ=");
					
					// Выведем заголовок итогов по странице
					ИтогоПоСтранице.Параметры.ИтогСтоимостьФактическая   = СтоимостьФактическаяПоСтранице;
					ИтогоПоСтранице.Параметры.ИтогНаличиеФактическое     = НаличиеФактическоеПоСтранице;
					ИтогоПоСтранице.Параметры.ИтогСтоимостьПоДаннымУчета = СтоимостьПоДаннымУчетаПоСтранице;
					ИтогоПоСтранице.Параметры.ИтогНаличиеПоДаннымУчета   = НаличиеПоДаннымУчетаПоСтранице;
					
					ТабличныйДокумент.Вывести(ИтогоПоСтранице);
					
					Итоги = Макет.ПолучитьОбласть("Итоги");
					
					// Присвоим имена с порядковыми номерами итогов областям таблицы.
					// Номера потребуются для включения/отключения видимости значений в ячейках.
					Итоги.Области.КоличествоФактическоеПрописью.Имя   = "КоличествоФактическоеПрописью" + Формат(ПорядковыйНомерИтогов, "ЧДЦ=0; ЧН=; ЧГ=");
					Итоги.Области.СтоимостьФактическаяПрописью.Имя    = "СтоимостьФактическаяПрописью"  + Формат(ПорядковыйНомерИтогов, "ЧДЦ=0; ЧН=; ЧГ=");
					
					КоличествоФактическоеПрописью = ЧислоПрописью(НаличиеФактическоеПоСтранице,, ",,,ж,,,,,0");
					СтоимостьФактическаяПрописью  = ОбщегоНазначенияБПВызовСервера.СформироватьСуммуПрописью(СтоимостьФактическаяПоСтранице, ВалютаРегламентированногоУчета);
					
					// Выведем итоговые строки
					Итоги.Параметры.КоличествоПорядковыхНомеровПрописью = ЧислоПрописью(КоличествоПорядковыхНомеровНаСтранице,, ",,,м,,,,,0");
					Итоги.Параметры.КоличествоФактическоеПрописью       = КоличествоФактическоеПрописью;
					Итоги.Параметры.СтоимостьФактическаяПрописью        = СтоимостьФактическаяПрописью;
					
					ТабличныйДокумент.Вывести(Итоги);
					
					// Добавим значения итогов по странице в таблицу итогов.
					// Они потребуются при включении видимости значений ячеек.
					НоваяСтрока = ТаблицаИтогов.Добавить();
					НоваяСтрока.ПорядковыйНомерИтогов         = ПорядковыйНомерИтогов;
					НоваяСтрока.ИтогНаличиеФактическое        = НаличиеФактическоеПоСтранице;
					НоваяСтрока.ИтогСтоимостьФактическая      = СтоимостьФактическаяПоСтранице;
					НоваяСтрока.ИтогНаличиеПоДаннымУчета      = НаличиеПоДаннымУчетаПоСтранице;
					НоваяСтрока.ИтогСтоимостьПоДаннымУчета    = СтоимостьПоДаннымУчетаПоСтранице;
					НоваяСтрока.КоличествоФактическоеПрописью = КоличествоФактическоеПрописью;
					НоваяСтрока.СтоимостьФактическаяПрописью  = СтоимостьФактическаяПрописью;
					
					ПорядковыйНомерИтогов = ПорядковыйНомерИтогов + 1;
					
					// Выведем разрыв страницы
					ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
					
					// Выведем заголовок таблицы	
					ТабличныйДокумент.Вывести(ЗаголовокТаблицы);
					
					НаличиеФактическоеПоСтранице          = 0;
					СтоимостьФактическаяПоСтранице        = 0;
					НаличиеПоДаннымУчетаПоСтранице        = 0;
					СтоимостьПоДаннымУчетаПоСтранице      = 0;
					КоличествоПорядковыхНомеровНаСтранице = 0;
					
				КонецЕсли;
				
				ТабличныйДокумент.Вывести(СтрокаТаблицы);
				
				НаличиеФактическоеПоСтранице          	= НаличиеФактическоеПоСтранице          + Док.НаличиеФактическое;
				СтоимостьФактическаяПоСтранице        	= СтоимостьФактическаяПоСтранице        + Док.СтоимостьФактическая;
				НаличиеПоДаннымУчетаПоСтранице        	= НаличиеПоДаннымУчетаПоСтранице        + Док.НаличиеПоДаннымУчета;
				СтоимостьПоДаннымУчетаПоСтранице      	= СтоимостьПоДаннымУчетаПоСтранице      + Док.СтоимостьПоДаннымУчета;
				КоличествоПорядковыхНомеровНаСтранице 	= КоличествоПорядковыхНомеровНаСтранице + 1;
				
				НаличиеФактическоеПоОписи          		= НаличиеФактическоеПоОписи 			+ Док.НаличиеФактическое;
				СтоимостьФактическаяПоОписи        		= СтоимостьФактическаяПоОписи 			+ Док.СтоимостьФактическая;
				КоличествоПорядковыхНомеровПоОписи 		= КоличествоПорядковыхНомеровПоОписи 	+ 1;
				
			КонецЦикла;
			
		КонецЕсли;
		
		ИтогоПоСтранице = Макет.ПолучитьОбласть("ИтогоПоСтранице");
		
		// Присвоим имена с порядковыми номерами итогов областям таблицы.
		// Номера потребуются для включения/отключения видимости значений в ячейках.
		ИтогоПоСтранице.Области.ИтогНаличиеФактическое.Имя     	= "ИтогНаличиеФактическое"     	+ Формат(ПорядковыйНомерИтогов, "ЧДЦ=0; ЧН=; ЧГ=");
		ИтогоПоСтранице.Области.ИтогСтоимостьФактическая.Имя   	= "ИтогСтоимостьФактическая"   	+ Формат(ПорядковыйНомерИтогов, "ЧДЦ=0; ЧН=; ЧГ=");
		ИтогоПоСтранице.Области.ИтогНаличиеПоДаннымУчета.Имя   	= "ИтогНаличиеПоДаннымУчета"   	+ Формат(ПорядковыйНомерИтогов, "ЧДЦ=0; ЧН=; ЧГ=");
		ИтогоПоСтранице.Области.ИтогСтоимостьПоДаннымУчета.Имя 	= "ИтогСтоимостьПоДаннымУчета" 	+ Формат(ПорядковыйНомерИтогов, "ЧДЦ=0; ЧН=; ЧГ=");
		
		// Выведем заголовок итогов по странице
		ИтогоПоСтранице.Параметры.ИтогСтоимостьФактическая   	= СтоимостьФактическаяПоСтранице;
		ИтогоПоСтранице.Параметры.ИтогНаличиеФактическое     	= НаличиеФактическоеПоСтранице;
		ИтогоПоСтранице.Параметры.ИтогСтоимостьПоДаннымУчета 	= СтоимостьПоДаннымУчетаПоСтранице;
		ИтогоПоСтранице.Параметры.ИтогНаличиеПоДаннымУчета   	= НаличиеПоДаннымУчетаПоСтранице;
		
		ТабличныйДокумент.Вывести(ИтогоПоСтранице);
		
		Итоги = Макет.ПолучитьОбласть("Итоги");	
		
		// Присвоим имена с порядковыми номерами итогов областям таблицы.
		// Номера потребуются для включения/отключения видимости значений в ячейках.
		Итоги.Области.КоличествоФактическоеПрописью.Имя  = "КоличествоФактическоеПрописью" 	+ ПорядковыйНомерИтогов;
		Итоги.Области.СтоимостьФактическаяПрописью.Имя   = "СтоимостьФактическаяПрописью" 	+ ПорядковыйНомерИтогов;
		
		КоличествоФактическоеПрописью = ЧислоПрописью(НаличиеФактическоеПоСтранице,, ",,,ж,,,,,0");
		СтоимостьФактическаяПрописью  = ОбщегоНазначенияБПВызовСервера.СформироватьСуммуПрописью(СтоимостьФактическаяПоСтранице, ВалютаРегламентированногоУчета);
		
		// Выведем итоговые строки
		Итоги.Параметры.КоличествоПорядковыхНомеровПрописью = ЧислоПрописью(КоличествоПорядковыхНомеровНаСтранице,, ",,,м,,,,,0");
		Итоги.Параметры.КоличествоФактическоеПрописью       = КоличествоФактическоеПрописью;
		Итоги.Параметры.СтоимостьФактическаяПрописью        = СтоимостьФактическаяПрописью;
		
		ТабличныйДокумент.Вывести(Итоги);
		
		// Добавим значения итогов по странице в таблицу итогов.
		// Они потребуются при включении видимости значений ячеек.
		НоваяСтрока = ТаблицаИтогов.Добавить();
		НоваяСтрока.ПорядковыйНомерИтогов         = ПорядковыйНомерИтогов;
		НоваяСтрока.ИтогНаличиеФактическое        = НаличиеФактическоеПоСтранице;
		НоваяСтрока.ИтогСтоимостьФактическая      = СтоимостьФактическаяПоСтранице;
		НоваяСтрока.ИтогНаличиеПоДаннымУчета      = НаличиеПоДаннымУчетаПоСтранице;
		НоваяСтрока.ИтогСтоимостьПоДаннымУчета    = СтоимостьПоДаннымУчетаПоСтранице;
		НоваяСтрока.КоличествоФактическоеПрописью = КоличествоФактическоеПрописью;
		НоваяСтрока.СтоимостьФактическаяПрописью  = СтоимостьФактическаяПрописью;
		
		ПорядковыйНомерИтогов = ПорядковыйНомерИтогов + 1;
		
		// Выведем разрыв страницы
		ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		
		//////////////////////////////////////////////////////////////////////
		// 3-я страница формы
		
		// Выведем заголовок итогов по описи
		ТабличныйДокумент.Вывести(ИтогоПоОписи);
		
		Итоги = Макет.ПолучитьОбласть("Итоги");
		
		// Присвоим имена с порядковыми номерами итогов областям таблицы.
		// Номера потребуются для включения/отключения видимости значений в ячейках.
		Итоги.Области.КоличествоФактическоеПрописью.Имя   	= "КоличествоФактическоеПрописьюПоОписи";
		Итоги.Области.СтоимостьФактическаяПрописью.Имя    	= "СтоимостьФактическаяПрописьюПоОписи";
		
		// Выведем итоговые строки
		Итоги.Параметры.КоличествоПорядковыхНомеровПрописью = ЧислоПрописью(КоличествоПорядковыхНомеровПоОписи,, ",,,м,,,,,0");
		Итоги.Параметры.КоличествоФактическоеПрописью       = ЧислоПрописью(НаличиеФактическоеПоОписи,, ",,,ж,,,,,0");
		Итоги.Параметры.СтоимостьФактическаяПрописью        = ОбщегоНазначенияБПВызовСервера.СформироватьСуммуПрописью(СтоимостьФактическаяПоОписи, ВалютаРегламентированногоУчета);
		
		ТабличныйДокумент.Вывести(Итоги);
		
		// Выведем фразу о подсчетах
		ТабличныйДокумент.Вывести(Подсчеты);
		
		ИнвентаризационнаяКомиссия.СледующийПоЗначениюПоля("Ссылка");
		
		ВыводитьЗаголовок = Истина;
		КоличествоЧленовКомиссии = 0;
		
		Пока ИнвентаризационнаяКомиссия.Следующий() Цикл
			
			Если КоличествоЧленовКомиссии > 0 Тогда
				
				Если НЕ ОбщегоНазначения.ПроверитьВыводТабличногоДокумента(ТабличныйДокумент, Подпись) Тогда
					
					// Выведем разрыв страницы
					ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
					ВыводитьЗаголовок = Истина; // на новой странице выведем заголовок набора подписей
					
				КонецЕсли;
				
				Подпись.Параметры.ЗаголовокРазделаПодписей = ?(ВыводитьЗаголовок, ЗаголовокРазделаПодписей.ЧленыКомиссии, "");
				ВыводитьЗаголовок = Ложь; // в следующей итерации вывод заголовка не нужен
				
			Иначе
				Подпись.Параметры.ЗаголовокРазделаПодписей = ЗаголовокРазделаПодписей.ПредседательКомиссии;
			КонецЕсли;
			
			КоличествоЧленовКомиссии = КоличествоЧленовКомиссии + 1;
			
			ДанныеЧленаКомиссии = ОбщегоНазначенияБПВызовСервера.ДанныеФизЛица(Док.Организация, ИнвентаризационнаяКомиссия.ФизЛицо, Док.Дата);
			
			Подпись.Параметры.Должность          = ИнвентаризационнаяКомиссия.Должность;
			Подпись.Параметры.РасшифровкаПодписи = ДанныеЧленаКомиссии.Представление;
			
			ТабличныйДокумент.Вывести(Подпись);
			
		КонецЦикла;
		
		// Затем выведем пустые места для подписей (чтобы в итоге получилось не менее 3-х
		// подписей, как в форме, утвержденной Госкомстатом)
		Если КоличествоЧленовКомиссии < 4 Тогда
			
			Если НЕ ОбщегоНазначения.ПроверитьВыводТабличногоДокумента(ТабличныйДокумент, Подпись) Тогда
				
				// Выведем разрыв страницы
				ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
				ВыводитьЗаголовок = Истина; // на новой странице выведем заголовок набора подписей
				
			КонецЕсли;
			
			Для Итератор = КоличествоЧленовКомиссии + 1 По 4 Цикл
				
				Подпись.Параметры.ЗаголовокРазделаПодписей = ?(ВыводитьЗаголовок, ЗаголовокРазделаПодписей.ЧленыКомиссии, "");
				Подпись.Параметры.Должность                = "";
				Подпись.Параметры.РасшифровкаПодписи       = "";
				
				ТабличныйДокумент.Вывести(Подпись);
				
				ВыводитьЗаголовок = Ложь; // в следующей итерации вывод заголовка не нужен
				
			КонецЦикла;
			
		КонецЕсли;
		
		// Перед выводом следующего набора подписей, нужно проверить, поместится ли он
		// на страницу целиком. Если нет, нужно начать вывод со следующей страницы.
		
		// Создаем массив строк для проверки, помещаются ли они на страницу
		СтрокаСПодвалом = Новый Массив;
		СтрокаСПодвалом.Добавить(Претензии);
		Для Итератор = 1 По ДанныеМОЛ.Количество() Цикл
			СтрокаСПодвалом.Добавить(Подпись);
		КонецЦикла;
		СтрокаСПодвалом.Добавить(ПолеДаты);
		СтрокаСПодвалом.Добавить(Подпись);
		СтрокаСПодвалом.Добавить(ПолеДаты);
		
		// Если планируемый набор подписей не помещается, начинаем новую страницу
		Если НЕ ОбщегоНазначения.ПроверитьВыводТабличногоДокумента(ТабличныйДокумент, СтрокаСПодвалом) Тогда
			
			// Выведем разрыв страницы
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			
		КонецЕсли;
		
		// Выведем раздел об отсутствии претензий МОЛов
		Если Док.Количество() > 0 Тогда
			Претензии.Параметры.НомерСтрокиНачальный = 1;
			Претензии.Параметры.НомерСтрокиКонечный  = Док.КоличествоОС;
		Иначе	
			Претензии.Параметры.НомерСтрокиНачальный = "______";
			Претензии.Параметры.НомерСтрокиКонечный  = "______";
		КонецЕсли;
		
		ТабличныйДокумент.Вывести(Претензии);
		
		// Выведем подписи МОЛов
		ВыводитьЗаголовок = Истина;
		
		// Сначала выведем МОЛов из выборки
		Для каждого СтрокаМОЛ Из ДанныеМОЛ Цикл
			
			ПодписьСДатой = Новый Массив;
			ПодписьСДатой.Добавить(Подпись);
			ПодписьСДатой.Добавить(ПолеДаты);
			
			Если НЕ ОбщегоНазначения.ПроверитьВыводТабличногоДокумента(ТабличныйДокумент, ПодписьСДатой) Тогда
				
				// Выведем разрыв страницы
				ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
				ВыводитьЗаголовок = Истина; // на новой странице выведем заголовок набора подписей
				
			КонецЕсли;
			
			Подпись.Параметры.ЗаголовокРазделаПодписей = ?(ВыводитьЗаголовок, ЗаголовокРазделаПодписей.МОЛ, "");
			Подпись.Параметры.Должность                = СтрокаМОЛ.Должность;
			Подпись.Параметры.РасшифровкаПодписи       = СтрокаМОЛ.Представление;
			
			ТабличныйДокумент.Вывести(Подпись);
			
			ВыводитьЗаголовок = Ложь; // в следующей итерации вывод заголовка не нужен
			
		КонецЦикла;
		
		// Затем выведем пустые места для подписей (чтобы в итоге получилось не менее 3-х
		// подписей, как в форме, утвержденной Госкомстатом)
		Если ДанныеМОЛ.Количество() < 3 Тогда
			
			ПодписьСДатой = Новый Массив;
			ПодписьСДатой.Добавить(Подпись);
			ПодписьСДатой.Добавить(ПолеДаты);
			
			Если НЕ ОбщегоНазначения.ПроверитьВыводТабличногоДокумента(ТабличныйДокумент, ПодписьСДатой) Тогда
				
				// Выведем разрыв страницы
				ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
				ВыводитьЗаголовок = Истина; // на новой странице выведем заголовок набора подписей
				
			КонецЕсли;
			
			Для Итератор = (ДанныеМОЛ.Количество() + 1) По 3 Цикл
				
				Подпись.Параметры.ЗаголовокРазделаПодписей = ?(ВыводитьЗаголовок, ЗаголовокРазделаПодписей.МОЛ, "");
				Подпись.Параметры.Должность                = "";
				Подпись.Параметры.РасшифровкаПодписи       = "";
				
				ТабличныйДокумент.Вывести(Подпись);
				
				ВыводитьЗаголовок = Ложь; // в следующей итерации вывод заголовка не нужен
				
			КонецЦикла;
			
		КонецЕсли;
		
		// Выведем строку с полем для заполнения даты
		ПолеДаты.Параметры.Дата = Формат(Док.Дата, "ДЛФ=DD");
		ТабличныйДокумент.Вывести(ПолеДаты);
		
		// Проверим, поместится ли проверяющий, если нет, то начнем новую страницу
		ПодписьСДатой = Новый Массив;
		ПодписьСДатой.Добавить(Подпись);
		ПодписьСДатой.Добавить(ПолеДаты);
		
		Если НЕ ОбщегоНазначения.ПроверитьВыводТабличногоДокумента(ТабличныйДокумент, ПодписьСДатой) Тогда
			
			// Выведем разрыв страницы
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			ВыводитьЗаголовок = Истина; // на новой странице выведем заголовок набора подписей
			
		КонецЕсли;
		
		// Выведем подпись проверяющего
		Подпись.Параметры.ЗаголовокРазделаПодписей = ЗаголовокРазделаПодписей.Проверяющий;
		
		ТабличныйДокумент.Вывести(Подпись);
		
		// Выведем строку с полем для заполнения даты
		ПолеДаты.Параметры.Дата = НСтр("ru = '""______"" ___________________________ _______ г.'");
		ТабличныйДокумент.Вывести(ПолеДаты);
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, Док.Ссылка);
		
	КонецЦикла;
	
	Если НЕ ОбработаныОбъекты Тогда 
		
		Шаблон = МассивОбъектов[0];
		
		ТабличныйДокумент.Вывести(Шапка);
		ТабличныйДокумент.Вывести(Расписка);
		ТабличныйДокумент.Вывести(Итоги);	 
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, ТабличныйДокумент.ВысотаТаблицы + 1, ОбъектыПечати, Шаблон);  
		
	КонецЕсли; 
	
	Возврат ТабличныйДокумент;
	
КонецФункции