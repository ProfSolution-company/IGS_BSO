
&НаКлиенте
Процедура ПутьКФайлуНачалоВыбора(Элемент, ДанныеВыбора, ВыборДобавлением, СтандартнаяОбработка)
	
	СтандартнаяОбработка = ЛОжь;
	ДиалогОткрыванияФайла = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.ВыборКаталога);
	ДиалогОткрыванияФайла.ПроверятьСуществованиеФайла = Истина;
	
	Если ДиалогОткрыванияФайла.Выбрать() Тогда
		ПутьКФайлу = ДиалогОткрыванияФайла.Каталог;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция  ВыгрузитьНаСервере(Период, Организация, Проект, ПутьКФайлу)
	
	ВысотаТаблицы = 5024;
	
	ЗапросПроекты = Новый Запрос;
	Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	НоменклатурныеГруппы.Код КАК кодЭтапа,
	|	НоменклатурныеГруппы.Наименование КАК Этап,
	|	НоменклатурныеГруппы.Родитель КАК Скважина,
	|	НоменклатурныеГруппы.Родитель.Родитель КАК Куст,
	|	НоменклатурныеГруппы.Родитель.Родитель.Родитель КАК Месторождение,
	|	НоменклатурныеГруппы.Родитель.Родитель.Родитель.Родитель КАК Проект,
	|	НоменклатурныеГруппы.Родитель.Родитель.Родитель.Родитель.Наименование КАК ПроектНаименование
	|ИЗ
	|	Справочник.НоменклатурныеГруппы КАК НоменклатурныеГруппы
	|ГДЕ
	|	НЕ НоменклатурныеГруппы.ЭтоГруппа
	|	И НЕ НоменклатурныеГруппы.ПометкаУдаления
	|	И НоменклатурныеГруппы.Родитель.Родитель.Родитель.Родитель.Ссылка <> &ПустаяСсылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	ПроектНаименование,
	|	Скважина,
	|	Этап
	|ИТОГИ ПО
	|	Проект,
	|	Месторождение,
	|	Куст,
	|	Скважина";
	
	Попытка
		
		ПутьКСервису =  ПланыВидовХарактеристик.игсНастройкиМеханизмов.ПутьКWebСервисуERP;
		ВебСервис = игсНастройкиМеханизмовВызовСервера.ПолучитьЗначениеНастройки(ПутьКСервису,Организация);
		
		Логин = Строка(
		ОбщегоНазначения.ПрочитатьДанныеИзБезопасногоХранилища(ОбщегоНазначения.ИдентификаторОбъектаМетаданных("РегистрСведений.игсНастройкиМеханизмов"),
		"Логин"));
		
		Пароль = Строка(
		ОбщегоНазначения.ПрочитатьДанныеИзБезопасногоХранилища(ОбщегоНазначения.ИдентификаторОбъектаМетаданных("РегистрСведений.игсНастройкиМеханизмов"),
		"Пароль")); 
		
		Если Логин = "" Или Пароль = "" Тогда  			
			ОбщегоНазначения.СообщитьПользователю("Не заполнены логин и пароль для подключения к программе ERP МТО!");
			Возврат Неопределено;
		КонецЕсли;
		
		Определения = Новый WSОпределения(ВебСервис, Логин, Пароль);
		
		Прокси = Новый WSПрокси(Определения, "http://127.0.0.1", "IGS", "IGSSoap");
		Прокси.Пользователь = Логин;
		Прокси.Пароль = Пароль;		
		
		ТабРезультат = Прокси.GetListStages(Период);
		
		Список = Новый Массив;
		
		Для Каждого СтрокаТЗ ИЗ ТабРезультат.List Цикл 
			Список.Добавить(СтрокаТЗ.StageText);
		КонецЦикла;	
		
		ЗапросПроекты.УстановитьПараметр("Наименование", Список);
		
		Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	НоменклатурныеГруппы.Код КАК кодЭтапа,
		|	НоменклатурныеГруппы.Наименование КАК Этап,
		|	НоменклатурныеГруппы.Родитель КАК Скважина,
		|	НоменклатурныеГруппы.Родитель.Родитель КАК Куст,
		|	НоменклатурныеГруппы.Родитель.Родитель.Родитель КАК Месторождение,
		|	НоменклатурныеГруппы.Родитель.Родитель.Родитель.Родитель КАК Проект,
		|	НоменклатурныеГруппы.Родитель.Родитель.Родитель.Родитель.Наименование КАК ПроектНаименование
		|ИЗ
		|	Справочник.НоменклатурныеГруппы КАК НоменклатурныеГруппы
		|ГДЕ
		|	НЕ НоменклатурныеГруппы.ЭтоГруппа
		|	И НЕ НоменклатурныеГруппы.ПометкаУдаления
		|	И НоменклатурныеГруппы.Родитель.Родитель.Родитель.Родитель.Ссылка <> &ПустаяСсылка
		|	И НоменклатурныеГруппы.Наименование В(&Наименование)
		|
		|УПОРЯДОЧИТЬ ПО
		|	ПроектНаименование,
		|	Скважина,
		|	Этап
		|ИТОГИ ПО
		|	Проект,
		|	Месторождение,
		|	Куст,
		|	Скважина";
		
	Исключение
		
		Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		|	клЭтапыСтроительстваЭтапы.НоменклатурнаяГруппа
		|ПОМЕСТИТЬ ВТ_СписокАктивных
		|ИЗ
		|	Документ.игсСправкаПТО.Этапы КАК клЭтапыСтроительстваЭтапы
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.игсСправкаПТО КАК клЭтапыСтроительства
		|		ПО клЭтапыСтроительстваЭтапы.Ссылка = клЭтапыСтроительства.Ссылка
		|			И (клЭтапыСтроительства.Дата МЕЖДУ &НачалоПериода И &ОкончаниеПериода)
		|			И (НЕ клЭтапыСтроительстваЭтапы.НоменклатурнаяГруппа = ЗНАЧЕНИЕ(Справочник.НоменклатурныеГруппы.ПустаяСсылка))
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	НоменклатурныеГруппы.Код КАК кодЭтапа,
		|	НоменклатурныеГруппы.Наименование КАК Этап,
		|	НоменклатурныеГруппы.Родитель КАК Скважина,
		|	НоменклатурныеГруппы.Родитель.Родитель КАК Куст,
		|	НоменклатурныеГруппы.Родитель.Родитель.Родитель КАК Месторождение,
		|	НоменклатурныеГруппы.Родитель.Родитель.Родитель.Родитель КАК Проект,
		|	НоменклатурныеГруппы.Родитель.Родитель.Родитель.Родитель.Наименование КАК ПроектНаименование
		|ИЗ
		|	Справочник.НоменклатурныеГруппы КАК НоменклатурныеГруппы
		|ГДЕ
		|	НЕ НоменклатурныеГруппы.ЭтоГруппа
		|	И НЕ НоменклатурныеГруппы.ПометкаУдаления
		|	И НоменклатурныеГруппы.Родитель.Родитель.Родитель.Родитель.Ссылка <> &ПустаяСсылка
		|	И НоменклатурныеГруппы.Ссылка В
		|			(ВЫБРАТЬ
		|				ВТ_СписокАктивных.НоменклатурнаяГруппа
		|			ИЗ
		|				ВТ_СписокАктивных КАК ВТ_СписокАктивных)
		|
		|УПОРЯДОЧИТЬ ПО
		|	ПроектНаименование,
		|	Скважина,
		|	Этап
		|ИТОГИ ПО
		|	Проект,
		|	Месторождение,
		|	Куст,
		|	Скважина";
	КонецПопытки; 	
	
	ЗапросПроекты.Текст = Текст;
	ЗапросПроекты.УстановитьПараметр("НачалоПериода", 		ДобавитьМесяц(ТекущаяДата(),-3));
	ЗапросПроекты.УстановитьПараметр("ОкончаниеПериода", 	КонецМесяца(ТекущаяДата()));
	ЗапросПроекты.УстановитьПараметр("ПроектРодитель", 		Проект);
	ЗапросПроекты.УстановитьПараметр("ПустаяСсылка", 		Справочники.НоменклатурныеГруппы.ПустаяСсылка());
	
	
	ДеревоЗнач = ЗапросПроекты.Выполнить().Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкам);
	ЗначениеВРеквизитФормы(ДеревоЗнач, "ДеревоДанных"); 
	
КонецФункции 

&НаСервере
Функция ОстатокДолото(Организация)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СпрНоменклатура.Код КАК Код,
	|	ПРЕДСТАВЛЕНИЕ(ХозрасчетныйОстатки.Субконто1) КАК Номенклатура,
	|	ПРЕДСТАВЛЕНИЕ(ХозрасчетныйОстатки.Субконто2) КАК Склад,
	|	ХозрасчетныйОстатки.КоличествоОстаток КАК КоличествоОстаток,
	|	ХозрасчетныйОстатки.СуммаОстаток КАК СуммаОстаток,
	|	ХозрасчетныйОстатки.Субконто1 КАК Субконто1,
	|	ХозрасчетныйОстатки.Субконто2 КАК Субконто2,
	|	""в эксплуатации"" КАК Статус
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Остатки(, Счет = &Счет1018, &Субконто, ) КАК ХозрасчетныйОстатки
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СпрНоменклатура
	|		ПО ХозрасчетныйОстатки.Субконто1 = СпрНоменклатура.Ссылка
	|ГДЕ
	|	ХозрасчетныйОстатки.Организация = &Организация
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СпрНоменклатура.Код,
	|	ПРЕДСТАВЛЕНИЕ(ХозрасчетныйОстатки.Субконто1),
	|	ПРЕДСТАВЛЕНИЕ(ХозрасчетныйОстатки.Субконто2),
	|	ХозрасчетныйОстатки.КоличествоОстаток,
	|	ХозрасчетныйОстатки.СуммаОстаток,
	|	ХозрасчетныйОстатки.Субконто1,
	|	ХозрасчетныйОстатки.Субконто2,
	|	""не введен в эксплуатацию""
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Остатки(
	|			,
	|			Счет В ИЕРАРХИИ (&Счет10)
	|				И Счет <> &Счет1018,
	|			&Субконто,
	|			ВЫРАЗИТЬ(Субконто1 КАК Справочник.Номенклатура).Наименование ПОДОБНО ""Долото%"") КАК ХозрасчетныйОстатки
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СпрНоменклатура
	|		ПО ХозрасчетныйОстатки.Субконто1 = СпрНоменклатура.Ссылка
	|ГДЕ
	|	ХозрасчетныйОстатки.Организация = &Организация
	|
	|УПОРЯДОЧИТЬ ПО
	|	Субконто2,
	|	Субконто1
	|АВТОУПОРЯДОЧИВАНИЕ";
	
	Запрос.УстановитьПараметр("Счет10", 		ПланыСчетов.Хозрасчетный.Материалы);
	Запрос.УстановитьПараметр("Счет1018", 		ПланыСчетов.Хозрасчетный.игсДолотоВЭксплуатации);
	Запрос.УстановитьПараметр("Организация", 	Организация);
	
	Субконто = Новый Массив();
	Субконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Номенклатура);
	Субконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Склады);
	Запрос.УстановитьПараметр("Субконто", Субконто);
	
	Результат 	= Запрос.Выполнить();
	Выборка 	= Результат.Выгрузить();
	
	Выборка = ОбщегоНазначения.ТаблицаЗначенийВМассив(Выборка);
	Возврат Выборка;
	
КонецФункции 


&НаКлиенте
Процедура Выгрузить(Команда)
	
	Период = Объект.Период;
	Организация = Объект.Организация;
	Проект = Объект.Проект;
	Отказ = Ложь;
	
	Если НЕ ЗначениеЗаполнено(Период) Тогда
		Отказ = Истина;
		ОбщегоНазначенияКлиент.СообщитьПользователю("Период не выбран", , "Объект.Период");
	КОнецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Организация) Тогда
		Отказ = Истина;
		ОбщегоНазначенияКлиент.СообщитьПользователю("Организация не выбрана", , "Объект.Организация");
	КОнецЕсли;
	
	Если НЕ ЗначениеЗаполнено(ПутьКФайлу) Тогда
		Отказ = Истина;
		ОбщегоНазначенияКлиент.СообщитьПользователю("Каталог для сохранения выгрузки не выбран", , "ПутьКФайлу");
	КОнецЕсли;
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	Эксель = Новый COMОбъект("Excel.Application");
	Эксель.Visible = 0;
	Эксель.DisplayAlerts = 0;
	
	ПутьКШаблону = КаталогВременныхФайлов() + Строка(Новый УникальныйИдентификатор) + ".xlsx";
	Макет = УстановитьМакет();
	Попытка
		Макет.Записать(ПутьКШаблону);
	Исключение
		Сообщить("Ошибка при работе с файлом шаблона");
		Возврат;
	КонецПопытки;
	
	Попытка
		Книга = Эксель.Workbooks.Add(ПутьКШаблону);
	Исключение
		Сообщить("Не удалось создать книгу: " + ОписаниеОшибки());
		Эксель.Quit();
		Возврат;
	КонецПопытки;
	
	Попытка
		Лист2 = Книга.Sheets("C1"); 
		Лист3 = Книга.Sheets("C2"); 
		Лист4 = Книга.Sheets("C3"); 
		Лист5 = Книга.Sheets("C4"); 
		Ввод = Книга.Sheets("Ввод этапов");
	Исключение
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ОписаниеОшибки());
		Возврат;
	КонецПопытки; 
	
	СчетчикНоменклатура = 7;
	
	Выборка = ОстатокДолото(Организация);
	Для каждого Элемент Из Выборка Цикл
		
		Ввод.cells(СчетчикНоменклатура, 2).Value = Элемент.Номенклатура;
		Ввод.cells(СчетчикНоменклатура, 3).Value = Элемент.Склад;
		Ввод.cells(СчетчикНоменклатура, 4).Value = Элемент.Код;
		Ввод.cells(СчетчикНоменклатура, 5).Value = Элемент.Статус;
		СчетчикНоменклатура = СчетчикНоменклатура + 1;
		
	КонецЦикла;
	
	Ввод.cells(3,7).Value = НачалоДня(КонецМесяца(ТекущаяДата()));
	Ввод.cells(3,8).Value = НачалоДня(НачалоМесяца(ТекущаяДата()));
	Ввод.cells(3,9).Value = НачалоДня(КонецМесяца(ТекущаяДата()));
	
	сч = 25;
	
	счК = 1;
	сч3 = 0;
	счС = 0;
	счМест9 = 0;
	счМест10 = 0;
	СчПроект9 = 0;
	СчКуст = 0;
	
	СчДлины = 1;
	сч6 = 0;
	СчПроект = 0;
	
	СчПроект9 = 0;
	СчКолонок9 = 0;
	СчМест10 = 0;
	СчКолонок10 = 0;
	СчКуст11 = 0;
	СчКолонок11 = 0;
	СчСкважин2 = 0;
	СчКолонок2 = 0;
	
	ВыгрузитьНаСервере(Период, Организация, Проект, ПутьКФайлу); 
	РезультатПроекты = ДеревоДанных.ПолучитьЭлементы(); 
	Для каждого Проект ИЗ РезультатПроекты цикл
		
		счПроект9 = СчПроект9 + 1;
		СтрПроект = Проект.ПолучитьЭлементы();
		ПроектНаименование = Проект.ПроектНаименование + "_" + Проект.КодЭтапа;
		УдалитьНежелательныеСимволы(ПроектНаименование);
		
		Лист3.cells(СчПроект9,1).Value = ПроектНаименование;
		
		СчКолонок9 = 1;
		Для каждого Месторождение ИЗ СтрПроект Цикл
			
			СчКолонок10 = 1;
			СчКолонок9 = СчКолонок9 + 1;
			СчМест10 = СчМест10 + 1;
			счКолонок10 = 1;
			СтМесторождение =  Месторождение.ПолучитьЭлементы();
			
			МесторождениеНаименование = Месторождение.Месторождение + "_" + Месторождение.КодЭтапа;
			УдалитьНежелательныеСимволы(МесторождениеНаименование);
			
			Лист3.cells(СчПроект9,СчКолонок9).Value = МесторождениеНаименование;
			Лист4.cells(СчМест10,1).Value = МесторождениеНаименование;
			
			Для каждого Куст ИЗ СтМесторождение Цикл
				
				счКОлонок10 = СчКолонок10 + 1;
				счКуст11 = СчКуст11 + 1;
				СчКолонок11 = 1;
				СтКуст = Куст.ПолучитьЭлементы();
				КустНаименование = Куст.Куст + "_" + Куст.КодЭтапа;	
				УдалитьНежелательныеСимволы(КустНаименование);
				
				Лист4.cells(СчМест10,Счколонок10).Value = КустНаименование;
				Лист5.cells(СчКуст11,1).Value = КустНаименование;
				СчКолонок2 = 1;
				Для каждого Скважина Из СтКуст Цикл
					
					СтСкважина = Скважина.ПолучитьЭлементы();
					СкважинаНаименование = Скважина.Скважина + "_" + Скважина.КодЭтапа;
					СчКолонок11 = СчКолонок11+1;
					СчКолонок2 = 1;
					СчСкважин2 = СчСкважин2 + 1;
					
					УдалитьНежелательныеСимволы(СкважинаНаименование);
					Лист5.cells(СчКуст11,СчКолонок11).Value = СкважинаНаименование;
					Лист2.cells(СчСкважин2,1).Value = СкважинаНаименование;
					Для каждого Этап Из СтСкважина Цикл
						ЭтапНаименование = Этап.Этап + "_" + Этап.КодЭтапа;
						сч3 = сч3 + 1;
						СчКолонок2 = СчКолонок2 + 1;
						УдалитьНежелательныеСимволы(ЭтапНаименование);
						Лист2.cells(СчСкважин2,СчКолонок2).Value = ЭтапНаименование;
					КонецЦикла; 
					Если СчСкважин2 > 0 И Счколонок2 > 1 Тогда
						Книга.Names.Add(СкважинаНаименование,"=C1!R" + СчСкважин2 +"C2:R"+СчСкважин2 + "C" + СчКолонок2);
					КонецЕсли;
					
				КонецЦикла;
				
				Если СчКуст11 > 0 И Счколонок11 > 1 Тогда
					Книга.Names.Add(КустНаименование,"=C4!R" + СчКуст11 +"C2:R"+СчКуст11 + "C" + СчКолонок11);
				КонецЕсли;				
			КонецЦикла;	
			Если СчМест10 > 0 И Счколонок10 > 1 Тогда
				Книга.Names.Add(МесторождениеНаименование,"=C3!R" + СчМест10 +"C2:R"+СчМест10 + "C" + СчКолонок10);
			КонецЕсли;
			
		КонецЦикла;		
		Если СчКолонок9 > 1 Тогда
			Книга.Names.Add(ПроектНаименование,"=C2!R" + СчПроект9 +"C2:R"+СчПроект9 + "C" + СчКолонок9);
		КонецЕсли;
		
	КонецЦикла;
	
	Если СчПроект9 > 0 Тогда
		Книга.Names.Add("Проекты","=C2!R1C1:R"+СчПроект9 + "C1");
	КонецЕсли;
	
	Попытка				
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Завершена выгрузка номенклатурных групп " + ПутьКФайлу + "\Шаблон для отражения износа долот.xlsx");
	Исключение
	КонецПопытки;
	
	
	Попытка 	
		Книга.saveAs(ПутьКФайлу + "\Шаблон для отражения износа долот.xlsx"); 
		Книга.Close();
		Эксель.Quit();		
	Исключение 
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Произошла ошибка во время сохранения файла: "  + ОписаниеОшибки());
	КонецПопытки;
	
КонецПроцедуры 

&НаСервере
Функция УстановитьМакет()
	
	Макет = РеквизитФормыВЗначение("Объект").ПолучитьМакет("Шаблон");
	Возврат Макет;
	
КонецФункции

Процедура УдалитьНежелательныеСимволы(НаименованиеПроекта)
	
	НаименованиеПроекта = СтрЗаменить(НаименованиеПроекта," ","_");
	ДлинаНаименования = СтрДлина(НаименованиеПроекта);
	Для ит = 1 по ДлинаНаименования Цикл
		Код = КодСимвола(Сред(НаименованиеПроекта,ит,1));
		Если Код < 48 или (Код>57 И код<65) или (Код>90 И код<95) или (Код>95 И код<97) или (Код>122 И код<1040) или Код>1103 Тогда
			НаименованиеПроекта = СтрЗаменить(НаименованиеПроекта, Сред(НаименованиеПроекта,ит,1)," ");
		КонецЕсли;	
	КонецЦикла;
	НаименованиеПроекта = СтрЗаменить(НаименованиеПроекта, " ","");
	Если (КодСимвола(Лев(НаименованиеПроекта,1))) > 64 И (КодСимвола(Лев(НаименованиеПроекта,1))<123) Тогда
		НаименованиеПроекта = "_" + НаименованиеПроекта;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Объект.Период = ТекущаяДатаСеанса();
КонецПроцедуры

