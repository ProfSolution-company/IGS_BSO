
#Область ПрограммныйИнтерфейс

Функция СведенияОВнешнейОбработке() Экспорт
	
	// Заполнение ПараметровРегистрации
	ПараметрыРегистрации = ДополнительныеОтчетыИОбработки.СведенияОВнешнейОбработке("2.2.2.1");
	ПараметрыРегистрации.Вид = ДополнительныеОтчетыИОбработкиКлиентСервер.ВидОбработкиДополнительнаяОбработка();
	ПараметрыРегистрации.БезопасныйРежим = Истина;
	ПараметрыРегистрации.Наименование = "Перераспределение Счета №46"; 
	ПараметрыРегистрации.Версия = "1.0";
	ПараметрыРегистрации.Информация = "Обработка позволяет перераспределять средства внутри выполненных проектов,
	|используя документ ""Операции, введенны вручную"".
	|
	|Автор: <ИГС> ПР Потылицын Г.С. #0142, 31.07.2025";
	
	// Добавление команды 
	НоваяКоманда = ПараметрыРегистрации.Команды.Добавить();
	НоваяКоманда.Представление = "Открыть форму";
	НоваяКоманда.Идентификатор = НоваяКоманда.Представление;
	НоваяКоманда.Использование = ДополнительныеОтчетыИОбработкиКлиентСервер.ТипКомандыОткрытиеФормы();
	
	Возврат ПараметрыРегистрации;
	
КонецФункции

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

Функция СоздатьИзменитьОперацияБух() Экспорт
	
	// Используемые счета
	Счет46		= ПредопределенноеЗначение("ПланСчетов.Хозрасчетный.ВыполненныеЭтапыПоНезавершеннымРаботам");
	Счет90011	= ПредопределенноеЗначение("ПланСчетов.Хозрасчетный.ВыручкаНеЕНВД");
	
	// Определение объекта ОперацииБух
	Если ЗначениеЗаполнено(ОперацияБух) Тогда 
		
		ДокументОперацияБух = ОперацияБух.ПолучитьОбъект();
		
		Дата = ОперацияБух.Дата;
		Организация = ОперацияБух.Организация;
		
		// Очистка ВСЕХ движений по этому документу
		ОбменДаннымиСервер.УдалитьДвиженияУДокумента(ДокументОперацияБух);
		
	Иначе 
		
		ДокументОперацияБух = Документы.ОперацияБух.СоздатьДокумент();
		
		ДокументОперацияБух.Дата = Дата;
		ДокументОперацияБух.Организация = Организация;
		
	КонецЕсли;
	
	Ссылка = ДокументОперацияБух.Ссылка;
	
	Хозрасчетный = ДокументОперацияБух.Движения.Хозрасчетный;
	Хозрасчетный.Записывать = Истина;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ХозрасчетныйОбороты.Субконто1 КАК Контрагент,
	|	ХозрасчетныйОбороты.Субконто2 КАК ДоговорКонтрагента,
	|	НоменклатурныеГруппы.Ссылка КАК Проект,
	|	ХозрасчетныйОбороты.Субконто3 КАК НоменклатурнаяГруппа,
	|	СУММА(ХозрасчетныйОбороты.СуммаОборотДт) КАК СуммаОборотДт,
	|	СУММА(ХозрасчетныйОбороты.СуммаОборотКт) КАК СуммаОборотКт
	|ПОМЕСТИТЬ Итог
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Обороты(
	|			&НачалоПериода,
	|			&КонецПериода,
	|			,
	|			Счет = &Счет46,
	|			,
	|			Организация = &Организация
	|				И Субконто3 <> ЗНАЧЕНИЕ(Справочник.НоменклатурныеГруппы.ПустаяСсылка),
	|			,
	|			) КАК ХозрасчетныйОбороты
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.НоменклатурныеГруппы КАК НоменклатурныеГруппы
	|		ПО (ХозрасчетныйОбороты.Субконто3.Родитель = НоменклатурныеГруппы.Ссылка)
	|
	|СГРУППИРОВАТЬ ПО
	|	ХозрасчетныйОбороты.Субконто1,
	|	ХозрасчетныйОбороты.Субконто2,
	|	НоменклатурныеГруппы.Ссылка,
	|	ХозрасчетныйОбороты.Субконто3
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Итог.Контрагент КАК Контрагент,
	|	Итог.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	Итог.Проект КАК Проект,
	|	Итог.НоменклатурнаяГруппа КАК НоменклатурнаяГруппа,
	|	Итог.СуммаОборотДт КАК СуммаОборотДт,
	|	Итог.СуммаОборотКт КАК СуммаОборотКт
	|ИЗ
	|	Итог КАК Итог
	|ГДЕ
	|	Итог.СуммаОборотДт <> Итог.СуммаОборотКт
	|ИТОГИ
	|	СУММА(СуммаОборотДт),
	|	СУММА(СуммаОборотКт)
	|ПО
	|	Контрагент,
	|	ДоговорКонтрагента,
	|	Проект";
	
	// Параметры подтягиваются из документа или из обработки
	Запрос.УстановитьПараметр("НачалоПериода", НачалоГода(Дата));
	Запрос.УстановитьПараметр("КонецПериода", Дата);
	Запрос.УстановитьПараметр("Организация", Организация);
	
	Запрос.УстановитьПараметр("Счет46", Счет46);
	
	Результат = Запрос.Выполнить();
	
	// Уровень 1 - Контрагенты
	ВыборкаКонтрагент = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "Контрагент"); 	
	Пока ВыборкаКонтрагент.Следующий() Цикл 
		
		// Уровень 2 - Договора
		ВыборкаДоговорКонтрагента = ВыборкаКонтрагент.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "ДоговорКонтрагента");
		Пока ВыборкаДоговорКонтрагента.Следующий() Цикл
			
			// Уровень 3 - Проекты (Скважины)
			ВыборкаПроект = ВыборкаДоговорКонтрагента.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "Проект");
			Пока ВыборкаПроект.Следующий() Цикл  
				
				// Когда суммы оборотов не равны это означает незавершенность проекта, необходимо пропустить
				Если ВыборкаПроект.СуммаОборотДт <> ВыборкаПроект.СуммаОборотКт Тогда
					Продолжить;
				КонецЕсли;
				
				// Уровень 4 - Номенклатурные Группы (Этапы)
				Выборка = ВыборкаПроект.Выбрать();
				Пока Выборка.Следующий() Цикл
					
					НоваяЗапись = Хозрасчетный.Добавить();
					
					// Основные данные
					НоваяЗапись.Период		= Дата;
					НоваяЗапись.Организация	= Организация;
					НоваяЗапись.Регистратор	= Ссылка;
					
					// Дт 46
					НоваяЗапись.СчетДт = Счет46;
					// СубконтоДт
					НоваяЗапись.СубконтоДт.Контрагенты			= Выборка.Контрагент;
					НоваяЗапись.СубконтоДт.Договоры				= Выборка.ДоговорКонтрагента;
					НоваяЗапись.СубконтоДт.НоменклатурныеГруппы	= Выборка.НоменклатурнаяГруппа;
					
					// Кт 90.01.1
					НоваяЗапись.СчетКт = Счет90011;
					// СубконтоКт
					НоваяЗапись.СубконтоКт.НоменклатурныеГруппы = Выборка.НоменклатурнаяГруппа;
					
					// Суммы
					СуммаИтоговая = Выборка.СуммаОборотКт - Выборка.СуммаОборотДт;
					
					НоваяЗапись.Сумма		= СуммаИтоговая;
					НоваяЗапись.СуммаНУДт	= СуммаИтоговая;
					НоваяЗапись.СуммаНУКт	= СуммаИтоговая;
					
				КонецЦикла;
				
			КонецЦикла;
			
		КонецЦикла;
		
	КонецЦикла;
	
	// Дополнительная проверка на случай, если не удалось найти закрытые проекты, требующие перераспределения
	// В таком случае нет необходимости менять документ/создавать новый
	Если ДокументОперацияБух.Движения.Хозрасчетный.Количество() > 0 Тогда
		
		ДокументОперацияБух.Записать(РежимЗаписиДокумента.Запись);
		Возврат ДокументОперацияБух.Ссылка;
		
	Иначе
		
		Возврат ПредопределенноеЗначение("Документ.ОперацияБух.ПустаяСсылка");
		
	КонецЕсли;	
	
КонецФункции 

#КонецОбласти  
