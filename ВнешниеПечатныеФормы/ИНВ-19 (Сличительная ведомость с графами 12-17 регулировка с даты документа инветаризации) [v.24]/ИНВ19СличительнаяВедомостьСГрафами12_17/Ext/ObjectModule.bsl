
Перем мВалютаРегламентированногоУчета; 

Перем мВалютаУпрУчета;


Функция СведенияОВнешнейОбработке() Экспорт     
	
	ПараметрыРегистрации 	= Новый Структура; 
	
	МассивНазначений 		= Новый Массив;
	МассивНазначений.Добавить("Документ.ИнвентаризацияТоваровНаСкладе"); //Указываем документ к которому делаем внешнюю печ. форму
	
	ПараметрыРегистрации.Вставить("Вид", "ПечатнаяФорма"); //Может быть - ПечатнаяФорма, ЗаполнениеОбъекта, ДополнительныйОтчет, СозданиеСвязанныхОбъектов... 
	ПараметрыРегистрации.Вставить("Назначение", МассивНазначений);
	ПараметрыРегистрации.Вставить("Наименование", "ИНВ-19 (Сличительная ведомость с графами 12-17 регулировка с даты документа инветаризации) [v.24]"); //Имя под которым обработка будет зарегестрирована в справочнике внешних обработок
	ПараметрыРегистрации.Вставить("БезопасныйРежим", ЛОЖЬ);
	ПараметрыРегистрации.Вставить("Версия", "1.0"); 
	ПараметрыРегистрации.Вставить("Информация", "");
	
	ТаблицаКоманд = ПолучитьТаблицуКоманд();   
	
	ДобавитьКоманду(ТаблицаКоманд, "ИНВ-19 (Внешняя)", "ИНВ19", "ОткрытиеФормы", Истина, "ПечатьMXL");    
	
	ПараметрыРегистрации.Вставить("Команды", ТаблицаКоманд);
	
	Возврат ПараметрыРегистрации;
	
КонецФункции

Функция ПолучитьТаблицуКоманд()  
	
	Команды = 											Новый ТаблицаЗначений;
	Команды.Колонки.Добавить("Представление", 			Новый ОписаниеТипов("Строка")); //Как будет выглядеть описание печатной формы для пользователя
	Команды.Колонки.Добавить("Идентификатор", 			Новый ОписаниеТипов("Строка")); //Имя макета печатной формы
	Команды.Колонки.Добавить("Использование", 			Новый ОписаниеТипов("Строка"));
	Команды.Колонки.Добавить("ПоказыватьОповещение", 	Новый ОписаниеТипов("Булево"));
	Команды.Колонки.Добавить("Модификатор", 			Новый ОписаниеТипов("Строка"));   
	
	Возврат Команды; 
	
КонецФункции

Процедура ДобавитьКоманду(ТаблицаКоманд, Представление, Идентификатор, Использование, ПоказыватьОповещение = Ложь, Модификатор = "") 
	
	НоваяКоманда 						= ТаблицаКоманд.Добавить();
	НоваяКоманда.Представление 			= Представление; 
	НоваяКоманда.Идентификатор 			= Идентификатор;
	НоваяКоманда.Использование 			= Использование;
	НоваяКоманда.ПоказыватьОповещение 	= ПоказыватьОповещение;
	НоваяКоманда.Модификатор 			= Модификатор; 
	
КонецПроцедуры

Функция Печать(МассивОбъектов, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода,НачалоКонецДняИнвентаризации) Экспорт 
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ИнвентаризацияТоваровНаСкладе_ИНВ19_12_17"; 
	
	НомерСтраницы = 2;  
	
	Для Каждого Документ Из МассивОбъектов Цикл 
		
		СсылкаНаОбъект = Документ.Ссылка;
		
		ПечатьТабличногоДокумента(ТабличныйДокумент, Ложь, НомерСтраницы, НачалоКонецДняИнвентаризации);
		
		ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		
	КонецЦикла;
	
	Возврат ТабЛичныйДокумент; 

КонецФункции 

Процедура ПечатьТабличногоДокумента(ТабДокумент, Знач ТолькоОбороты = Ложь, НомерСтраницы, НачалоКонецДняИнвентаризации = Ложь)
	
	Если ТолькоОбороты = Истина Тогда
		ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
	КонецЕсли; 
	
	ДопКолонка = Константы.ДополнительнаяКолонкаПечатныхФормДокументов.Получить();  
	
	Если ДопКолонка = Перечисления.ДополнительнаяКолонкаПечатныхФормДокументов.Артикул Тогда
		ТоварКод = "Артикул";
	Иначе
		ТоварКод = "Код";
	КонецЕсли;
	
	ВалютаПересчета = мВалютаРегламентированногоУчета;
	ВалютаПечати 	= мВалютаРегламентированногоУчета;  
	
	Параметры    	= РаботаСКурсамиВалют.ПолучитьКурсВалюты(ВалютаПересчета, СсылкаНаОбъект.Дата);   
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТекущийДокумент", СсылкаНаОбъект);
	Запрос.Текст = 
	"ВЫБРАТЬ
		|	ИнвентаризацияТоваровНаСкладе.Номер КАК НомерДокумента,
		|	ИнвентаризацияТоваровНаСкладе.Дата КАК ДатаДокумента,
		|	ИнвентаризацияТоваровНаСкладе.ДатаНачалаИнвентаризации КАК ДатаНачалаИнвентаризации,
		|	ИнвентаризацияТоваровНаСкладе.Организация КАК Организация,
		|	ИнвентаризацияТоваровНаСкладе.Склад КАК Склад,
		|	ПРЕДСТАВЛЕНИЕССЫЛКИ(ИнвентаризацияТоваровНаСкладе.Склад) КАК ПредставлениеСклада,
		|	ИнвентаризацияТоваровНаСкладе.ДатаОкончанияИнвентаризации КАК ДатаОкончанияИнвентаризации,
		|	ИнвентаризацияТоваровНаСкладе.ДокументОснованиеДата КАК ДокументОснованиеДата,
		|	ИнвентаризацияТоваровНаСкладе.ДокументОснованиеНомер КАК ОснованиеНомер,
		|	ИнвентаризацияТоваровНаСкладе.ДокументОснованиеВид КАК ОснованиеВид
		|ИЗ
		|	Документ.ИнвентаризацияТоваровНаСкладе КАК ИнвентаризацияТоваровНаСкладе
		|ГДЕ
		|	ИнвентаризацияТоваровНаСкладе.Ссылка = &ТекущийДокумент";
	
	Шапка = Запрос.Выполнить().Выбрать();
	Шапка.Следующий();
	
	Запрос.УстановитьПараметр("Курс",            Параметры.Курс);
	Запрос.УстановитьПараметр("Кратность",       Параметры.Кратность);
	Запрос.УстановитьПараметр("ВидСкладаНТТ",    Перечисления.ТипыСкладов.НеавтоматизированнаяТорговаяТочка);
	
	Запрос.Текст = "ВЫБРАТЬ
	               |	Товары1.НомерСтроки КАК Номер,
	               |	Номенклатура1.Ссылка КАК Номенклатура,
	               |	ПОДСТРОКА(Номенклатура1.НаименованиеПолное, 1, 255) КАК ТоварНаименование,
	               |	Номенклатура1.Код КАК ТоварКод,
	               |	КлассификаторЕдиницИзмерения.Представление КАК ЕдиницаИзмеренияНаименование,
	               |	КлассификаторЕдиницИзмерения.Код КАК ЕдиницаИзмеренияКодПоОКЕИ,
	               |	Товары1.Количество КАК ФактКоличество,
	               |	Товары1.КоличествоУчет КАК БухКоличество,
	               |	0 КАК Цена,
	               |	ВЫБОР
	               |		КОГДА Склады.ТипСклада = &ВидСкладаНТТ
	               |			ТОГДА Товары1.Количество * Товары1.ЦенаВРознице
	               |		ИНАЧЕ Товары1.Сумма * &Курс / &Кратность
	               |	КОНЕЦ КАК ФактСумма,
	               |	ВЫБОР
	               |		КОГДА ИнвентаризацияТоваровНаСкладе.Склад.ТипСклада = &ВидСкладаНТТ
	               |			ТОГДА Товары1.КоличествоУчет * Товары1.ЦенаВРознице
	               |		ИНАЧЕ Товары1.СуммаУчет * &Курс / &Кратность
	               |	КОНЕЦ КАК БухСумма
	               |ПОМЕСТИТЬ Товары
	               |ИЗ
	               |	Документ.ИнвентаризацияТоваровНаСкладе.Товары КАК Товары1
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК Номенклатура1
	               |			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КлассификаторЕдиницИзмерения КАК КлассификаторЕдиницИзмерения
	               |			ПО Номенклатура1.ЕдиницаИзмерения = КлассификаторЕдиницИзмерения.Ссылка
	               |		ПО Товары1.Номенклатура = Номенклатура1.Ссылка
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ИнвентаризацияТоваровНаСкладе КАК ИнвентаризацияТоваровНаСкладе
	               |			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Склады КАК Склады
	               |			ПО ИнвентаризацияТоваровНаСкладе.Склад = Склады.Ссылка
	               |		ПО Товары1.Ссылка = ИнвентаризацияТоваровНаСкладе.Ссылка
	               |ГДЕ
	               |	Товары1.Ссылка = &ТекущийДокумент
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ХозрасчетныйОбороты.Регистратор КАК Регистратор,
	               |	ХозрасчетныйОбороты.Счет КАК Счет,
	               |	ХозрасчетныйОбороты.КорСчет КАК КорСчет,
	               |	ХозрасчетныйОбороты.СуммаОборотДт КАК СуммаОборотДт,
	               |	ХозрасчетныйОбороты.СуммаОборотКт КАК СуммаОборотКт,
	               |	ХозрасчетныйОбороты.Субконто1 КАК Субконто1,
	               |	ХозрасчетныйОбороты.КоличествоОборотДт КАК КоличествоОборотДт,
	               |	ХозрасчетныйОбороты.КоличествоОборотКт КАК КоличествоОборотКт
	               |ПОМЕСТИТЬ ХозрасчетныйОбороты
	               |ИЗ
	               |	РегистрБухгалтерии.Хозрасчетный.Обороты(&НачалоПериода, , Регистратор, Счет В (&СписокСчетов), &СубконтоНоменклатураСклад, Субконто2 = &Склад, , ) КАК ХозрасчетныйОбороты
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ЕСТЬNULL(Товары.Номер, 0) КАК Номер,
	               |	ВЫБОР
	               |		КОГДА ХозрасчетныйОбороты.КоличествоОборотДт > 0
	               |			ТОГДА ХозрасчетныйОбороты.КоличествоОборотДт
	               |		ИНАЧЕ 0
	               |	КОНЕЦ КАК РегулировкаИзлишекКолво,
	               |	ВЫБОР
	               |		КОГДА ХозрасчетныйОбороты.Регистратор ССЫЛКА Документ.ПередачаМатериаловВЭксплуатацию
	               |			ТОГДА 0
	               |		КОГДА ХозрасчетныйОбороты.СуммаОборотДт > 0
	               |			ТОГДА ХозрасчетныйОбороты.СуммаОборотДт
	               |		ИНАЧЕ 0
	               |	КОНЕЦ КАК РегулировкаИзлишекСумма,
	               |	ВЫБОР
	               |		КОГДА ХозрасчетныйОбороты.Регистратор ССЫЛКА Документ.ПередачаМатериаловВЭксплуатацию
	               |			ТОГДА 0
	               |		КОГДА ХозрасчетныйОбороты.КоличествоОборотКт > 0
	               |			ТОГДА ХозрасчетныйОбороты.КоличествоОборотКт
	               |		ИНАЧЕ 0
	               |	КОНЕЦ КАК РегулировкаНедостачаКолво,
	               |	ВЫБОР
	               |		КОГДА ХозрасчетныйОбороты.Регистратор ССЫЛКА Документ.ПередачаМатериаловВЭксплуатацию
	               |			ТОГДА 0
	               |		КОГДА ХозрасчетныйОбороты.СуммаОборотКт > 0
	               |			ТОГДА ХозрасчетныйОбороты.СуммаОборотКт
	               |		ИНАЧЕ 0
	               |	КОНЕЦ КАК РегулировкаНедостачаСумма,
	               |	ВЫБОР
	               |		КОГДА ХозрасчетныйОбороты.КоличествоОборотКт <= 0
	               |			ТОГДА """"
	               |		КОГДА ХозрасчетныйОбороты.Регистратор ССЫЛКА Документ.ПоступлениеТоваровУслуг
	               |			ТОГДА ВЫРАЗИТЬ(ХозрасчетныйОбороты.Регистратор КАК Документ.ПоступлениеТоваровУслуг).Номер
	               |		КОГДА ХозрасчетныйОбороты.Регистратор ССЫЛКА Документ.ПеремещениеТоваров
	               |			ТОГДА ВЫРАЗИТЬ(ХозрасчетныйОбороты.Регистратор КАК Документ.ПеремещениеТоваров).Номер
	               |		КОГДА ХозрасчетныйОбороты.Регистратор ССЫЛКА Документ.ТребованиеНакладная
	               |			ТОГДА ВЫРАЗИТЬ(ХозрасчетныйОбороты.Регистратор КАК Документ.ТребованиеНакладная).Номер
	               |		КОГДА ХозрасчетныйОбороты.Регистратор ССЫЛКА Документ.СписаниеМатериаловИзЭксплуатации
	               |			ТОГДА ВЫРАЗИТЬ(ХозрасчетныйОбороты.Регистратор КАК Документ.СписаниеМатериаловИзЭксплуатации).Номер
	               |		КОГДА ХозрасчетныйОбороты.Регистратор ССЫЛКА Документ.ПередачаМатериаловВЭксплуатацию
	               |			ТОГДА ВЫРАЗИТЬ(ХозрасчетныйОбороты.Регистратор КАК Документ.ПередачаМатериаловВЭксплуатацию).Номер
	               |		КОГДА ХозрасчетныйОбороты.Регистратор ССЫЛКА Документ.ВозвратМатериаловИзЭксплуатации
	               |			ТОГДА ВЫРАЗИТЬ(ХозрасчетныйОбороты.Регистратор КАК Документ.ВозвратМатериаловИзЭксплуатации).Номер
	               |		КОГДА ХозрасчетныйОбороты.Регистратор ССЫЛКА Документ.РеализацияТоваровУслуг
	               |			ТОГДА ВЫРАЗИТЬ(ХозрасчетныйОбороты.Регистратор КАК Документ.РеализацияТоваровУслуг).Номер
	               |		КОГДА ХозрасчетныйОбороты.Регистратор ССЫЛКА Документ.СписаниеМатериаловИзЭксплуатации
	               |			ТОГДА ВЫРАЗИТЬ(ХозрасчетныйОбороты.Регистратор КАК Документ.СписаниеМатериаловИзЭксплуатации).Номер
	               |		КОГДА ХозрасчетныйОбороты.Регистратор ССЫЛКА Документ.КомплектацияНоменклатуры
	               |			ТОГДА ВЫРАЗИТЬ(ХозрасчетныйОбороты.Регистратор КАК Документ.КомплектацияНоменклатуры).Номер
	               |		КОГДА ХозрасчетныйОбороты.Регистратор ССЫЛКА Документ.ПеремещениеОС
	               |			ТОГДА ВЫРАЗИТЬ(ХозрасчетныйОбороты.Регистратор КАК Документ.ПеремещениеОС).Номер
	               |		КОГДА ХозрасчетныйОбороты.Регистратор ССЫЛКА Документ.СписаниеТоваров
	               |			ТОГДА ВЫРАЗИТЬ(ХозрасчетныйОбороты.Регистратор КАК Документ.СписаниеТоваров).Номер
	               |		КОГДА ХозрасчетныйОбороты.Регистратор ССЫЛКА Документ.ПересортицаТоваров
	               |			ТОГДА ВЫРАЗИТЬ(ХозрасчетныйОбороты.Регистратор КАК Документ.ПересортицаТоваров).Номер
	               |	КОНЕЦ КАК РегулировкаНедостачаНомерСчета,
	               |	ХозрасчетныйОбороты.Субконто1 КАК Номенклатура,
	               |	ХозрасчетныйОбороты.Регистратор КАК Регистратор,
	               |	ВЫБОР
	               |		КОГДА ХозрасчетныйОбороты.КоличествоОборотДт <= 0
	               |			ТОГДА """"
	               |		КОГДА ХозрасчетныйОбороты.Регистратор ССЫЛКА Документ.ПоступлениеТоваровУслуг
	               |			ТОГДА ВЫРАЗИТЬ(ХозрасчетныйОбороты.Регистратор КАК Документ.ПоступлениеТоваровУслуг).Номер
	               |		КОГДА ХозрасчетныйОбороты.Регистратор ССЫЛКА Документ.ПеремещениеТоваров
	               |			ТОГДА ВЫРАЗИТЬ(ХозрасчетныйОбороты.Регистратор КАК Документ.ПеремещениеТоваров).Номер
	               |		КОГДА ХозрасчетныйОбороты.Регистратор ССЫЛКА Документ.ТребованиеНакладная
	               |			ТОГДА ВЫРАЗИТЬ(ХозрасчетныйОбороты.Регистратор КАК Документ.ТребованиеНакладная).Номер
	               |		КОГДА ХозрасчетныйОбороты.Регистратор ССЫЛКА Документ.СписаниеМатериаловИзЭксплуатации
	               |			ТОГДА ВЫРАЗИТЬ(ХозрасчетныйОбороты.Регистратор КАК Документ.СписаниеМатериаловИзЭксплуатации).Номер
	               |		КОГДА ХозрасчетныйОбороты.Регистратор ССЫЛКА Документ.ПередачаМатериаловВЭксплуатацию
	               |			ТОГДА ВЫРАЗИТЬ(ХозрасчетныйОбороты.Регистратор КАК Документ.ПередачаМатериаловВЭксплуатацию).Номер
	               |		КОГДА ХозрасчетныйОбороты.Регистратор ССЫЛКА Документ.ВозвратМатериаловИзЭксплуатации
	               |			ТОГДА ВЫРАЗИТЬ(ХозрасчетныйОбороты.Регистратор КАК Документ.ВозвратМатериаловИзЭксплуатации).Номер
	               |		КОГДА ХозрасчетныйОбороты.Регистратор ССЫЛКА Документ.РеализацияТоваровУслуг
	               |			ТОГДА ВЫРАЗИТЬ(ХозрасчетныйОбороты.Регистратор КАК Документ.РеализацияТоваровУслуг).Номер
	               |		КОГДА ХозрасчетныйОбороты.Регистратор ССЫЛКА Документ.СписаниеМатериаловИзЭксплуатации
	               |			ТОГДА ВЫРАЗИТЬ(ХозрасчетныйОбороты.Регистратор КАК Документ.СписаниеМатериаловИзЭксплуатации).Номер
	               |		КОГДА ХозрасчетныйОбороты.Регистратор ССЫЛКА Документ.КомплектацияНоменклатуры
	               |			ТОГДА ВЫРАЗИТЬ(ХозрасчетныйОбороты.Регистратор КАК Документ.КомплектацияНоменклатуры).Номер
	               |		КОГДА ХозрасчетныйОбороты.Регистратор ССЫЛКА Документ.ПеремещениеОС
	               |			ТОГДА ВЫРАЗИТЬ(ХозрасчетныйОбороты.Регистратор КАК Документ.ПеремещениеОС).Номер
	               |		КОГДА ХозрасчетныйОбороты.Регистратор ССЫЛКА Документ.СписаниеТоваров
	               |			ТОГДА ВЫРАЗИТЬ(ХозрасчетныйОбороты.Регистратор КАК Документ.СписаниеТоваров).Номер
	               |		КОГДА ХозрасчетныйОбороты.Регистратор ССЫЛКА Документ.ПересортицаТоваров
	               |			ТОГДА ВЫРАЗИТЬ(ХозрасчетныйОбороты.Регистратор КАК Документ.ПересортицаТоваров).Номер
	               |		КОГДА ХозрасчетныйОбороты.Регистратор ССЫЛКА Документ.ОприходованиеТоваров
	               |			ТОГДА ВЫРАЗИТЬ(ХозрасчетныйОбороты.Регистратор КАК Документ.ОприходованиеТоваров).Номер
	               |	КОНЕЦ КАК РегулировкаИзлишекНомерСчета
	               |ПОМЕСТИТЬ ВТОбороты
	               |ИЗ
	               |	Товары КАК Товары
	               |		ЛЕВОЕ СОЕДИНЕНИЕ ХозрасчетныйОбороты КАК ХозрасчетныйОбороты
	               |		ПО Товары.Номенклатура = ХозрасчетныйОбороты.Субконто1
	               |ГДЕ
	               |	НЕ(ХозрасчетныйОбороты.Счет.Код = ""МЦ.06""
	               |				И ХозрасчетныйОбороты.КорСчет.Код = ""МЦ.04""
	               |				И ХозрасчетныйОбороты.КорСчет <> ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка))
	               |	И НЕ(ХозрасчетныйОбороты.Счет.Код = ""МЦ.04""
	               |				И ХозрасчетныйОбороты.КорСчет.Код = ""МЦ.06""
	               |				И ХозрасчетныйОбороты.КорСчет <> ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка))
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТОбороты.Номер КАК Номер
	               |ПОМЕСТИТЬ СтрокиСОборотами
	               |ИЗ
	               |	ВТОбороты КАК ВТОбороты
	               |ГДЕ
	               |	НЕ ВТОбороты.Номер = 0
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ РАЗЛИЧНЫЕ
	               |	Товары.Номер КАК Номер,
	               |	Товары.Номенклатура КАК Номенклатура,
	               |	Товары.ТоварНаименование КАК ТоварНаименование,
	               |	Товары.ТоварКод КАК ТоварКод,
	               |	Товары.ЕдиницаИзмеренияНаименование КАК ЕдиницаИзмеренияНаименование,
	               |	Товары.ЕдиницаИзмеренияКодПоОКЕИ КАК ЕдиницаИзмеренияКодПоОКЕИ,
	               |	Товары.ФактКоличество КАК ФактКоличество,
	               |	Товары.БухКоличество КАК БухКоличество,
	               |	Товары.Цена КАК Цена,
	               |	Товары.ФактСумма КАК ФактСумма,
	               |	Товары.БухСумма КАК БухСумма
	               |ИЗ
	               |	Товары КАК Товары
	               |		ЛЕВОЕ СОЕДИНЕНИЕ СтрокиСОборотами КАК СтрокиСОборотами
	               |		ПО Товары.Номер = СтрокиСОборотами.Номер
	               |ГДЕ
	               |	Товары.ФактКоличество - Товары.БухКоличество <> 0
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	Номер
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТОбороты.Номер КАК Номер,
	               |	ВТОбороты.РегулировкаИзлишекКолво КАК РегулировкаИзлишекКолво,
	               |	ВТОбороты.РегулировкаИзлишекСумма КАК РегулировкаИзлишекСумма,
	               |	ВТОбороты.РегулировкаНедостачаКолво КАК РегулировкаНедостачаКолво,
	               |	ВТОбороты.РегулировкаНедостачаСумма КАК РегулировкаНедостачаСумма,
	               |	ВТОбороты.РегулировкаНедостачаНомерСчета КАК РегулировкаНедостачаНомерСчета,
	               |	ВТОбороты.Номенклатура КАК Номенклатура,
	               |	ВТОбороты.РегулировкаИзлишекНомерСчета КАК РегулировкаИзлишекНомерСчета
	               |ИЗ
	               |	ВТОбороты КАК ВТОбороты
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |УНИЧТОЖИТЬ Товары
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |УНИЧТОЖИТЬ ВТОбороты
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |УНИЧТОЖИТЬ СтрокиСОборотами";  
	
	СписокСчетов = Новый Массив(); 
	
	Для Каждого СтрокаИнвентаризации Из СсылкаНаОбъект.Товары Цикл
		СписокСчетов.Добавить(СтрокаИнвентаризации.СчетУчета)
	КонецЦикла; 
	
	СубконтоНоменклатураСклад = Новый Массив(); 
	СубконтоНоменклатураСклад.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Номенклатура);
	СубконтоНоменклатураСклад.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Склады);
	
	ДатаНачалаПериода = ?(НачалоКонецДняИнвентаризации, НачалоДня(Шапка.ДатаДокумента), КонецДня(Шапка.ДатаДокумента)+1);
	
	Запрос.УстановитьПараметр("Склад", 						Шапка.Склад);
	Запрос.УстановитьПараметр("СписокСчетов", 				СписокСчетов);
	Запрос.УстановитьПараметр("СубконтоНоменклатураСклад", 	СубконтоНоменклатураСклад);
	Запрос.УстановитьПараметр("ТолькоОбороты", 				ТолькоОбороты);
	Запрос.УстановитьПараметр("НачалоПериода", 				ДатаНачалаПериода);
	
	Пакет = Запрос.ВыполнитьПакет();
	
	ВыборкаСтрокТовары = Пакет[4].Выбрать(); 
	
	Если ВыборкаСтрокТовары.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ТаблицаДокументов  = Пакет[5].Выгрузить();
	ТаблицаДокументов.Индексы.Добавить("Номер");
	ТаблицаДокументов.Индексы.Добавить("Номенклатура");
	
	Макет = ПолучитьМакет("ИНВ19");
	
	ОбластьМакетаШапка = Макет.ПолучитьОбласть("Шапка"); 
	
	СведенияОбОрганизации = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Шапка.Организация,Шапка.ДатаДокумента); 
	
	ОбластьМакетаШапка.Параметры.ПредставлениеОрганизации = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОбОрганизации,
	"НаименованиеДляПечатныхФорм,ИНН,ФактическийАдрес,Телефоны,НомерСчета,Банк,БИК,КоррСчет");
	ОбластьМакетаШапка.Параметры.Заполнить(Шапка); 
	
	ОбластьМакетаШапка.Параметры.ОрганизацияПоОКПО        		= СведенияОбОрганизации.КодПоОКПО;
	ОбластьМакетаШапка.Параметры.НомерДокумента           		= СсылкаНаОбъект.Номер;
	ОбластьМакетаШапка.Параметры.ДатаДокумента            		= Шапка.ДатаДокумента;
	ОбластьМакетаШапка.Параметры.ОснованиеИнвентаризации 		= Шапка.ОснованиеВид;
	ОбластьМакетаШапка.Параметры.ОснованиеДата 					= Шапка.ДокументОснованиеДата; 
	ОбластьМакетаШапка.Параметры.ОснованиеНомер 				= Шапка.ОснованиеНомер;
	ОбластьМакетаШапка.Параметры.ДатаНачалаИнвентаризации 		= Шапка.ДатаНачалаИнвентаризации;
	ОбластьМакетаШапка.Параметры.ДатаОкончанияИнвентаризации 	= Шапка.ДатаОкончанияИнвентаризации;
	ОбластьМакетаШапка.Параметры.ПредставлениеПодразделения 	= Шапка.ПредставлениеСклада;
	
	ОтборБухгалтер = Новый Структура();
	ОтборБухгалтер.Вставить("СтруктурнаяЕдиница", Шапка.Организация);
	ОтборБухгалтер.Вставить("ОтветственноеЛицо", Перечисления.ОтветственныеЛицаОрганизаций.ГлавныйБухгалтер);
	
	ЗапросБухгалтер = РегистрыСведений.ОтветственныеЛицаОрганизаций.получитьПоследнее(Шапка.ДатаДокумента,ОтборБухгалтер); 
	
	Если ЗапросБухгалтер <> Неопределено Тогда
		Бухгалтер = ЗапросБухгалтер.ФизическоеЛицо;
	КонецЕсли;
	
	Если ТолькоОбороты = Ложь Тогда
		ТабДокумент.Вывести(ОбластьМакетаШапка);
		ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
	КонецЕсли;
	
	ИтогоРезультатИзлишекКолво   		= 0;
	ИтогоРезультатИзлишекСумма   		= 0;
	ИтогоРезультатНедостачаКолво 		= 0;
	ИтогоРезультатНедостачаСумма 		= 0;
	
	ИтогоРегулировкаИзлишекКолво 		= 0;
	ИтогоРегулировкаИзлишекСумма 		= 0;
	ИтогоРегулировкаНедостачаКолво 		= 0;
	ИтогоРегулировкаНедостачаСумма 		= 0;
	
	ИтогоСписаниеНедостачКолонка1Колво 	= 0;
	ИтогоСписаниеНедостачКолонка1Сумма 	= 0;
	ИтогоСписаниеНедостачКолонка2Колво 	= 0;
	ИтогоСписаниеНедостачКолонка2Сумма 	= 0;
	ИтогоФактКоличество 				= 0;
	ИтогоФактСумма 						= 0;
	
	ЗаголовокТаблицы = Макет.ПолучитьОбласть("ЗаголовокТаблицы1");
	ЗаголовокТаблицы.Параметры.НомерСтраницы = "Страница " + НомерСтраницы;
	
	ТабДокумент.Вывести(ЗаголовокТаблицы);
	
	КоличествоСтрок = ВыборкаСтрокТовары.Количество();  
	
	ОбластьМакетаСтрокаТаблицы 	= Макет.ПолучитьОбласть("СтрокаТаблицы1");
	ОбластьИтоговПоСтранице    	= Макет.ПолучитьОбласть("ИтогоТаблицы1");
	ОбластьПодвала             	= Макет.ПолучитьОбласть("Подвал");
	МассивВыводимыхОбластей    	= Новый Массив;
	Ном 						= 0;
	
	МассивНоменклатуры = Новый Массив();
	
	Пока ВыборкаСтрокТовары.Следующий() Цикл
		
		Ном = Ном + 1;
		
		Если НЕ ЗначениеЗаполнено(ВыборкаСтрокТовары.Номенклатура) Тогда
			Сообщить("В одной из строк не заполнено значение номенклатуры - строка при печати пропущена.", СтатусСообщения.Важное);
			Продолжить;
		КонецЕсли;
		
		Если МассивНоменклатуры.Найти(ВыборкаСтрокТовары.Номенклатура) <> Неопределено Тогда
			Продолжить;
		КонецЕсли; 
		
		МассивНоменклатуры.Добавить(ВыборкаСтрокТовары.Номенклатура);
		
		ОбластьМакетаСтрокаТаблицы.Параметры.Заполнить(ВыборкаСтрокТовары);
		
		Если ВыборкаСтрокТовары.Номер = 0 Тогда
			ОбластьМакетаСтрокаТаблицы.Параметры.Номер = "";
		КонецЕсли; 
		
		ОбластьМакетаСтрокаТаблицы.Параметры.ТоварНаименование = ВыборкаСтрокТовары.ТоварНаименование ;
		
		Разница     = 0;
		РазницаСумм = 0;
		
		Разница     = ВыборкаСтрокТовары.ФактКоличество - ВыборкаСтрокТовары.БухКоличество;
		РазницаСумм = ВыборкаСтрокТовары.ФактСумма      - ВыборкаСтрокТовары.БухСумма;
		
		Если Разница < 0 И РазницаСумм < 0 Тогда  
			
			ОбластьМакетаСтрокаТаблицы.Параметры.РезультатНедостачаКолво = - Разница;
			ОбластьМакетаСтрокаТаблицы.Параметры.РезультатНедостачаСумма = - РазницаСумм;
			ОбластьМакетаСтрокаТаблицы.Параметры.РезультатИзлишекКолво   = 0;
			ОбластьМакетаСтрокаТаблицы.Параметры.РезультатИзлишекСумма   = 0;
			
			ИтогоРезультатНедостачаКолво = ИтогоРезультатНедостачаКолво + (- Разница);
			ИтогоРезультатНедостачаСумма = ИтогоРезультатНедостачаСумма + (- РазницаСумм);
			
		ИначеЕсли Разница < 0 И РазницаСумм >= 0 Тогда   
			
			ОбластьМакетаСтрокаТаблицы.Параметры.РезультатНедостачаКолво = - Разница;
			ОбластьМакетаСтрокаТаблицы.Параметры.РезультатНедостачаСумма = РазницаСумм;
			ОбластьМакетаСтрокаТаблицы.Параметры.РезультатИзлишекКолво   = 0;
			ОбластьМакетаСтрокаТаблицы.Параметры.РезультатИзлишекСумма   = 0;
			
			ИтогоРезультатНедостачаКолво = ИтогоРезультатНедостачаКолво + (- Разница);
			ИтогоРезультатНедостачаСумма = ИтогоРезультатНедостачаСумма + РазницаСумм; 
			
		Иначе                              
			
			ОбластьМакетаСтрокаТаблицы.Параметры.РезультатНедостачаКолво = 0;
			ОбластьМакетаСтрокаТаблицы.Параметры.РезультатНедостачаСумма = 0;
			ОбластьМакетаСтрокаТаблицы.Параметры.РезультатИзлишекКолво   = Разница;
			ОбластьМакетаСтрокаТаблицы.Параметры.РезультатИзлишекСумма   = РазницаСумм;
			
			ИтогоРезультатИзлишекКолво   = ИтогоРезультатИзлишекКолво   + Разница;
			ИтогоРезультатИзлишекСумма   = ИтогоРезультатИзлишекСумма   + РазницаСумм; 
			
		КонецЕсли;      
		
		РегулировкаИзлишекНомерСчета 	= "";
		РегулировкаНедостачаНомерСчета 	= "";
		РегулировкаИзлишекКолво 		= 0;
		РегулировкаИзлишекСумма 		= 0;
		РегулировкаНедостачаКолво 		= 0;
		РегулировкаНедостачаСумма 		= 0;
		
		ДвиженияПоДокументам = 	ТаблицаДокументов.НайтиСтроки(Новый Структура("Номенклатура", ВыборкаСтрокТовары.Номенклатура));
		
		Для Каждого СтрокаДвижение Из ДвиженияПоДокументам Цикл
			
			Если СтрокаДвижение.РегулировкаИзлишекКолво > 0 Тогда
				
				РегулировкаИзлишекКолво = СтрокаДвижение.РегулировкаИзлишекКолво;
				РегулировкаИзлишекСумма = СтрокаДвижение.РегулировкаИзлишекСумма;
				РегулировкаНедостачаКолво = 0; 
				РегулировкаНедостачаСумма = 0;
				
				Если ЗначениеЗаполнено(СтрокаДвижение.РегулировкаИзлишекНомерСчета) Тогда
					РегулировкаИзлишекНомерСчета = РегулировкаИзлишекНомерСчета + ?(РегулировкаИзлишекНомерСчета = "", "", ",") + СтрокаДвижение.РегулировкаИзлишекНомерСчета;
				КонецЕсли;
				
			ИначеЕсли СтрокаДвижение.РегулировкаНедостачаКолво > 0 Тогда 
				
				РегулировкаНедостачаКолво = СтрокаДвижение.РегулировкаНедостачаКолво;
				РегулировкаНедостачаСумма = СтрокаДвижение.РегулировкаНедостачаСумма;
				РегулировкаИзлишекКолво = 0; 
				РегулировкаИзлишекСумма = 0;
				
				Если ЗначениеЗаполнено(СтрокаДвижение.РегулировкаНедостачаНомерСчета) Тогда
					РегулировкаНедостачаНомерСчета = РегулировкаНедостачаНомерСчета + ?(РегулировкаНедостачаНомерСчета = "", "", ",") + СтрокаДвижение.РегулировкаНедостачаНомерСчета;
				КонецЕсли;
				
			КонецЕсли;
			
		КонецЦикла; 
		
		ИтогоРегулировкаИзлишекКолво	= ИтогоРегулировкаИзлишекКолво 	 + РегулировкаИзлишекКолво;
		ИтогоРегулировкаИзлишекСумма 	= ИтогоРегулировкаИзлишекСумма 	 + РегулировкаИзлишекСумма;
		ИтогоРегулировкаНедостачаКолво 	= ИтогоРегулировкаНедостачаКолво + РегулировкаНедостачаКолво;
		ИтогоРегулировкаНедостачаСумма 	= ИтогоРегулировкаНедостачаСумма + РегулировкаНедостачаСумма;
		
		
		// Окончательные результаты
		СписаниеНедостачКолонка1Колво = 0;
		СписаниеНедостачКолонка2Колво = 0;
		СписаниеНедостачКолонка1Сумма = 0;
		СписаниеНедостачКолонка2Сумма = 0;
		
		СписаниеНедостачКолонка1Колво = ОбластьМакетаСтрокаТаблицы.Параметры.РезультатИзлишекКолво - РегулировкаИзлишекКолво;  
		
		Если СписаниеНедостачКолонка1Колво < 0 Тогда
			СписаниеНедостачКолонка2Колво = -СписаниеНедостачКолонка1Колво;
			СписаниеНедостачКолонка1Колво = 0;
		КонецЕсли;        
		
		СписаниеНедостачКолонка1Сумма = ОбластьМакетаСтрокаТаблицы.Параметры.РезультатИзлишекСумма - РегулировкаИзлишекСумма;  
		
		Если СписаниеНедостачКолонка1Сумма < 0 Тогда
			СписаниеНедостачКолонка2Сумма = -СписаниеНедостачКолонка1Сумма;
			СписаниеНедостачКолонка1Сумма = 0;
		КонецЕсли; 
		
		СписаниеНедостачКолонка2Колво = СписаниеНедостачКолонка2Колво + ОбластьМакетаСтрокаТаблицы.Параметры.РезультатНедостачаКолво - РегулировкаНедостачаКолво;
		
		Если СписаниеНедостачКолонка2Колво < 0 Тогда
			СписаниеНедостачКолонка1Колво = СписаниеНедостачКолонка1Колво - СписаниеНедостачКолонка2Колво;
			СписаниеНедостачКолонка2Колво = 0;
		КонецЕсли;                          
		
		СписаниеНедостачКолонка2Сумма = СписаниеНедостачКолонка2Сумма + ОбластьМакетаСтрокаТаблицы.Параметры.РезультатНедостачаСумма - РегулировкаНедостачаСумма;   
		
		Если СписаниеНедостачКолонка2Сумма < 0 Тогда
			СписаниеНедостачКолонка1Сумма = СписаниеНедостачКолонка1Сумма - СписаниеНедостачКолонка2Сумма;
			СписаниеНедостачКолонка2Сумма = 0;		
		КонецЕсли;       
		
		Если СписаниеНедостачКолонка1Колво = 0 Тогда
			СписаниеНедостачКолонка1Сумма = 0;	
		КонецЕсли;  
		
		Если СписаниеНедостачКолонка2Колво = 0 Тогда
			СписаниеНедостачКолонка2Сумма = 0;
		КонецЕсли; 
		
		ИтогоСписаниеНедостачКолонка1Колво	= ИтогоСписаниеНедостачКолонка1Колво 	+ СписаниеНедостачКолонка1Колво;
		ИтогоСписаниеНедостачКолонка1Сумма 	= ИтогоСписаниеНедостачКолонка1Сумма 	+ СписаниеНедостачКолонка1Сумма;
		ИтогоСписаниеНедостачКолонка2Колво 	= ИтогоСписаниеНедостачКолонка2Колво 	+ СписаниеНедостачКолонка2Колво;
		ИтогоСписаниеНедостачКолонка2Сумма 	= ИтогоСписаниеНедостачКолонка2Сумма 	+ СписаниеНедостачКолонка2Сумма;
		ИтогоФактКоличество 				= ИтогоФактКоличество 					+ ВыборкаСтрокТовары.ФактКоличество;
		ИтогоФактСумма 						= ИтогоФактСумма 						+ ВыборкаСтрокТовары.ФактСумма;
		
		ОбластьМакетаСтрокаТаблицы.Параметры.РегулировкаИзлишекКолво 		= РегулировкаИзлишекКолво;
		ОбластьМакетаСтрокаТаблицы.Параметры.РегулировкаИзлишекСумма 		= РегулировкаИзлишекСумма;
		ОбластьМакетаСтрокаТаблицы.Параметры.РегулировкаНедостачаКолво 		= РегулировкаНедостачаКолво;
		ОбластьМакетаСтрокаТаблицы.Параметры.РегулировкаНедостачаСумма 		= РегулировкаНедостачаСумма;
		ОбластьМакетаСтрокаТаблицы.Параметры.РегулировкаИзлишекНомерСчета 	= РегулировкаИзлишекНомерСчета;
		ОбластьМакетаСтрокаТаблицы.Параметры.РегулировкаНедостачаНомерСчета = РегулировкаНедостачаНомерСчета;
		
		ОбластьМакетаСтрокаТаблицы.Параметры.СписаниеНедостачКолонка1Колво 	= СписаниеНедостачКолонка1Колво;
		ОбластьМакетаСтрокаТаблицы.Параметры.СписаниеНедостачКолонка1Сумма 	= СписаниеНедостачКолонка1Сумма;
		ОбластьМакетаСтрокаТаблицы.Параметры.СписаниеНедостачКолонка2Колво 	= СписаниеНедостачКолонка2Колво;
		ОбластьМакетаСтрокаТаблицы.Параметры.СписаниеНедостачКолонка2Сумма 	= СписаниеНедостачКолонка2Сумма;
		
		ТабДокумент.Вывести(ОбластьМакетаСтрокаТаблицы);
		
	КонецЦикла;
	
	ОбластьИтоговПоСтранице.Параметры.ИтогоРезультатИзлишекКолво   			= ИтогоРезультатИзлишекКолво;
	ОбластьИтоговПоСтранице.Параметры.ИтогоРезультатИзлишекСумма   			= ИтогоРезультатИзлишекСумма;
	ОбластьИтоговПоСтранице.Параметры.ИтогоРезультатНедостачаКолво 			= ИтогоРезультатНедостачаКолво;
	ОбластьИтоговПоСтранице.Параметры.ИтогоРезультатНедостачаСумма 			= ИтогоРезультатНедостачаСумма;
	
	// ИГС ИД Компания, Мостовых Д.В. 20.11.2017 {
	ОбластьИтоговПоСтранице.Параметры.ИтогоРегулировкаИзлишекКолво   		= ИтогоРегулировкаИзлишекКолво;
	ОбластьИтоговПоСтранице.Параметры.ИтогоРегулировкаИзлишекСумма   		= ИтогоРегулировкаИзлишекСумма;
	ОбластьИтоговПоСтранице.Параметры.ИтогоРегулировкаНедостачаКолво 		= ИтогоРегулировкаНедостачаКолво;
	ОбластьИтоговПоСтранице.Параметры.ИтогоРегулировкаНедостачаСумма 		= ИтогоРегулировкаНедостачаСумма;
	
	ОбластьИтоговПоСтранице.Параметры.ИтогоСписаниеНедостачКолонка1Колво 	= ИтогоСписаниеНедостачКолонка1Колво;
	ОбластьИтоговПоСтранице.Параметры.ИтогоСписаниеНедостачКолонка1Сумма 	= ИтогоСписаниеНедостачКолонка1Сумма;
	ОбластьИтоговПоСтранице.Параметры.ИтогоСписаниеНедостачКолонка2Колво 	= ИтогоСписаниеНедостачКолонка2Колво;
	ОбластьИтоговПоСтранице.Параметры.ИтогоСписаниеНедостачКолонка2Сумма 	= ИтогоСписаниеНедостачКолонка2Сумма;
	
	ОбластьИтоговПоСтранице.Параметры.ИтогоФактКоличество 					= ИтогоФактКоличество;
	ОбластьИтоговПоСтранице.Параметры.ИтогоФактСумма 						= ИтогоФактСумма;
	
	// } ИГС ИД Компания, Мостовых Д.В. 
	
	ТабДокумент.Вывести(ОбластьИтоговПоСтранице);
	
	ОбластьПодвала.Параметры.ФИОБухгалтера = Бухгалтер;
	ОбластьПодвала.Параметры.Заполнить(Шапка);  
	
	Если ТолькоОбороты = Ложь Тогда
		ТабДокумент.Вывести(ОбластьПодвала);
	КонецЕсли; 
	
	// Зададим параметры макета
	ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	
КонецПроцедуры


мВалютаРегламентированногоУчета = Константы.ВалютаРегламентированногоУчета.Получить();
