Функция СведенияОВнешнейОбработке() Экспорт 
	
	ПараметрыРегистрации = Новый Структура;
	ПараметрыРегистрации.Вставить("Вид","ПечатнаяФорма");
	ПараметрыРегистрации.Вставить("Назначение",ПолучитьНазначениеОбработки());
	ПараметрыРегистрации.Вставить("Наименование","Перемещение арендованных ОС");  
	ПараметрыРегистрации.Вставить("Информация","Перемещение арендованных ОС");
	ПараметрыРегистрации.Вставить("БезопасныйРежим",Ложь);
	
	Команды = ПолучитьТаблицуКоманд();
	
	ДобавитьКоманду(Команды,"Перемещение арендованных ОС", "ПеремещениеАрендованныхОС", "ВызовСерверногоМетода", Ложь, "ПечатьMXL");
	
	ПараметрыРегистрации.Вставить("Команды",Команды);
	Возврат ПараметрыРегистрации;
	
КонецФункции

Функция ПолучитьНазначениеОбработки()
	
	Массив = Новый Массив;
	Массив.Добавить("Документ.игсУчетЗабалансовыхОС");  
	Возврат Массив; 
	
КонецФункции        

Функция ПолучитьТаблицуКоманд() 
	
	Команды = Новый ТаблицаЗначений;
	
	Команды.Колонки.Добавить("Представление", Новый ОписаниеТипов("Строка"));
	Команды.Колонки.Добавить("Идентификатор", Новый ОписаниеТипов("Строка"));
	Команды.Колонки.Добавить("Использование", Новый ОписаниеТипов("Строка"));
	Команды.Колонки.Добавить("ПоказыватьОповещение", Новый ОписаниеТипов("Булево"));
	Команды.Колонки.Добавить("Модификатор", Новый ОписаниеТипов("Строка"));
	
	Возврат Команды;
	
КонецФункции

Процедура ДобавитьКоманду(ТаблицаКоманд, Представление, Идентификатор, Использование, ПоказыватьОповещение = Ложь, Модификатор = "")
	НоваяКоманда = ТаблицаКоманд.Добавить();
	НоваяКоманда.Представление = Представление;
	НоваяКоманда.Идентификатор = Идентификатор;
	НоваяКоманда.Использование = Использование;
	НоваяКоманда.ПоказыватьОповещение = ПоказыватьОповещение;
	НоваяКоманда.Модификатор = Модификатор;
КонецПроцедуры  

Процедура Печать(МассивОбъектов, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	ПараметрыПечати = Новый Структура;
	
	УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
	КоллекцияПечатныхФорм, 
	"ПеремещениеАрендованныхОС", "Перемещение арендованных ОС", ПечатьОбъекта(МассивОбъектов));
	
КонецПроцедуры

Функция ПечатьОбъекта(МассивОбъектов) Экспорт
	
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("Ссылка", МассивОбъектов);
	ВалютаПечати    = Константы.ВалютаРегламентированногоУчета.Получить();
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПеремещениеОС.Дата КАК ДатаДок,
	|	ПеремещениеОС.Номер КАК НомерДок,
	|	ПеремещениеОС.Ответственный КАК Ответственный,
	|	ПеремещениеОС.Организация КАК Организация,
	|	ПеремещениеОС.Дата КАК ДатаПередачи,
	|	Организации.КодПоОКПО КАК КодПоОКПО
	|ИЗ
	|	Документ.игсУчетЗабалансовыхОС КАК ПеремещениеОС
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Организации КАК Организации
	|		ПО ПеремещениеОС.Организация = Организации.Ссылка
	|ГДЕ
	|	ПеремещениеОС.Ссылка В(&Ссылка)";
	ВыборкаОС = Запрос.Выполнить().Выбрать();
	ВыборкаОС.Следующий();
	
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("Ссылка",      МассивОбъектов);
	Запрос.УстановитьПараметр("Дата",        ВыборкаОС.ДатаДок);
	
	
	Запрос.Текст = "ВЫБРАТЬ
	|	ИГС_ДвижениеАрендованныхОСПриходОС.ОсновноеСредство КАК ОсновноеСредство,
	|	ИГС_ДвижениеАрендованныхОСПриходОС.Сумма КАК Сумма,
	|	ИГС_ДвижениеАрендованныхОСПриходОС.Подразделение КАК Подразделение,
	|	ИГС_ДвижениеАрендованныхОСПриходОС.Склад КАК Склад,
	|	ИГС_ДвижениеАрендованныхОСРасходОС.Склад КАК Склад1,
	|	ИГС_ДвижениеАрендованныхОСПриходОС.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ВТПеремещениеОС
	|ИЗ
	|	Документ.игсУчетЗабалансовыхОС.ПриходОС КАК ИГС_ДвижениеАрендованныхОСПриходОС
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.игсУчетЗабалансовыхОС.РасходОС КАК ИГС_ДвижениеАрендованныхОСРасходОС
	|		ПО ИГС_ДвижениеАрендованныхОСПриходОС.ОсновноеСредство = ИГС_ДвижениеАрендованныхОСРасходОС.ОсновноеСредство
	|			И ИГС_ДвижениеАрендованныхОСПриходОС.Ссылка = ИГС_ДвижениеАрендованныхОСРасходОС.Ссылка
	|			И (ИГС_ДвижениеАрендованныхОСПриходОС.Ссылка В (&Ссылка))
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПеремещениеОСОС.ОсновноеСредство КАК ОсновноеСредство,
	|	ПеремещениеОСОС.ОсновноеСредство.Код КАК ИнвНомер,
	|	ПеремещениеОСОС.ОсновноеСредство.НаименованиеПолное КАК НаименованиеОС,
	|	ПеремещениеОСОС.ОсновноеСредство.ДатаВыпуска КАК ГодВыпуска,
	|	ПеремещениеОСОС.Сумма КАК СуммаПеремещения,
	|	ПеремещениеОСОС.Склад КАК Склад,
	|	ПеремещениеОСОС.Склад1 КАК СкладРасход
	|ИЗ
	|	ВТПеремещениеОС КАК ПеремещениеОСОС
	|
	|УПОРЯДОЧИТЬ ПО
	|	Склад
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТПеремещениеОС";	
	ТаблицаПоОС = Запрос.Выполнить().Выгрузить();
	
	ДокВвода  = Неопределено;
	ДатаВвода = Дата('00000000');
	
	ТабДокумент   = Новый ТабличныйДокумент();
	
	// Зададим параметры макета                                         
	ТабДокумент.ПолеСверху         = 0;
	ТабДокумент.ПолеСлева          = 0;
	ТабДокумент.ПолеСнизу          = 0;
	ТабДокумент.ПолеСправа         = 0;
	ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ПеремещениеОС_ОС2";
	
	Макет                 = ПолучитьМакет("ИГС_ОС2");
	ОбластьШапка1         = Макет.ПолучитьОбласть("Шапка1");
	ОбластьСтрока         = Макет.ПолучитьОбласть("Строка");
	ОбластьПодвалСтраницы = Макет.ПолучитьОбласть("ПодвалСтраницы");
	ОбластьПодвал         = Макет.ПолучитьОбласть("Подвал");
	ОбластьШапка2         = Макет.ПолучитьОбласть("Шапка2");
	
	ОбластьШапка1.Параметры.Валюта = ВалютаПечати;
	
	ВыборкаПоШапке = Запрос.Выполнить().Выбрать();
	
	НС = 1;
	ИтогСумма = 0;
	ОбластьШапка1.Параметры.Заполнить(ВыборкаОС);
	
	Руководители = ОтветственныеЛицаБП.ОтветственныеЛица(ВыборкаОС.Организация, ВыборкаОС.ДатаДок );
	Бухгалтер    = Руководители.ГлавныйБухгалтер;
	ОбластьПодвал.Параметры.ГлавБух = Бухгалтер;
	
	ТабДокумент.Вывести(ОбластьШапка1);
	
	ОтветствнныйПолучатель = РегистрыСведений.ОтветственныеЛица.ПолучитьМОЛПоСкладу(ТаблицаПоОС[0].Склад); 
	ОбластьПодвал.Параметры.ПолучательРасшифровкаПодписи = ОтветствнныйПолучатель;
	
	ДанныеПолучателя = ПолучитьДанныеСотрудника(ОтветствнныйПолучатель);
	ОбластьПодвал.Параметры.ПолучательТабельныйНомер = ДанныеПолучателя["Код"];
	ОбластьПодвал.Параметры.получательДолжность = ДанныеПолучателя["ТекущаяДолжность"];
	
	ОтветственныйСдатчик = РегистрыСведений.ОтветственныеЛица.ПолучитьМОЛПоСкладу(ТаблицаПоОС[0].СкладРасход);
	ОбластьПодвал.Параметры.СдатчикРасшифровкаПодписи = ОтветственныйСдатчик;
	
	ДанныеСдатчика = ПолучитьДанныеСотрудника(ОтветственныйСдатчик);
	ОбластьПодвал.Параметры.СдатчикТабельныйНомер = ДанныеСдатчика["Код"];
	ОбластьПодвал.Параметры.СдатчикДолжность = ДанныеСдатчика["ТекущаяДолжность"];
	
	Для Счетчик = 0 По ТаблицаПоОС.Количество()-1  Цикл	
		Если НЕ Счетчик = 0 И НЕ ТаблицаПоОС[Счетчик].Склад = ТаблицаПоОС[Счетчик-1].склад Тогда
			ТабДокумент.Вывести(ОбластьПодвал);
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			ТабДокумент.Вывести(ОбластьШапка1);
			
			ОтветствнныйПолучатель = РегистрыСведений.ОтветственныеЛица.ПолучитьМОЛПоСкладу(ТаблицаПоОС[Счетчик].Склад); 
			ОбластьПодвал.Параметры.ПолучательРасшифровкаПодписи = ОтветствнныйПолучатель;
			ДанныеПолучателя = ПолучитьДанныеСотрудника(ОтветствнныйПолучатель); 
			ОбластьПодвал.Параметры.ПолучательТабельныйНомер = ДанныеПолучателя["Код"] ;
			ОбластьПодвал.Параметры.получательДолжность = ДанныеПолучателя["ТекущаяДолжность"];
			
			ИтогСумма = 0;
			НС = 1;
		КонецЕсли;
		
		ОбластьСтрока.Параметры.Заполнить(ТаблицаПоОС[Счетчик]);
		ОбластьСтрока.Параметры.НС = НС;
		Если ПустаяСтрока(ТаблицаПоОС[Счетчик].НаименованиеОС) Тогда
			ОбластьСтрока.Параметры.НаименованиеОС = СокрЛП(ТаблицаПоОС[Счетчик].ОсновноеСредство);
		КонецЕсли;
		
		СтрокаСПодвалом = Новый Массив;
		СтрокаСПодвалом.Добавить(ОбластьСтрока);
		СтрокаСПодвалом.Добавить(ОбластьПодвал);
		
		Если НЕ ТабДокумент.ПроверитьВывод(СтрокаСПодвалом)  Тогда
			ТабДокумент.Вывести(ОбластьПодвалСтраницы);
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			ТабДокумент.Вывести(ОбластьШапка2);
		КонецЕсли;
		
		ТабДокумент.Вывести(ОбластьСтрока);
		
		ИтогСумма = ИтогСумма + ?(ТаблицаПоОС[Счетчик].СуммаПеремещения <> Null, ТаблицаПоОС[Счетчик].СуммаПеремещения, 0);
		ОбластьПодвал.Параметры.ИтогСумма = ИтогСумма;
		
		Нс = НС + 1;
		
	КонецЦикла;
	
	
	ТабДокумент.Вывести(ОбластьПодвал);	
	
	Возврат ТабДокумент;
	
КонецФункции

Функция ПолучитьДанныеСотрудника(ФизЛицо)
	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("ФизическоеЛицо", ФизЛицо);
	Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
	|	ТекущиеКадровыеДанныеСотрудников.Сотрудник КАК Сотрудник,
	|	Сотрудники.Код КАК Код,
	|	ТекущиеКадровыеДанныеСотрудников.ДатаПриема КАК ДатаПриема,
	|	ТекущиеКадровыеДанныеСотрудников.ТекущаяДолжность КАК ТекущаяДолжность
	|ИЗ
	|	РегистрСведений.ТекущиеКадровыеДанныеСотрудников КАК ТекущиеКадровыеДанныеСотрудников
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Сотрудники КАК Сотрудники
	|		ПО ТекущиеКадровыеДанныеСотрудников.Сотрудник = Сотрудники.Ссылка
	|ГДЕ
	|	ТекущиеКадровыеДанныеСотрудников.ФизическоеЛицо = &ФизическоеЛицо
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДатаПриема УБЫВ";
	
	
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда 
		Возврат Неопределено;
	КонецЕсли;
	
	Выборка = Результат.Выгрузить();
	
	ДанныеСотрудника = Новый Соответствие;
	ДанныеСотрудника.Вставить("Код", Выборка[0].Код);
	ДанныеСотрудника.Вставить("ТекущаяДолжность", Выборка[0].ТекущаяДолжность);	
	
	Возврат ДанныеСотрудника;
	
	
КонецФункции

