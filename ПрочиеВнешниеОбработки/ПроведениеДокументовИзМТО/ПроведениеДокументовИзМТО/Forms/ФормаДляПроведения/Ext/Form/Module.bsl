
&НаКлиенте
Процедура ВыполнитьПроведение(Команда)
		
   	ИДЗадания =  "";
	Индикатор = 0;
	СтрокаСостояния = "";
	
	ПараметрыЗапуска = ПодготовитьДанныеДляДлительнойОперации();
	Если ПараметрыЗапуска = Неопределено Тогда
		Возврат
	КонецЕсли;
	СтруктураФоновогоЗадания = ВыполнитьФоновоеЗаданиеНаСервере(ПараметрыЗапуска, УникальныйИдентификатор);
	ИДЗадания =  СтруктураФоновогоЗадания.ИдентификаторЗадания;
	
	ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(ЭтотОбъект);
	ПараметрыОжидания.ВыводитьПрогрессВыполнения = Истина;
	ПараметрыОжидания.ВыводитьСообщения = Истина;
	ПараметрыОжидания.Интервал = 2;
	
	ДлительныеОперацииКлиент.ОжидатьЗавершение(
		СтруктураФоновогоЗадания,
		Новый ОписаниеОповещения("ОбработатьДанные", ЭтотОбъект),
		ПараметрыОжидания);
	
	ПодключитьОбработчикОжидания("ОбработчикОжиданияИндикатор",1);
		
КонецПроцедуры 

&НаКлиенте
Функция ПодготовитьДанныеДляДлительнойОперации()
	
	Отказ = Ложь;
	НачПериода = Объект.Период.ДатаНачала;
	КонПериода = Объект.Период.ДатаОкончания;
	Организация = Объект.Организация;	
	
	ТипыДокументов = Новый Массив();
	
	Если Объект.ПоступлениеТоваровУслуг Тогда ТипыДокументов.Добавить("ПоступлениеТоваровУслуг") КонецЕсли; 
	Если Объект.ПеремещениеТоваров Тогда ТипыДокументов.Добавить("ПеремещениеТоваров") КонецЕсли;
	Если Объект.ПеремещениеОС Тогда ТипыДокументов.Добавить("ПеремещениеОС") КонецЕсли;
	Если Объект.ТребованиеНакладная Тогда ТипыДокументов.Добавить("ТребованиеНакладная") КонецЕсли;
	Если Объект.ПередачаМатериаловВЭксплуатацию Тогда ТипыДокументов.Добавить("ПередачаМатериаловВЭксплуатацию") КонецЕсли;
	Если Объект.ВозвратМатериаловИзЭксплуатации Тогда ТипыДокументов.Добавить("ВозвратМатериаловИзЭксплуатации") КонецЕсли;
	Если Объект.СписаниеМатериаловИзЭксплуатации Тогда ТипыДокументов.Добавить("СписаниеМатериаловИзЭксплуатации") КонецЕсли;
	Если Объект.ПеремещениеМатериаловВЭксплуатации Тогда ТипыДокументов.Добавить("ИмпВнутреннееПеремещениеМатериаловВЭксплуатации") КонецЕсли;
	Если Объект.СписаниеТоваров Тогда ТипыДокументов.Добавить("СписаниеТоваров") КонецЕсли;
	Если Объект.ОприходованиеТоваров Тогда ТипыДокументов.Добавить("ОприходованиеТоваров") КонецЕсли;
	Если Объект.КомплектацияНоменклатуры Тогда ТипыДокументов.Добавить("КомплектацияНоменклатуры") КонецЕсли;
	Если Объект.РеализацияТоваровУслуг Тогда ТипыДокументов.Добавить("РеализацияТоваровУслуг") КонецЕсли;
	Если Объект.ВыпускПродукции Тогда ТипыДокументов.Добавить("ОтчетПроизводстваЗаСмену") КонецЕсли;
	Если Объект.АвансовыйОтчет Тогда ТипыДокументов.Добавить("АвансовыйОтчет") КонецЕсли;
	Если Объект.ИГС_ДвижениеАрендованногоИмущества Тогда ТипыДокументов.Добавить("игсДвижениеЗабалансовыхМТР") КонецЕсли;
	
	Если ТипыДокументов.Количество() = 0 Тогда
		ОбщегоНазначенияКлиент.СообщитьПользователю("Ни один тип документа не был выбран");
		Отказ = Истина;
	КонецЕсли;
	
	Настройки = Новый Структура;
	Настройки.Вставить("ВыполнитьОбщееПерепроведение", Объект.ВыполнитьОбщееПерепроведение);
	Настройки.Вставить("НеОстанавливаться", Объект.НеОстанавливаться);

	Если НЕ ЗначениеЗаполнено(НачПериода) ИЛИ НЕ ЗначениеЗаполнено(КонПериода) Тогда 
		ОбщегоНазначенияКлиент.СообщитьПользователю("Период не выбран",,"Объект.Период");
		Отказ=Истина;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Организация) Тогда 
		ОбщегоНазначенияКлиент.СообщитьПользователю("Организация не выбрана",,"Объект.Организация");
		Отказ=Истина;
	КонецЕсли;
	
	Если Отказ Тогда	
		Возврат Неопределено;	
	КонецЕсли;
	
	ПараметрыЗапуска = Новый Структура;
	ПараметрыЗапуска.Вставить("НачПериода",		 НачПериода);
	ПараметрыЗапуска.Вставить("КонПериода", 	 КонПериода);
	ПараметрыЗапуска.Вставить("Организация", 	 Организация);
	ПараметрыЗапуска.Вставить("ТипыДокументов", ТипыДокументов);
	ПараметрыЗапуска.Вставить("Настройки", Настройки);
	
	Возврат ПараметрыЗапуска;
	
КонецФункции

&НаСервереБезКонтекста
Функция ВыполнитьФоновоеЗаданиеНаСервере(ПараметрыЗапуска, УникальныйИдентификатор)

	НаименованиеЗадания = НСтр("ru = 'Запуск длительной операции'");
		
	ДополнительнаяОбработкаСсылка =  Справочники.ДополнительныеОтчетыИОбработки.НайтиПоНаименованию("Проведение документов из МТО");
	
	ВыполняемыйМетод = "ДлительныеОперации.ВыполнитьПроцедуруМодуляОбъектаОбработки";

	ПараметрыЗадания = Новый Структура;
	ПараметрыЗадания.Вставить("ИмяОбработки", "ВнешняяОбработка." + ДополнительнаяОбработкаСсылка.ИмяОбъекта);
	ПараметрыЗадания.Вставить("ИмяМетода", "ДлительнаяОперации");
	ПараметрыЗадания.Вставить("ПараметрыВыполнения", ПараметрыЗапуска);
	ПараметрыЗадания.Вставить("ЭтоВнешняяОбработка", Истина);
	ПараметрыЗадания.Вставить("ДополнительнаяОбработкаСсылка",ДополнительнаяОбработкаСсылка);
	
	ПараметрыВыполнения = ДлительныеОперации.ПараметрыВыполненияВФоне(УникальныйИдентификатор);
	ПараметрыВыполнения.НаименованиеФоновогоЗадания = НаименованиеЗадания;
	ПараметрыВыполнения.ЗапуститьВФоне = Истина;
	ПараметрыВыполнения.Вставить("ИдентификаторФормы", УникальныйИдентификатор); 
	                                                                                                                                                  	
	СтруктураФоновогоЗадания = ДлительныеОперации.ВыполнитьВФоне(ВыполняемыйМетод, ПараметрыЗадания, ПараметрыВыполнения);
	
	Возврат СтруктураФоновогоЗадания;
	
КонецФункции

&НаКлиенте
Процедура ОбработатьДанные(Результат, ДополнительныеПараметры) Экспорт
	ОтключитьОбработчикОжидания("ОбработчикОжиданияИндикатор");
	                                                     	
	Если Результат = Неопределено Тогда
		Возврат;
	ИначеЕсли Результат.Статус = "Ошибка" Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(Результат.ПодробноеПредставлениеОшибки);
		СтрокаСостояния = "Задание завершено с ошибками.";
		Возврат;
	ИначеЕсли Результат.Статус = "Выполнено" Тогда
		Данные = ПолучитьИзВременногоХранилища(Результат.АдресРезультата);
		ВозвратноеЗначение = Данные.Количество();
		Индикатор = 100; 
        Элементы.СтрокаСостояния.Видимость = Истина;
		СтрокаСостояния = "Проведено " +  ВозвратноеЗначение + " документов";
	КонецЕсли;
	
КонецПроцедуры

#Область Индикатор

&НаКлиенте 
Процедура ОбработчикОжиданияИндикатор() Экспорт 
	Прогресс = ПрочитатьПрогресс(ИДЗадания);
	Если НЕ ТипЗнч(Прогресс) = Тип("Структура") Тогда
		СтрокаСостояния = "";
		Возврат;
	КонецЕсли;
	
	Если ТипЗнч(Прогресс) = Тип("Структура") 
		И Прогресс.Свойство("ЗавершеноАварийно") Тогда
		ОтключитьОбработчикОжидания("ОбработчикОжиданияИндикатор");
		Возврат;
	КонецЕсли;
	
	Если Прогресс.Свойство("ЗаданиеВыполнено") И Прогресс.ЗаданиеВыполнено Тогда
		Индикатор = 100;
		СтрокаСостояния = "Задание завершено.";
	Иначе
		Если Прогресс.Свойство("Процент") Тогда
			Индикатор = Прогресс.Процент;
		КонецЕсли;
		Если Прогресс.Свойство("Текст") Тогда
			СтрокаСостояния = Прогресс.Текст;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры
	
Функция ПрочитатьПрогресс(Знач ИдентификаторФоновогоЗадания) Экспорт
	
	Задание = ФоновыеЗадания.НайтиПоУникальномуИдентификатору(ИдентификаторФоновогоЗадания);
	Если Задание = Неопределено Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Если Задание.Состояние = СостояниеФоновогоЗадания.ЗавершеноАварийно Тогда
		ОтключитьОбработчикОжидания("ОбработчикОжиданияИндикатор");
		Возврат Неопределено;
	КонецЕсли;
		
	ПрогрессЗадания = ДлительныеОперации.ПрочитатьПрогресс(ИдентификаторФоновогоЗадания);
	
	Если ПрогрессЗадания = Неопределено
	 Или ТипЗнч(ПрогрессЗадания) <> Тип("Структура") Тогда
	 ПрогрессЗадания = Новый Структура;
	КонецЕсли;
	ПрогрессЗадания.Вставить("ЗаданиеВыполнено", ДлительныеОперации.ЗаданиеВыполнено(ИдентификаторФоновогоЗадания));
	
	Возврат ПрогрессЗадания;
	
КонецФункции

#КонецОбласти 

&НаКлиенте
Процедура ПриОткрытии()
	Объект.Период.ДатаНачала = НачалоМесяца(НачалоМесяца(ТекущаяДата()) - 1);
	Объект.Период.ДатаОкончания = КонецМесяца(НачалоМесяца(ТекущаяДата()) - 1);
	
	Объект.ПоступлениеТоваровУслуг = Истина;
	Объект.ПеремещениеТоваров = Истина;
	Объект.ПеремещениеОС = Истина;
	Объект.ТребованиеНакладная = Истина;
	Объект.ПередачаМатериаловВЭксплуатацию = Истина;
	Объект.ВозвратМатериаловИзЭксплуатации = Истина;
	Объект.СписаниеМатериаловИзЭксплуатации = Истина;
	Объект.ПеремещениеМатериаловВЭксплуатации = Истина;
	Объект.СписаниеТоваров = Истина;
	Объект.ОприходованиеТоваров = Истина;
	Объект.КомплектацияНоменклатуры = Истина;
	Объект.РеализацияТоваровУслуг = Истина;
	Объект.ВыпускПродукции = Истина;
	Объект.АвансовыйОтчет = Истина;
	Объект.ИГС_ДвижениеАрендованногоИмущества = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьВсе(Команда)
	Объект.ПоступлениеТоваровУслуг = Истина;
	Объект.ПеремещениеТоваров = Истина;
	Объект.ПеремещениеОС = Истина;
	Объект.ТребованиеНакладная = Истина;
	Объект.ПередачаМатериаловВЭксплуатацию = Истина;
	Объект.ВозвратМатериаловИзЭксплуатации = Истина;
	Объект.СписаниеМатериаловИзЭксплуатации = Истина;
	Объект.ПеремещениеМатериаловВЭксплуатации = Истина;
	Объект.СписаниеТоваров = Истина;
	Объект.ОприходованиеТоваров = Истина;
	Объект.КомплектацияНоменклатуры = Истина;
	Объект.РеализацияТоваровУслуг = Истина;
	Объект.ВыпускПродукции = Истина;
	Объект.АвансовыйОтчет = Истина;
	Объект.ИГС_ДвижениеАрендованногоИмущества = Истина;
КонецПроцедуры

&НаКлиенте
Процедура УбратьВыделение(Команда)
	Объект.ПоступлениеТоваровУслуг = Ложь;
	Объект.ПеремещениеТоваров = Ложь;
	Объект.ПеремещениеОС = Ложь;
	Объект.ТребованиеНакладная = Ложь;
	Объект.ПередачаМатериаловВЭксплуатацию = Ложь;
	Объект.ВозвратМатериаловИзЭксплуатации = Ложь;
	Объект.СписаниеМатериаловИзЭксплуатации = Ложь;
	Объект.ПеремещениеМатериаловВЭксплуатации = Ложь;
	Объект.СписаниеТоваров = Ложь;
	Объект.ОприходованиеТоваров = Ложь;
	Объект.КомплектацияНоменклатуры = Ложь;
	Объект.РеализацияТоваровУслуг = Ложь;
	Объект.ВыпускПродукции = Ложь;
	Объект.АвансовыйОтчет = Ложь;
	Объект.ИГС_ДвижениеАрендованногоИмущества = Ложь;
КонецПроцедуры


