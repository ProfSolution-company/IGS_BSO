
Перем ТЗПоследнихПеремещений;
Перем ТЗОборачиваемостьПоОбществу;
Перем ТЗОборачиваемостьПоСкладу;
Перем ТЗИнициаторовЗаявок;
Перем ТЗКонсервация;
Перем ТЗРодители;
Перем ТЗРезервы;

Функция СведенияОВнешнейОбработке() Экспорт
	
	ИмяОтчета = ЭтотОбъект.Метаданные().Имя;
	Синоним = ЭтотОбъект.Метаданные().Синоним;
	Синоним = ?(ЗначениеЗаполнено(Синоним), Синоним, ИмяОтчета);
	
	РегистрационныеДанные = Новый Структура;
	РегистрационныеДанные.Вставить("Вид", "ДополнительныйОтчет");
	РегистрационныеДанные.Вставить("Наименование", Синоним);
	РегистрационныеДанные.Вставить("Версия", "1.1");
	РегистрационныеДанные.Вставить("БезопасныйРежим", Истина);
	РегистрационныеДанные.Вставить("Информация", "Отчет " + Синоним);
	
	ТаблицаКоманд = ПолучитьТаблицуКоманд();
	
	ДобавитьКоманду(ТаблицаКоманд, Синоним, "СформироватьОтчет", "ОткрытиеФормы", Истина);
	РегистрационныеДанные.Вставить("Команды", ТаблицаКоманд);
	Возврат РегистрационныеДанные;
	
КонецФункции

Функция ПолучитьТаблицуКоманд()
	
	Команды = Новый ТаблицаЗначений;
	Команды.Колонки.Добавить("Представление", Новый ОписаниеТипов("Строка"));
	Команды.Колонки.Добавить("Идентификатор", Новый ОписаниеТипов("Строка"));
	Команды.Колонки.Добавить("Использование", Новый ОписаниеТипов("Строка"));
	Команды.Колонки.Добавить("ПоказыватьОповещение", Новый ОписаниеТипов("Булево"));
	Команды.Колонки.Добавить("Модификатор", Новый ОписаниеТипов("Строка"));
	
	Возврат Команды;
	
КонецФункции

Процедура ДобавитьКоманду(ТаблицаКоманд, Представление, Идентификатор, Использование = "ОткрытиеФормы", ПоказыватьОповещение = Ложь, Модификатор = "ПечатьMXL")
	
	НоваяКоманда = ТаблицаКоманд.Добавить();
	НоваяКоманда.Представление = Представление;
	НоваяКоманда.Идентификатор = Идентификатор;
	НоваяКоманда.Использование = Использование;
	НоваяКоманда.ПоказыватьОповещение = ПоказыватьОповещение;
	НоваяКоманда.Модификатор = Модификатор;                                                                                          
КонецПроцедуры

Процедура ПриКомпоновкеРезультата(ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Настройки = КомпоновщикНастроек.ПолучитьНастройки();
	Элемент = Настройки.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("Дата"));
	Если Элемент <> Неопределено Тогда
		Период = Элемент.Значение;
	КонецЕсли;
	
	Элемент = Настройки.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("СписокСчетов"));
	Если Элемент <> Неопределено  Тогда
		СписокСчетов = Элемент.Значение;
	КонецЕсли; 
	
	Элемент = Настройки.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("МесяцевДляАнализа"));
	Если Элемент <> Неопределено Тогда
		МесяцевДляАнализа = Элемент.Значение;
	КонецЕсли;
	
	Элемент = Настройки.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("МесяцевБезДвижения"));
	Если Элемент <> Неопределено Тогда
		МесяцевБезДвижения = Элемент.Значение;
	КонецЕсли; 
	
	Элемент = Настройки.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("Склады"));
	Если Элемент <> Неопределено Тогда
		Склады = Элемент.Значение;
	КонецЕсли;
	СкладыМас = Новый Массив;
	СкладыМас.Добавить(Склады);
	
	ВыбранныеСчета = Новый Массив;
	
	Если ТипЗнч(СписокСчетов) = Тип("СписокЗначений") Тогда
		Для каждого Строка Из СписокСчетов Цикл
			ВыбранныеСчета.Добавить(Строка.Значение);
		КонецЦикла;
	Иначе 
		ВыбранныеСчета.Добавить(СписокСчетов);
	КонецЕсли;
	
	Таблица = ПолучитьТаблицу(ВыбранныеСчета, МесяцевДляАнализа, МесяцевБезДвижения, Период.Дата, СкладыМас);	
	
	СхемаКомпоновкиДанных = ПолучитьМакет("ОсновнаяСхемаКомпоновкиДанных");	
	Настройки = КомпоновщикНастроек.ПолучитьНастройки(); 
	
	ДанныеРасшифровки = Новый ДанныеРасшифровкиКомпоновкиДанных; 
	
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;	
	МакетКомпоновки = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных, Настройки, ДанныеРасшифровки);	
	
	ВнешнийНаборДанных = Новый Структура("ТЗДанные", Таблица); 
	ПроцессорКомпоновкиДанных = Новый ПроцессорКомпоновкиДанных; 
	ПроцессорКомпоновкиДанных.Инициализировать(МакетКомпоновки, ВнешнийНаборДанных, ДанныеРасшифровки); 
	
	ДокументРезультат.Очистить();
	
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент; 
	ПроцессорВывода.УстановитьДокумент(ДокументРезультат); 
	ПроцессорВывода.Вывести(ПроцессорКомпоновкиДанных);
	
КонецПроцедуры

Функция ПолучитьТаблицу(Счета, МесяцевДляАнализа, МесяцевБезДвижения, Период, Склады)
	
	СформироватьТЗРезервов(Период);
	СформироватьТЗРодители();
	СформироватьТЗПеремещений(Счета, Период);
	СформироватьТЗОборачиваемостиПоОбществу(Период,МесяцевДляАнализа);
	СформироватьТЗОборачиваемостиПоСкладу(Период, МесяцевДляАнализа);
	СформироватьТЗКонсервация(Период);
	
	НоменклатураКонтрагент = Новый Массив;
	НоменклатураСклад = Новый Массив;
	НоменклатураФизЛицо = Новый Массив;
	ОССклады = Новый Массив;
	
	НоменклатураКонтрагент.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Номенклатура);
	НоменклатураКонтрагент.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Контрагенты);
	
	НоменклатураСклад.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Номенклатура);
	НоменклатураСклад.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Склады);
	
	НоменклатураФизЛицо.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Номенклатура);
	НоменклатураФизЛицо.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.РаботникиОрганизаций);
	
	ОССклады.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ОсновныеСредства);
	ОССклады.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Склады);
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ХозрасчетныйОстатки.Счет КАК Счет,
	|	ХозрасчетныйОстатки.Субконто1 КАК Субконто1,
	|	ХозрасчетныйОстатки.Организация КАК Организация,
	|	ХозрасчетныйОстатки.СуммаОстаток КАК СуммаОстаток
	|ПОМЕСТИТЬ ВтОстатки
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Остатки(
	|			&Период,
	|			Счет В ИЕРАРХИИ (&Счет01)
	|				И Счет В (&Счета),
	|			&ВидыСубконтоОсновныеСредство,
	|			) КАК ХозрасчетныйОстатки
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Счет,
	|	Субконто1
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ХозрасчетныйОстатки.Субконто1 КАК Субконто1,
	|	ХозрасчетныйОстатки.СуммаОстаток КАК СуммаОстаток
	|ПОМЕСТИТЬ ВтАмортизация
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Остатки({(&Период)}, Счет В ИЕРАРХИИ (&Счет02), &ВидыСубконтоОсновныеСредство, ) КАК ХозрасчетныйОстатки
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Субконто1
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	игсОстаткиОСНаСкладахОстатки.Склад КАК Склад,
	|	игсОстаткиОСНаСкладахОстатки.ОС КАК ОС
	|ПОМЕСТИТЬ ВтОстаткиНаСкладах
	|ИЗ
	|	РегистрНакопления.игсОстаткиОСНаСкладах.Остатки(
	|			,
	|			Склад В ИЕРАРХИИ (&Склады)
	|				ИЛИ &НеЗаданОтборПоСкладу) КАК игсОстаткиОСНаСкладахОстатки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВтОстатки.Субконто1 КАК ОсновноеСредство,
	|	ВтОстатки.Организация КАК Организация,
	|	ВтОстатки.СуммаОстаток КАК ПервоначальнаяСтоимость,
	|	ВтАмортизация.СуммаОстаток КАК Амортизация,
	|	ВтОстатки.Счет КАК Счет,
	|	ВтОстаткиНаСкладах.Склад КАК Склад
	|ПОМЕСТИТЬ ВТОсновныеСредства
	|ИЗ
	|	ВтОстатки КАК ВтОстатки
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВтАмортизация КАК ВтАмортизация
	|		ПО ВтОстатки.Субконто1 = ВтАмортизация.Субконто1
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВтОстаткиНаСкладах КАК ВтОстаткиНаСкладах
	|		ПО ВтОстатки.Субконто1 = ВтОстаткиНаСкладах.ОС
	|ГДЕ
	|	(ВтОстаткиНаСкладах.Склад В ИЕРАРХИИ (&Склады)
	|			ИЛИ &НеЗаданОтборПоСкладу)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство,
	|	Счет
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МестонахождениеОСБухгалтерскийУчетСрезПоследних.Период КАК Период,
	|	МестонахождениеОСБухгалтерскийУчетСрезПоследних.Местонахождение КАК Местонахождение,
	|	МестонахождениеОСБухгалтерскийУчетСрезПоследних.ОсновноеСредство КАК ОсновноеСредство,
	|	МестонахождениеОСБухгалтерскийУчетСрезПоследних.МОЛ КАК МОЛ
	|ПОМЕСТИТЬ ВтМестонахождение
	|ИЗ
	|	РегистрСведений.МестонахождениеОСБухгалтерскийУчет.СрезПоследних({(&Период)}, ) КАК МестонахождениеОСБухгалтерскийУчетСрезПоследних
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МАКСИМУМ(МестонахождениеОСБухгалтерскийУчет.МОЛ) КАК МОЛ,
	|	МестонахождениеОСБухгалтерскийУчет.ОсновноеСредство КАК ОсновноеСредство
	|ПОМЕСТИТЬ ВТВсеМестонахождениеЗаПериодБезДвижения
	|ИЗ
	|	РегистрСведений.МестонахождениеОСБухгалтерскийУчет КАК МестонахождениеОСБухгалтерскийУчет
	|ГДЕ
	|	МестонахождениеОСБухгалтерскийУчет.Период МЕЖДУ &НачалоПериодаБезДвижения И &Период
	|
	|СГРУППИРОВАТЬ ПО
	|	МестонахождениеОСБухгалтерскийУчет.ОсновноеСредство
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВтМестонахождение.ОсновноеСредство КАК ОсновноеСредство,
	|	МАКСИМУМ(МестонахождениеОСБухгалтерскийУчет.Период) КАК Период
	|ПОМЕСТИТЬ ВТВсеМестонахождениеЗаПериод
	|ИЗ
	|	ВтМестонахождение КАК ВтМестонахождение
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.МестонахождениеОСБухгалтерскийУчет КАК МестонахождениеОСБухгалтерскийУчет
	|		ПО ВтМестонахождение.Период > МестонахождениеОСБухгалтерскийУчет.Период
	|			И ВтМестонахождение.ОсновноеСредство = МестонахождениеОСБухгалтерскийУчет.ОсновноеСредство
	|			И ВтМестонахождение.МОЛ <> МестонахождениеОСБухгалтерскийУчет.МОЛ
	|
	|СГРУППИРОВАТЬ ПО
	|	ВтМестонахождение.ОсновноеСредство
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТОсновныеСредства.Организация КАК Организация,
	|	ВТОсновныеСредства.Склад КАК Склад,
	|	ВТОсновныеСредства.Счет КАК Счет,
	|	ВЫРАЗИТЬ(ВТОсновныеСредства.ОсновноеСредство КАК Справочник.ОсновныеСредства).Код КАК Код,
	|	ВТОсновныеСредства.ОсновноеСредство КАК Наименование,
	|	NULL КАК ЕИ,
	|	1 КАК Количество,
	|	0 КАК Цена,
	|	ВТОсновныеСредства.ПервоначальнаяСтоимость + ВТОсновныеСредства.Амортизация КАК Сумма,
	|	ВТОсновныеСредства.ПервоначальнаяСтоимость КАК ПервоначальнаяСтоимость,
	|	ВтМестонахождение.Период КАК ДатаПоследнегоПеремещения,
	|	МестонахождениеОСБухгалтерскийУчет.МОЛ КАК ПредыдущееМОЛ,
	|	ВЫБОР
	|		КОГДА ВТВсеМестонахождениеЗаПериодБезДвижения.МОЛ ЕСТЬ NULL
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК БезДвижения,
	|	ОсновныеСредства.ЗаводскойНомер КАК ЗаводскойНомер,
	|	ВтМестонахождение.Местонахождение КАК Местонахождение
	|ПОМЕСТИТЬ ВТОСИтоговая
	|ИЗ
	|	ВТОсновныеСредства КАК ВТОсновныеСредства
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВтМестонахождение КАК ВтМестонахождение
	|		ПО ВТОсновныеСредства.ОсновноеСредство = ВтМестонахождение.ОсновноеСредство
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ОсновныеСредства КАК ОсновныеСредства
	|		ПО ВТОсновныеСредства.ОсновноеСредство = ОсновныеСредства.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТВсеМестонахождениеЗаПериод КАК ВТВсеМестонахождениеЗаПериод
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.МестонахождениеОСБухгалтерскийУчет КАК МестонахождениеОСБухгалтерскийУчет
	|			ПО ВТВсеМестонахождениеЗаПериод.ОсновноеСредство = МестонахождениеОСБухгалтерскийУчет.ОсновноеСредство
	|				И ВТВсеМестонахождениеЗаПериод.Период = МестонахождениеОСБухгалтерскийУчет.Период
	|		ПО ВТОсновныеСредства.ОсновноеСредство = ВТВсеМестонахождениеЗаПериод.ОсновноеСредство
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТВсеМестонахождениеЗаПериодБезДвижения КАК ВТВсеМестонахождениеЗаПериодБезДвижения
	|		ПО ВТОсновныеСредства.ОсновноеСредство = ВТВсеМестонахождениеЗаПериодБезДвижения.ОсновноеСредство
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Наименование
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	""МПЗ"" КАК Тип,
	|	ХозрасчетныйОстатки.Организация КАК Организация,
	|	ХозрасчетныйОстатки.Субконто2 КАК Склад,
	|	ХозрасчетныйОстатки.Счет КАК Счет,
	|	ХозрасчетныйОстатки.Субконто1.Код КАК Код,
	|	ХозрасчетныйОстатки.Субконто1 КАК Наименование,
	|	ХозрасчетныйОстатки.Валюта КАК ЕИ,
	|	ХозрасчетныйОстатки.КоличествоОстаток КАК Количество,
	|	ХозрасчетныйОстатки.СуммаОстаток КАК Сумма,
	|	ВЫБОР
	|		КОГДА ХозрасчетныйОстатки.КоличествоОстаток <> 0
	|			ТОГДА ХозрасчетныйОстатки.СуммаОстаток / ХозрасчетныйОстатки.КоличествоОстаток
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК Цена,
	|	0 КАК ПервоначальнаяСтоимость,
	|	ДАТАВРЕМЯ(1, 1, 1) КАК ДатаПоследнегоПеремещения,
	|	ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка) КАК ПредыдущееМОЛ1,
	|	ИСТИНА КАК БезДвижения,
	|	NULL КАК ДатаПоступленияНаБалансОбщества,
	|	NULL КАК ЗаводскойНомер,
	|	NULL КАК Местонахождение
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Остатки(
	|			&Период,
	|			Счет В (&Счета),
	|			&ВидыСубконтоНоменклатураСклад,
	|			Субконто2 В ИЕРАРХИИ (&Склады)
	|				ИЛИ &НеЗаданОтборПоСкладу) КАК ХозрасчетныйОстатки
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	""МПЗ"",
	|	ХозрасчетныйОстатки.Организация,
	|	ХозрасчетныйОстатки.Субконто2,
	|	ХозрасчетныйОстатки.Счет,
	|	ХозрасчетныйОстатки.Субконто1.Код,
	|	ХозрасчетныйОстатки.Субконто1,
	|	ХозрасчетныйОстатки.Валюта,
	|	ХозрасчетныйОстатки.КоличествоОстаток,
	|	ХозрасчетныйОстатки.СуммаОстаток,
	|	0,
	|	0,
	|	ДАТАВРЕМЯ(1, 1, 1),
	|	ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка),
	|	ИСТИНА,
	|	NULL,
	|	NULL,
	|	NULL
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Остатки(
	|			&Период,
	|			Счет В (&Счета)
	|				И НЕ Счет В ИЕРАРХИИ (&Счет002)
	|				И Счет <> &СчетМЦ04А,
	|			&ВидыСубконтоНоменклатураКонтрагент,
	|			) КАК ХозрасчетныйОстатки
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	""МПЗ"",
	|	ХозрасчетныйОстатки.Организация,
	|	ХозрасчетныйОстатки.Субконто2,
	|	ХозрасчетныйОстатки.Счет,
	|	ХозрасчетныйОстатки.Субконто1.Код,
	|	ХозрасчетныйОстатки.Субконто1,
	|	ХозрасчетныйОстатки.Валюта,
	|	ХозрасчетныйОстатки.КоличествоОстаток,
	|	ХозрасчетныйОстатки.СуммаОстаток,
	|	0,
	|	0,
	|	ДАТАВРЕМЯ(1, 1, 1),
	|	ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка),
	|	ИСТИНА,
	|	NULL,
	|	NULL,
	|	NULL
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Остатки(&Период, Счет В (&Счета), &ВидыСубконтоНоменклатураФизЛицо, ) КАК ХозрасчетныйОстатки
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	""ОС"",
	|	ВТОСИтоговая.Организация,
	|	ВТОСИтоговая.Склад,
	|	ВТОСИтоговая.Счет,
	|	ВТОСИтоговая.Код,
	|	ВТОСИтоговая.Наименование,
	|	ВТОСИтоговая.ЕИ,
	|	ВТОСИтоговая.Количество,
	|	ВТОСИтоговая.Сумма,
	|	ВТОСИтоговая.Цена,
	|	ВТОСИтоговая.ПервоначальнаяСтоимость,
	|	ВТОСИтоговая.ДатаПоследнегоПеремещения,
	|	ВТОСИтоговая.ПредыдущееМОЛ,
	|	ВТОСИтоговая.БезДвижения,
	|	СостоянияОСОрганизаций.ДатаСостояния,
	|	ВТОСИтоговая.ЗаводскойНомер,
	|	ВТОСИтоговая.Местонахождение
	|ИЗ
	|	ВТОСИтоговая КАК ВТОСИтоговая
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СостоянияОСОрганизаций КАК СостоянияОСОрганизаций
	|		ПО ВТОСИтоговая.Организация = СостоянияОСОрганизаций.Организация
	|			И ВТОСИтоговая.Наименование = СостоянияОСОрганизаций.ОсновноеСредство
	|			И (СостоянияОСОрганизаций.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияОС.ПринятоКУчету))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	""ОС"",
	|	ХозрасчетныйОстатки.Организация,
	|	ХозрасчетныйОстатки.Субконто2,
	|	ХозрасчетныйОстатки.Счет,
	|	ХозрасчетныйОстатки.Субконто1.Код,
	|	ХозрасчетныйОстатки.Субконто1,
	|	ВЫБОР
	|		КОГДА ХозрасчетныйОстатки.Счет = &СчетМЦ08
	|			ТОГДА ХозрасчетныйОстатки.КоличествоОстаток
	|		ИНАЧЕ 1
	|	КОНЕЦ,
	|	NULL,
	|	ХозрасчетныйОстатки.СуммаОстаток,
	|	ХозрасчетныйОстатки.СуммаОстаток,
	|	0,
	|	ДАТАВРЕМЯ(1, 1, 1),
	|	ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка),
	|	ЛОЖЬ,
	|	NULL,
	|	ХозрасчетныйОстатки.Субконто1.ЗаводскойНомер,
	|	NULL
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Остатки(
	|			&Период,
	|			Счет В (&Счета),
	|			&ВидыСубконтоОССклады,
	|			Субконто2 В ИЕРАРХИИ (&Склады)
	|				ИЛИ &НеЗаданОтборПоСкладу) КАК ХозрасчетныйОстатки";
	
	Запрос.УстановитьПараметр("Период", 	Период);
	Запрос.УстановитьПараметр("Счета", 		Счета);
	Запрос.УстановитьПараметр("Счет01", 	ПланыСчетов.Хозрасчетный.ОсновныеСредства);
	Запрос.УстановитьПараметр("Счет02", 	ПланыСчетов.Хозрасчетный.АмортизацияОсновныхСредств);
	Запрос.УстановитьПараметр("Счет002", 	ПланыСчетов.Хозрасчетный.НайтиПоКоду("002"));
	Запрос.УстановитьПараметр("СчетМЦ04А", 	ПланыСчетов.Хозрасчетный.НайтиПоКоду("МЦ.04.А"));
	Запрос.УстановитьПараметр("СчетМЦ08",	ПланыСчетов.Хозрасчетный.НайтиПоКоду("МЦ.08"));
	Запрос.УстановитьПараметр("ВидыСубконтоОсновныеСредство", 	ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ОсновныеСредства);
	Запрос.УстановитьПараметр("НачалоПериодаБезДвижения", 		ДобавитьМесяц(Период, -1 * МесяцевБезДвижения));
	
	Запрос.УстановитьПараметр("ВидыСубконтоНоменклатураСклад", 		НоменклатураСклад);
	Запрос.УстановитьПараметр("ВидыСубконтоНоменклатураКонтрагент", НоменклатураКонтрагент);
	Запрос.УстановитьПараметр("ВидыСубконтоНоменклатураФизЛицо", 	НоменклатураФизЛицо);
	Запрос.УстановитьПараметр("ВидыСубконтоОССклады", 				ОССклады);
	Запрос.УстановитьПараметр("Склады", 							Склады);
	
	Запрос.УстановитьПараметр("НеЗаданОтборПоСкладу", Склады.Количество() = 0);
	
	УстановитьПривилегированныйРежим(Истина);
	ТЗ = Запрос.Выполнить().Выгрузить();
	УстановитьПривилегированныйРежим(Ложь);
	
	ТЗ.Колонки.Добавить("Группа1", Новый ОписаниеТипов("СправочникСсылка.Номенклатура"));
	ТЗ.Колонки.Добавить("Группа2", Новый ОписаниеТипов("СправочникСсылка.Номенклатура"));
	ТЗ.Колонки.Добавить("Группа3", Новый ОписаниеТипов("СправочникСсылка.Номенклатура"));
	Квалификатор =  Новый КвалификаторыЧисла(7,3, ДОпустимыйЗнак.Неотрицательный);
	ТЗ.Колонки.Добавить("ОборачиваемостьПоОбществу", Новый ОписаниеТипов("Число", Квалификатор));
	ТЗ.Колонки.Добавить("ОборачиваемостьПоСкладу",  Новый ОписаниеТипов("Число", Квалификатор));
	ТЗ.Колонки.Добавить("РасчетныйСрокПотребленияПоСкладу",  Новый ОписаниеТипов("Число", Квалификатор));
	ТЗ.Колонки.Добавить("СреднийРасходПоОбществу",  Новый ОписаниеТипов("Число", Квалификатор));
	ТЗ.Колонки.Добавить("СреднийРасходПоСкладу",  Новый ОписаниеТипов("Число", Квалификатор));
	ТЗ.Колонки.Добавить("КонсервацияБух", Новый ОписаниеТипов("Строка"));
	ТЗ.Колонки.Добавить("КонсервацияНал", Новый ОписаниеТипов("Строка"));
	ТЗ.Колонки.Добавить("КоличествоПоследнееПеремещение", Новый ОписаниеТипов("Число", Квалификатор));
	ТЗ.Колонки.Добавить("Резерв",  Новый ОписаниеТипов("Число", Квалификатор));
	ТЗ.Колонки.Добавить("ПредыдущееМОЛ", Новый ОписаниеТипов("СправочникСсылка.Сотрудники"));
	ТЗ.Колонки.Добавить("Забаланс", Новый ОписаниеТипов("Булево"));
	
	Для каждого Строка Из ТЗ Цикл
		
		Строка.ПредыдущееМОЛ = Строка.ПредыдущееМОЛ1;
		Строка.Забаланс = Строка.Счет.Забалансовый;		
		ЗаполнитьГруппы(Строка);
		
		Если ТипЗнч(Строка.Наименование) = Тип("СправочникСсылка.Номенклатура") Тогда
			
			ОпределитьРезерв(Строка);
			ОпределитьПоследнееПеремещение(Строка, Период, МесяцевБезДвижения);
			ОпределитьОборачиваемостьПоОбществу(Строка);
			ОпределитьОборачиваемостьПоСкладу(Строка);
			ОпределитьРасчетныйСрокПотребленияПоСкладу(Строка, МесяцевДляАнализа);
			ОпределитьСреднийРасходПоОбществу(Строка, МесяцевДляАнализа);
			ОпределитьСреднийРасходПоСкладу(Строка, МесяцевДляАнализа);
			
		ИначеЕсли ТипЗнч(Строка.Наименование) = Тип("СправочникСсылка.ОсновныеСредства") И Строка.Счет = ПланыСчетов.Хозрасчетный.НайтиПоКоду("001") Тогда			
			ОпределитьПоследнееПеремещение(Строка, Период, МесяцевБезДвижения);				
		Иначе 	
			ОпределитьКонсервацию(Строка);				
		КонецЕсли; 
		
	КонецЦикла; 
	
	ТЗ.Сортировать("Забаланс, Счет, Тип, Группа1, Группа2, Группа3, Наименование");
	
	Если Склады <> Неопределено  Тогда
		Если Склады.Количество() <> 0 Тогда 	
			Запрос = Новый Запрос;
			Запрос.Текст = "ВЫБРАТЬ
			|	Склады.Ссылка
			|ИЗ
			|	Справочник.Склады КАК Склады
			|ГДЕ
			|	Склады.Ссылка В ИЕРАРХИИ(&Склады)";
			Запрос.УстановитьПараметр("Склады", Склады);
			Результат = Запрос.Выполнить();
			УстановитьПривилегированныйРежим(Истина);
			МассивСкладов = Результат.Выгрузить().ВыгрузитьКолонку("Ссылка");
			УстановитьПривилегированныйРежим(Ложь);
			
			СтрокиУдалить = Новый Массив();
			Для каждого Строка Из ТЗ Цикл
				Если МассивСкладов.Найти(Строка.Склад) = Неопределено Тогда
					СтрокиУдалить.Добавить(Строка);
				КонецЕсли; 
			КонецЦикла; 
			Для каждого Строка Из СтрокиУдалить Цикл
				ТЗ.Удалить(Строка);
			КонецЦикла; 
		КонецЕсли;	
	КонецЕсли; 
	
	Возврат ТЗ;
	
КонецФункции

Процедура ЗаполнитьГруппы(Строка)
	
	Строка.Группа1 = ПолучитьПервогоРодителя(Строка.Наименование);
	Строка.Группа2 = ПолучитьВторогоРодителя(Строка.Наименование);
	Строка.Группа3 = ПолучитьТретьегоРодителя(Строка.Наименование);
	
КонецПроцедуры

Функция ПолучитьПервогоРодителя(Ном)
	
	НайдСтрока = ТЗРодители.Найти(Ном, "Ссылка");
	
	Если НайдСтрока = Неопределено Тогда
		Возврат Неопределено;
	КонецЕсли; 
	
	Если ЗначениеЗаполнено(НайдСтрока.Родитель) Тогда
		Возврат ПолучитьПервогоРодителя(НайдСтрока.Родитель);
	Иначе
		Возврат ?(НайдСтрока.ЭтоГруппа, Ном, Неопределено);
	КонецЕсли;	
	
КонецФункции // ()

Функция ПолучитьВторогоРодителя(Ном)
	
	НайдСтрока = ТЗРодители.Найти(Ном, "Ссылка");
	
	Если НайдСтрока = Неопределено Тогда
		Возврат Неопределено;
	КонецЕсли; 
	
	Если ЗначениеЗаполнено(НайдСтрока.Родитель2) Тогда
		Возврат ПолучитьВторогоРодителя(НайдСтрока.Родитель);
	Иначе
		Возврат ?(НайдСтрока.ЭтоГруппа, Ном, Неопределено);
	КонецЕсли; 
	
КонецФункции // ()

Функция ПолучитьТретьегоРодителя(Ном)
	
	НайдСтрока = ТЗРодители.Найти(Ном, "Ссылка");
	
	Если НайдСтрока = Неопределено Тогда
		Возврат Неопределено;
	КонецЕсли; 
	
	Если ЗначениеЗаполнено(НайдСтрока.Родитель3) Тогда
		Возврат ПолучитьТретьегоРодителя(НайдСтрока.Родитель);
	Иначе
		Возврат ?(НайдСтрока.ЭтоГруппа, Ном, Неопределено);
	КонецЕсли; 
	
КонецФункции // ()

Процедура СформироватьТЗРезервов(Период) 
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ХозрасчетныйОстатки.Субконто1 КАК Номенклатура,
	|	СУММА(-ХозрасчетныйОстатки.СуммаОстаток) КАК Сумма
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Остатки(&Период, Счет В ИЕРАРХИИ (&Счет14), &СубконтоНоменклатура, ) КАК ХозрасчетныйОстатки
	|
	|СГРУППИРОВАТЬ ПО
	|	ХозрасчетныйОстатки.Субконто1";
	
	Запрос.УстановитьПараметр("Период", Период);
	Запрос.УстановитьПараметр("СубконтоНоменклатура", ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Номенклатура);
	Запрос.УстановитьПараметр("Счет14", ПланыСчетов.Хозрасчетный.РезервыПодСнижениеСтоимостиМЦ);
	
	Результат = Запрос.Выполнить(); 
	УстановитьПривилегированныйРежим(Истина);
	ТЗРезервы = Результат.Выгрузить();
	УстановитьПривилегированныйРежим(Ложь);
	
КонецПроцедуры

Процедура СформироватьТЗРодители()  
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	Номенклатура.Ссылка,
	|	Номенклатура.Родитель КАК Родитель,
	|	Номенклатура.Родитель.Родитель КАК Родитель2,
	|	Номенклатура.Родитель.Родитель.Родитель КАК Родитель3,
	|	Номенклатура.ЭтоГруппа
	|ИЗ
	|	Справочник.Номенклатура КАК Номенклатура
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОсновныеСредства.Ссылка,
	|	ОсновныеСредства.Родитель,
	|	ОсновныеСредства.Родитель.Родитель,
	|	ОсновныеСредства.Родитель.Родитель.Родитель,
	|	ОсновныеСредства.ЭтоГруппа
	|ИЗ
	|	Справочник.ОсновныеСредства КАК ОсновныеСредства");
	
	УстановитьПривилегированныйРежим(Истина);
	ТЗРодители = Запрос.Выполнить().Выгрузить();
	УстановитьПривилегированныйРежим(Ложь);
	
	ТЗРодители.Индексы.Добавить("Ссылка");
	
КонецПроцедуры

Процедура СформироватьТЗКонсервация(Период)
	
	СписокЭлементов = КомпоновщикНастроек.ПолучитьНастройки().Отбор.Элементы;
	Для каждого Элемент из СписокЭлементов Цикл		
		Если Элемент.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Организация") Тогда			
			Организация = Элемент.ПравоеЗначение;			
		КонецЕсли;		
	КонецЦикла;  
	
	Настройка = ПредопределенноеЗначение("ПланВидовХарактеристик.игсНастройкиМеханизмов.СобытиеОСКонсервация");
	Событие = игсНастройкиМеханизмовВызовСервера.ПолучитьЗначениеНастройки(Настройка,Организация);
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	МАКСИМУМ(СобытияОССрезПоследних.Период) КАК Период,
	|	СобытияОССрезПоследних.ОсновноеСредство КАК ОсновноеСредство,
	|	СобытияОССрезПоследних.Регистратор КАК Регистратор
	|ПОМЕСТИТЬ ВТ
	|ИЗ
	|	РегистрСведений.СобытияОСОрганизаций.СрезПоследних(&Период, ) КАК СобытияОССрезПоследних
	|ГДЕ
	|	СобытияОССрезПоследних.Событие = &Событие
	|	И (ТИПЗНАЧЕНИЯ(СобытияОССрезПоследних.Регистратор) = ТИП(Документ.ВводНачальныхОстатков)
	|			ИЛИ ТИПЗНАЧЕНИЯ(СобытияОССрезПоследних.Регистратор) = ТИП(Документ.ИзменениеПараметровНачисленияАмортизацииОС)
	|			ИЛИ ТИПЗНАЧЕНИЯ(СобытияОССрезПоследних.Регистратор) = ТИП(Документ.ИзменениеСостоянияОС))
	|
	|СГРУППИРОВАТЬ ПО
	|	СобытияОССрезПоследних.ОсновноеСредство,
	|	СобытияОССрезПоследних.Регистратор
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СобытияОСОрганизацийСрезПоследних.Событие КАК Событие,
	|	СобытияОСОрганизацийСрезПоследних.Регистратор КАК Регистратор,
	|	СобытияОСОрганизацийСрезПоследних.ОсновноеСредство КАК ОсновноеСредство,
	|	СобытияОСОрганизацийСрезПоследних.Период КАК Период
	|ПОМЕСТИТЬ ВТСрезПоследних
	|ИЗ
	|	РегистрСведений.СобытияОСОрганизаций.СрезПоследних(&Период, ) КАК СобытияОСОрганизацийСрезПоследних
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ.ОсновноеСредство КАК ОсновноеСредство,
	|	ВТ.Период КАК Период,
	|	ВТСрезПоследних.Событие КАК Событие,
	|	ВТСрезПоследних.Регистратор КАК Регистратор
	|ИЗ
	|	ВТ КАК ВТ
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСрезПоследних КАК ВТСрезПоследних
	|		ПО ВТ.ОсновноеСредство = ВТСрезПоследних.ОсновноеСредство
	|			И ВТ.Период = ВТСрезПоследних.Период,
	|	РегистрСведений.СобытияОСОрганизаций.СрезПоследних(&Период, ) КАК СобытияОСОрганизацийСрезПоследних
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ.ОсновноеСредство,
	|	ВТ.Период,
	|	ВТСрезПоследних.Событие,
	|	ВТСрезПоследних.Регистратор";
	
	
	Запрос.УстановитьПараметр("Период", Период);
	Запрос.УстановитьПараметр("Событие", Событие);
	
	УстановитьПривилегированныйРежим(Истина);
	ТЗКонсервация = Запрос.Выполнить().Выгрузить(); 
	УстановитьПривилегированныйРежим(Ложь); 
	
	ТЗКонсервация.Индексы.Добавить("ОсновноеСредство");
	ТЗКонсервация.Индексы.Добавить("Событие");
	
КонецПроцедуры

Процедура СформироватьТЗПеремещений(Счета, Период) 	
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ХозрасчетныйОборотыДтКт.Период КАК Период,
	|	ВЫРАЗИТЬ(ХозрасчетныйОборотыДтКт.СубконтоДт1 КАК Справочник.Номенклатура) КАК Номенклатура,
	|	ВЫРАЗИТЬ(ХозрасчетныйОборотыДтКт.СубконтоДт2 КАК Справочник.Склады) КАК Склад,
	|	ХозрасчетныйОборотыДтКт.КоличествоОборотДт КАК Количество,
	|	ВЫБОР
	|		КОГДА ТИПЗНАЧЕНИЯ(ХозрасчетныйОборотыДтКт.СубконтоКт1) = ТИП(Справочник.Склады)
	|				ИЛИ ТИПЗНАЧЕНИЯ(ХозрасчетныйОборотыДтКт.СубконтоКт1) = ТИП(Справочник.Контрагенты)
	|			ТОГДА ХозрасчетныйОборотыДтКт.СубконтоКт1
	|		КОГДА ТИПЗНАЧЕНИЯ(ХозрасчетныйОборотыДтКт.СубконтоКт2) = ТИП(Справочник.Склады)
	|				ИЛИ ТИПЗНАЧЕНИЯ(ХозрасчетныйОборотыДтКт.СубконтоКт2) = ТИП(Справочник.Контрагенты)
	|			ТОГДА ХозрасчетныйОборотыДтКт.СубконтоКт2
	|		КОГДА ТИПЗНАЧЕНИЯ(ХозрасчетныйОборотыДтКт.СубконтоКт3) = ТИП(Справочник.Склады)
	|				ИЛИ ТИПЗНАЧЕНИЯ(ХозрасчетныйОборотыДтКт.СубконтоКт3) = ТИП(Справочник.Контрагенты)
	|			ТОГДА ХозрасчетныйОборотыДтКт.СубконтоКт3
	|		КОГДА ХозрасчетныйОборотыДтКт.СчетКт В ИЕРАРХИИ (&СчетПрочихДоходов)
	|			ТОГДА ""Излишек""
	|		ИНАЧЕ NULL
	|	КОНЕЦ КАК ПредыдущийСклад
	|ПОМЕСТИТЬ ВТ
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(
	|			,
	|			&Период,
	|			Регистратор,
	|			,
	|			&ВидыСубконтоНоменклатураСклад,
	|			,
	|			,
	|			(СубконтоДт1, СубконтоДт2) В
	|				(ВЫБРАТЬ
	|					ХозрасчетныйОстатки.Субконто1,
	|					ХозрасчетныйОстатки.Субконто2
	|				ИЗ
	|					РегистрБухгалтерии.Хозрасчетный.Остатки(&Период, Счет В (&Счета), &ВидыСубконтоНоменклатураСклад, ) КАК ХозрасчетныйОстатки)) КАК ХозрасчетныйОборотыДтКт
	|ГДЕ
	|	(ТИПЗНАЧЕНИЯ(ХозрасчетныйОборотыДтКт.СубконтоКт1) = ТИП(Справочник.Склады)
	|			ИЛИ ТИПЗНАЧЕНИЯ(ХозрасчетныйОборотыДтКт.СубконтоКт1) = ТИП(Справочник.Контрагенты)
	|			ИЛИ ТИПЗНАЧЕНИЯ(ХозрасчетныйОборотыДтКт.СубконтоКт2) = ТИП(Справочник.Склады)
	|			ИЛИ ТИПЗНАЧЕНИЯ(ХозрасчетныйОборотыДтКт.СубконтоКт2) = ТИП(Справочник.Контрагенты)
	|			ИЛИ ТИПЗНАЧЕНИЯ(ХозрасчетныйОборотыДтКт.СубконтоКт3) = ТИП(Справочник.Склады)
	|			ИЛИ ТИПЗНАЧЕНИЯ(ХозрасчетныйОборотыДтКт.СубконтоКт3) = ТИП(Справочник.Контрагенты)
	|			ИЛИ ХозрасчетныйОборотыДтКт.СчетКт В ИЕРАРХИИ (&Счет15)
	|			ИЛИ ХозрасчетныйОборотыДтКт.СчетКт В ИЕРАРХИИ (&СчетПрочихДоходов))
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура,
	|	Склад,
	|	Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ.Номенклатура КАК Номенклатура,
	|	ВТ.Склад КАК Склад,
	|	МАКСИМУМ(ВТ.Период) КАК Период
	|ПОМЕСТИТЬ ВТ2
	|ИЗ
	|	ВТ КАК ВТ
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ.Номенклатура,
	|	ВТ.Склад
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура,
	|	Склад,
	|	Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ2.Период,
	|	ВТ2.Номенклатура,
	|	ВТ2.Склад,
	|	СУММА(ВТ.Количество) КАК Количество,
	|	МАКСИМУМ(ВТ.ПредыдущийСклад) КАК ПредыдущийСклад
	|ИЗ
	|	ВТ2 КАК ВТ2
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ КАК ВТ
	|		ПО ВТ2.Номенклатура = ВТ.Номенклатура
	|			И ВТ2.Склад = ВТ.Склад
	|			И ВТ2.Период = ВТ.Период
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ2.Период,
	|	ВТ2.Номенклатура,
	|	ВТ2.Склад";
	
	НомСклад = Новый Массив;
	НомСклад.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Номенклатура);
	НомСклад.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Склады);
	
	Запрос.УстановитьПараметр("ВидыСубконтоНоменклатураСклад", НомСклад);
	Запрос.УстановитьПараметр("Период", Период);
	Запрос.УстановитьПараметр("СчетПрочихДоходов", ПланыСчетов.Хозрасчетный.ПрочиеДоходы);
	Запрос.УстановитьПараметр("Счет15", ПланыСчетов.Хозрасчетный.ЗаготовлениеИПриобретениеМЦ);
	Запрос.УстановитьПараметр("Счета", Счета);
	
	ТЗПоследнихПеремещений = Новый ТаблицаЗначений;
	ТЗПоследнихПеремещений.Колонки.Добавить("Период");
	ТЗПоследнихПеремещений.Колонки.Добавить("Номенклатура");
	ТЗПоследнихПеремещений.Колонки.Добавить("Склад");
	ТЗПоследнихПеремещений.Колонки.Добавить("Количество");
	ТЗПоследнихПеремещений.Колонки.Добавить("ПредыдущийСклад");
	
	ВыборкаДетальныеЗаписи = Запрос.Выполнить().Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		
		НСТР = ТЗПоследнихПеремещений.Добавить();
		ЗаполнитьЗначенияСвойств(НСТР, ВыборкаДетальныеЗаписи);
		
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ХозрасчетныйОборотыДтКт.Период КАК Период,
	|	ВЫРАЗИТЬ(ХозрасчетныйОборотыДтКт.СубконтоДт1 КАК Справочник.Номенклатура) КАК Номенклатура,
	|	ВЫРАЗИТЬ(ХозрасчетныйОборотыДтКт.СубконтоДт2 КАК Справочник.Контрагенты) КАК Склад,
	|	ХозрасчетныйОборотыДтКт.КоличествоОборотДт КАК Количество,
	|	ВЫБОР
	|		КОГДА ТИПЗНАЧЕНИЯ(ХозрасчетныйОборотыДтКт.СубконтоКт1) = ТИП(Справочник.Склады)
	|				ИЛИ ТИПЗНАЧЕНИЯ(ХозрасчетныйОборотыДтКт.СубконтоКт1) = ТИП(Справочник.Контрагенты)
	|			ТОГДА ХозрасчетныйОборотыДтКт.СубконтоКт1
	|		КОГДА ТИПЗНАЧЕНИЯ(ХозрасчетныйОборотыДтКт.СубконтоКт2) = ТИП(Справочник.Склады)
	|				ИЛИ ТИПЗНАЧЕНИЯ(ХозрасчетныйОборотыДтКт.СубконтоКт2) = ТИП(Справочник.Контрагенты)
	|			ТОГДА ХозрасчетныйОборотыДтКт.СубконтоКт2
	|		КОГДА ТИПЗНАЧЕНИЯ(ХозрасчетныйОборотыДтКт.СубконтоКт3) = ТИП(Справочник.Склады)
	|				ИЛИ ТИПЗНАЧЕНИЯ(ХозрасчетныйОборотыДтКт.СубконтоКт3) = ТИП(Справочник.Контрагенты)
	|			ТОГДА ХозрасчетныйОборотыДтКт.СубконтоКт3
	|		КОГДА ХозрасчетныйОборотыДтКт.СчетКт В ИЕРАРХИИ(&СчетПрочихДоходов)
	|			ТОГДА ""Излишек""
	|		ИНАЧЕ NULL
	|	КОНЕЦ КАК ПредыдущийСклад
	|ПОМЕСТИТЬ ВТ
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(, &Период, Регистратор, , &ВидыСубконтоНоменклатураКонтрагент, , , ) КАК ХозрасчетныйОборотыДтКт
	|ГДЕ
	|	(ТИПЗНАЧЕНИЯ(ХозрасчетныйОборотыДтКт.СубконтоКт1) = ТИП(Справочник.Склады)
	|			ИЛИ ТИПЗНАЧЕНИЯ(ХозрасчетныйОборотыДтКт.СубконтоКт1) = ТИП(Справочник.Контрагенты)
	|			ИЛИ ТИПЗНАЧЕНИЯ(ХозрасчетныйОборотыДтКт.СубконтоКт2) = ТИП(Справочник.Склады)
	|			ИЛИ ТИПЗНАЧЕНИЯ(ХозрасчетныйОборотыДтКт.СубконтоКт2) = ТИП(Справочник.Контрагенты)
	|			ИЛИ ТИПЗНАЧЕНИЯ(ХозрасчетныйОборотыДтКт.СубконтоКт3) = ТИП(Справочник.Склады)
	|			ИЛИ ТИПЗНАЧЕНИЯ(ХозрасчетныйОборотыДтКт.СубконтоКт3) = ТИП(Справочник.Контрагенты)
	|			ИЛИ ХозрасчетныйОборотыДтКт.СчетКт В ИЕРАРХИИ(&Счет15)
	|			ИЛИ ХозрасчетныйОборотыДтКт.СчетКт В ИЕРАРХИИ(&СчетПрочихДоходов))
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ.Номенклатура,
	|	ВТ.Склад,
	|	МАКСИМУМ(ВТ.Период) КАК Период
	|ПОМЕСТИТЬ ВТ2
	|ИЗ
	|	ВТ КАК ВТ
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ.Номенклатура,
	|	ВТ.Склад
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ2.Период,
	|	ВТ2.Номенклатура,
	|	ВТ2.Склад,
	|	СУММА(ВТ.Количество) КАК Количество,
	|	МАКСИМУМ(ВТ.ПредыдущийСклад) КАК ПредыдущийСклад
	|ИЗ
	|	ВТ2 КАК ВТ2
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ КАК ВТ
	|		ПО ВТ2.Номенклатура = ВТ.Номенклатура
	|			И ВТ2.Склад = ВТ.Склад
	|			И ВТ2.Период = ВТ.Период
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ2.Период,
	|	ВТ2.Номенклатура,
	|	ВТ2.Склад";
	
	НомКонтрагент = Новый Массив;
	НомКонтрагент.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Номенклатура);
	НомКонтрагент.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Контрагенты);
	
	Запрос.УстановитьПараметр("ВидыСубконтоНоменклатураКонтрагент", НомКонтрагент);
	Запрос.УстановитьПараметр("Период", Период);
	Запрос.УстановитьПараметр("СчетПрочихДоходов", ПланыСчетов.Хозрасчетный.ПрочиеДоходы);
	Запрос.УстановитьПараметр("Счет15", ПланыСчетов.Хозрасчетный.ЗаготовлениеИПриобретениеМЦ);
	
	ВыборкаДетальныеЗаписи = Запрос.Выполнить().Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		
		НСТР = ТЗПоследнихПеремещений.Добавить();
		ЗаполнитьЗначенияСвойств(НСТР, ВыборкаДетальныеЗаписи);
		
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ХозрасчетныйОборотыДтКт.Период КАК Период,
	|	ВЫРАЗИТЬ(ХозрасчетныйОборотыДтКт.СубконтоДт1 КАК Справочник.ОсновныеСредства) КАК Номенклатура,
	|	ВЫРАЗИТЬ(ХозрасчетныйОборотыДтКт.СубконтоДт2 КАК Справочник.Склады) КАК Склад,
	|	ХозрасчетныйОборотыДтКт.КоличествоОборотДт КАК Количество,
	|	ВЫБОР
	|		КОГДА ТИПЗНАЧЕНИЯ(ХозрасчетныйОборотыДтКт.СубконтоКт1) = ТИП(Справочник.Склады)
	|			ТОГДА ХозрасчетныйОборотыДтКт.СубконтоКт1
	|		КОГДА ТИПЗНАЧЕНИЯ(ХозрасчетныйОборотыДтКт.СубконтоКт2) = ТИП(Справочник.Склады)
	|			ТОГДА ХозрасчетныйОборотыДтКт.СубконтоКт2
	|		КОГДА ТИПЗНАЧЕНИЯ(ХозрасчетныйОборотыДтКт.СубконтоКт3) = ТИП(Справочник.Склады)
	|			ТОГДА ХозрасчетныйОборотыДтКт.СубконтоКт3
	|		ИНАЧЕ NULL
	|	КОНЕЦ КАК ПредыдущийСклад
	|ПОМЕСТИТЬ ВТ
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(, &Период, Регистратор, , &ВидыСубконтоОССклады, , , ) КАК ХозрасчетныйОборотыДтКт
	|ГДЕ
	|	(ТИПЗНАЧЕНИЯ(ХозрасчетныйОборотыДтКт.СубконтоКт1) = ТИП(Справочник.Склады)
	|			ИЛИ ТИПЗНАЧЕНИЯ(ХозрасчетныйОборотыДтКт.СубконтоКт2) = ТИП(Справочник.Склады)
	|			ИЛИ ТИПЗНАЧЕНИЯ(ХозрасчетныйОборотыДтКт.СубконтоКт3) = ТИП(Справочник.Склады)
	|			ИЛИ ХозрасчетныйОборотыДтКт.СчетКт В ИЕРАРХИИ(&Счет15)
	|			ИЛИ ХозрасчетныйОборотыДтКт.СчетКт В ИЕРАРХИИ(&СчетПрочихДоходов))
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ.Номенклатура,
	|	ВТ.Склад,
	|	МАКСИМУМ(ВТ.Период) КАК Период
	|ПОМЕСТИТЬ ВТ2
	|ИЗ
	|	ВТ КАК ВТ
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ.Номенклатура,
	|	ВТ.Склад
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ2.Период,
	|	ВТ2.Номенклатура,
	|	ВТ2.Склад,
	|	СУММА(ВТ.Количество) КАК Количество,
	|	МАКСИМУМ(ВТ.ПредыдущийСклад) КАК ПредыдущийСклад
	|ИЗ
	|	ВТ2 КАК ВТ2
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ КАК ВТ
	|		ПО ВТ2.Номенклатура = ВТ.Номенклатура
	|			И ВТ2.Склад = ВТ.Склад
	|			И ВТ2.Период = ВТ.Период
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ2.Период,
	|	ВТ2.Номенклатура,
	|	ВТ2.Склад";
	
	ОССклады = Новый Массив;
	ОССклады.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ОсновныеСредства);
	ОССклады.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Склады);
	
	Запрос.УстановитьПараметр("ВидыСубконтоОССклады", ОССклады);
	Запрос.УстановитьПараметр("Период", Период);
	Запрос.УстановитьПараметр("СчетПрочихДоходов", ПланыСчетов.Хозрасчетный.ПрочиеДоходы);
	Запрос.УстановитьПараметр("Счет15", ПланыСчетов.Хозрасчетный.ЗаготовлениеИПриобретениеМЦ);
	
	ВыборкаДетальныеЗаписи = Запрос.Выполнить().Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		
		НСТР = ТЗПоследнихПеремещений.Добавить();
		ЗаполнитьЗначенияСвойств(НСТР, ВыборкаДетальныеЗаписи);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура СформироватьТЗОборачиваемостиПоОбществу(Период, МесяцевДляАнализа) 
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ХозрасчетныйОстатки.Счет,
	|	ВЫРАЗИТЬ(ХозрасчетныйОстатки.Субконто1 КАК Справочник.Номенклатура) КАК Номенклатура,
	|	СУММА(ХозрасчетныйОстатки.КоличествоОстаток) КАК Количество
	|ПОМЕСТИТЬ ВТ
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Остатки(&Период, , &ВидыСубконтоНоменклатураСклад, ) КАК ХозрасчетныйОстатки
	|ГДЕ
	|	ХозрасчетныйОстатки.КоличествоОстаток <> 0
	|
	|СГРУППИРОВАТЬ ПО
	|	ХозрасчетныйОстатки.Счет,
	|	ВЫРАЗИТЬ(ХозрасчетныйОстатки.Субконто1 КАК Справочник.Номенклатура)";
	
	к = 1;
	
	Пока к <= МесяцевДляАнализа - 1 Цикл
		
		Запрос.Текст = Запрос.Текст + "
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ХозрасчетныйОстатки.Счет,
		|	ВЫРАЗИТЬ(ХозрасчетныйОстатки.Субконто1 КАК Справочник.Номенклатура),
		|	СУММА(ХозрасчетныйОстатки.КоличествоОстаток)
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.Остатки(&Период" + Формат(к, "ЧГ=") + ", , &ВидыСубконтоНоменклатураСклад, ) КАК ХозрасчетныйОстатки
		|ГДЕ
		|	ХозрасчетныйОстатки.КоличествоОстаток <> 0
		|
		|СГРУППИРОВАТЬ ПО
		|	ХозрасчетныйОстатки.Счет,
		|	ВЫРАЗИТЬ(ХозрасчетныйОстатки.Субконто1 КАК Справочник.Номенклатура)";		
		
		Запрос.УстановитьПараметр("Период" + Формат(к, "ЧГ="), ДобавитьМесяц(Период, -1 * к));
		
		к = к + 1;
		
	КонецЦикла; 
	
	Запрос.Текст = Запрос.Текст + "
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ.Счет,
	|	ВТ.Номенклатура,
	|	СУММА(ВТ.Количество) КАК Количество
	|ПОМЕСТИТЬ ВТОстатки
	|ИЗ
	|	ВТ КАК ВТ
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ.Счет,
	|	ВТ.Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ХозрасчетныйОборотыДтКт.СчетКт КАК Счет,
	|	ВЫРАЗИТЬ(ХозрасчетныйОборотыДтКт.СубконтоКт1 КАК Справочник.Номенклатура) КАК Номенклатура,
	|	СУММА(ХозрасчетныйОборотыДтКт.КоличествоОборотКт) КАК Количество
	|ПОМЕСТИТЬ ВТСписание
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(&НачалоПериода, &Период, , СчетДт В ИЕРАРХИИ (&Счет20, &Счет23, &Счет25, &Счет26, &Счет1011, &Счет91), , , &ВидыСубконтоНоменклатураСклад, ) КАК ХозрасчетныйОборотыДтКт
	|
	|СГРУППИРОВАТЬ ПО
	|	ХозрасчетныйОборотыДтКт.СчетКт,
	|	ВЫРАЗИТЬ(ХозрасчетныйОборотыДтКт.СубконтоКт1 КАК Справочник.Номенклатура)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТОстатки.Счет,
	|	ВТОстатки.Номенклатура,
	|	ВЫБОР
	|		КОГДА НЕ ВТСписание.Количество ЕСТЬ NULL 
	|				И ВТСписание.Количество > 0
	|			ТОГДА ВТОстатки.Количество / ВТСписание.Количество
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК Оборачиваемость,
	|	ВТСписание.Количество КАК КоличествоСписано
	|ИЗ
	|	ВТОстатки КАК ВТОстатки
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСписание КАК ВТСписание
	|		ПО ВТОстатки.Счет = ВТСписание.Счет
	|			И ВТОстатки.Номенклатура = ВТСписание.Номенклатура";
	
	НомСклад = Новый Массив;
	НомСклад.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Номенклатура);
	НомСклад.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Склады);
	
	Запрос.УстановитьПараметр("ВидыСубконтоНоменклатураСклад", НомСклад);
	Запрос.УстановитьПараметр("Период", Период);
	
	Запрос.УстановитьПараметр("НачалоПериода", ДобавитьМесяц(Период, -1 * МесяцевДляАнализа));
	Запрос.УстановитьПараметр("Счет20", ПланыСчетов.Хозрасчетный.ОсновноеПроизводство_);
	Запрос.УстановитьПараметр("Счет23", ПланыСчетов.Хозрасчетный.ВспомогательныеПроизводства_);
	Запрос.УстановитьПараметр("Счет25", ПланыСчетов.Хозрасчетный.ОбщепроизводственныеРасходы);
	Запрос.УстановитьПараметр("Счет26", ПланыСчетов.Хозрасчетный.ОбщехозяйственныеРасходы);
	Запрос.УстановитьПараметр("Счет91", ПланыСчетов.Хозрасчетный.ПрочиеДоходыИРасходы);
	Запрос.УстановитьПараметр("Счет1011", ПланыСчетов.Хозрасчетный.СпецоснасткаИСпецодеждаВЭксплуатации);
	
	УстановитьПривилегированныйРежим(Истина);
	ТЗОборачиваемостьПоОбществу = Запрос.Выполнить().Выгрузить();
	УстановитьПривилегированныйРежим(Ложь); 
	
КонецПроцедуры

Процедура СформироватьТЗОборачиваемостиПоСкладу(Период, МесяцевДляАнализа)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ХозрасчетныйОстатки.Счет,
	|	ВЫРАЗИТЬ(ХозрасчетныйОстатки.Субконто1 КАК Справочник.Номенклатура) КАК Номенклатура,
	|	ВЫРАЗИТЬ(ХозрасчетныйОстатки.Субконто2 КАК Справочник.Склады) КАК Склад,
	|	СУММА(ХозрасчетныйОстатки.КоличествоОстаток) КАК Количество
	|ПОМЕСТИТЬ ВТ
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Остатки(&Период, , &ВидыСубконтоНоменклатураСклад, ) КАК ХозрасчетныйОстатки
	|ГДЕ
	|	ХозрасчетныйОстатки.КоличествоОстаток <> 0
	|
	|СГРУППИРОВАТЬ ПО
	|	ХозрасчетныйОстатки.Счет,
	|	ВЫРАЗИТЬ(ХозрасчетныйОстатки.Субконто1 КАК Справочник.Номенклатура),
	|	ВЫРАЗИТЬ(ХозрасчетныйОстатки.Субконто2 КАК Справочник.Склады)";
	
	к = 1;
	
	Пока к <= МесяцевДляАнализа - 1 Цикл
		
		Запрос.Текст = Запрос.Текст + "
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ХозрасчетныйОстатки.Счет,
		|	ВЫРАЗИТЬ(ХозрасчетныйОстатки.Субконто1 КАК Справочник.Номенклатура),
		|	ВЫРАЗИТЬ(ХозрасчетныйОстатки.Субконто2 КАК Справочник.Склады) КАК Склад,
		|	СУММА(ХозрасчетныйОстатки.КоличествоОстаток)
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.Остатки(&Период" + Формат(к, "ЧГ=") + ", , &ВидыСубконтоНоменклатураСклад, ) КАК ХозрасчетныйОстатки
		|ГДЕ
		|	ХозрасчетныйОстатки.КоличествоОстаток <> 0
		|
		|СГРУППИРОВАТЬ ПО
		|	ХозрасчетныйОстатки.Счет,
		|	ВЫРАЗИТЬ(ХозрасчетныйОстатки.Субконто1 КАК Справочник.Номенклатура),
		|	ВЫРАЗИТЬ(ХозрасчетныйОстатки.Субконто2 КАК Справочник.Склады)";		
		
		Запрос.УстановитьПараметр("Период" + Формат(к, "ЧГ="), ДобавитьМесяц(Период, -1 * к));
		
		к = к + 1;
		
	КонецЦикла; 
	
	Запрос.Текст = Запрос.Текст + "
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ.Счет,
	|	ВТ.Номенклатура,
	|	ВТ.Склад,
	|	СУММА(ВТ.Количество) КАК Количество
	|ПОМЕСТИТЬ ВТОстатки
	|ИЗ
	|	ВТ КАК ВТ
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ.Счет,
	|	ВТ.Номенклатура,
	|	ВТ.Склад
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ХозрасчетныйОборотыДтКт.СчетКт КАК Счет,
	|	ВЫРАЗИТЬ(ХозрасчетныйОборотыДтКт.СубконтоКт1 КАК Справочник.Номенклатура) КАК Номенклатура,
	|	ВЫРАЗИТЬ(ХозрасчетныйОборотыДтКт.СубконтоКт2 КАК Справочник.Склады) КАК Склад,
	|	СУММА(ХозрасчетныйОборотыДтКт.КоличествоОборотКт) КАК Количество
	|ПОМЕСТИТЬ ВТСписание
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(&НачалоПериода, &Период, , , , , &ВидыСубконтоНоменклатураСклад, ) КАК ХозрасчетныйОборотыДтКт
	|
	|СГРУППИРОВАТЬ ПО
	|	ХозрасчетныйОборотыДтКт.СчетКт,
	|	ВЫРАЗИТЬ(ХозрасчетныйОборотыДтКт.СубконтоКт1 КАК Справочник.Номенклатура),
	|	ВЫРАЗИТЬ(ХозрасчетныйОборотыДтКт.СубконтоКт2 КАК Справочник.Склады)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТОстатки.Счет,
	|	ВТОстатки.Номенклатура,
	|	ВТОстатки.Склад,
	|	ВЫБОР
	|		КОГДА НЕ ВТСписание.Количество ЕСТЬ NULL 
	|				И ВТСписание.Количество > 0
	|			ТОГДА ВТОстатки.Количество / ВТСписание.Количество
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК Оборачиваемость,
	|	ВТСписание.Количество КАК КоличествоСписано
	|ИЗ
	|	ВТОстатки КАК ВТОстатки
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСписание КАК ВТСписание
	|		ПО ВТОстатки.Счет = ВТСписание.Счет
	|			И ВТОстатки.Номенклатура = ВТСписание.Номенклатура
	|			И ВТОстатки.Склад = ВТСписание.Склад";
	
	НомСклад = Новый Массив;
	НомСклад.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Номенклатура);
	НомСклад.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Склады);
	
	Запрос.УстановитьПараметр("ВидыСубконтоНоменклатураСклад", НомСклад);
	Запрос.УстановитьПараметр("Период", Период);
	
	Запрос.УстановитьПараметр("НачалоПериода", ДобавитьМесяц(Период, -1 * МесяцевДляАнализа));
	УстановитьПривилегированныйРежим(Истина);
	ТЗОборачиваемостьПоСкладу = Запрос.Выполнить().Выгрузить();	
	УстановитьПривилегированныйРежим(Ложь);
	
КонецПроцедуры


Процедура ОпределитьРезерв(Строка)
	
	Отбор = Новый Структура();
	Отбор.Вставить("Номенклатура", Строка.Наименование);
	
	Для каждого НайдСтрока Из ТЗРезервы.НайтиСтроки(Отбор) Цикл
		Строка.Резерв = НайдСтрока.Сумма;
	КонецЦикла;		
	
КонецПроцедуры

Процедура ОпределитьПоследнееПеремещение(Строка, Период, МесяцевБезДвижения)
	
	Отбор = Новый Структура();
	Отбор.Вставить("Номенклатура", Строка.Наименование);
	Отбор.Вставить("Склад", Строка.Склад);
	
	Для каждого НайдСтрока Из ТЗПоследнихПеремещений.НайтиСтроки(Отбор) Цикл
		
		Строка.ДатаПоследнегоПеремещения = НайдСтрока.Период;
		Строка.ПредыдущееМОЛ = НайдСтрока.ПредыдущийСклад;
		Строка.КоличествоПоследнееПеремещение = НайдСтрока.Количество;
		
		Если Строка.ДатаПоследнегоПеремещения > ДобавитьМесяц(Период, -1 * МесяцевБезДвижения) Тогда
			Строка.БезДвижения = Ложь;	
		КонецЕсли; 
		
	КонецЦикла;	
	
КонецПроцедуры

Процедура ОпределитьОборачиваемостьПоОбществу(Строка)
	
	Отбор = Новый Структура();
	Отбор.Вставить("Номенклатура", Строка.Наименование);
	Отбор.Вставить("Счет", Строка.Счет);
	
	Для каждого НайдСтрока Из ТЗОборачиваемостьПоОбществу.НайтиСтроки(Отбор) Цикл
		
		Строка.ОборачиваемостьПоОбществу = НайдСтрока.Оборачиваемость;
		
	КонецЦикла;		
	
КонецПроцедуры

Процедура ОпределитьОборачиваемостьПоСкладу(Строка)
	
	Отбор = Новый Структура();
	Отбор.Вставить("Номенклатура", Строка.Наименование);
	Отбор.Вставить("Склад", Строка.Склад);
	Отбор.Вставить("Счет", Строка.Счет);
	
	Для каждого НайдСтрока Из ТЗОборачиваемостьПоСкладу.НайтиСтроки(Отбор) Цикл
		
		Строка.ОборачиваемостьПоСкладу = НайдСтрока.Оборачиваемость;
		
	КонецЦикла;	
	
КонецПроцедуры

Процедура ОпределитьРасчетныйСрокПотребленияПоСкладу(Строка, МесяцевДляАнализа)
	
	Отбор = Новый Структура();
	Отбор.Вставить("Номенклатура", Строка.Наименование);
	Отбор.Вставить("Склад", Строка.Склад);
	Отбор.Вставить("Счет", Строка.Счет);
	
	Для каждого НайдСтрока Из ТЗОборачиваемостьПоСкладу.НайтиСтроки(Отбор) Цикл
		
		Если ЗначениеЗаполнено(НайдСтрока.КоличествоСписано)
			И НайдСтрока.КоличествоСписано > 0 Тогда
			
			Строка.РасчетныйСрокПотребленияПоСкладу = Строка.Количество * МесяцевДляАнализа / НайдСтрока.КоличествоСписано;	
			
		КонецЕсли; 
		
	КонецЦикла;		
	
КонецПроцедуры

Процедура ОпределитьСреднийРасходПоСкладу(Строка, МесяцевДляАнализа)
	
	Отбор = Новый Структура();
	Отбор.Вставить("Номенклатура", Строка.Наименование);
	Отбор.Вставить("Склад", Строка.Склад);
	Отбор.Вставить("Счет", Строка.Счет);
	
	Для каждого НайдСтрока Из ТЗОборачиваемостьПоСкладу.НайтиСтроки(Отбор) Цикл
		
		Если ЗначениеЗаполнено(НайдСтрока.КоличествоСписано)
			И НайдСтрока.КоличествоСписано > 0 Тогда
			
			Строка.СреднийРасходПоСкладу = НайдСтрока.КоличествоСписано / МесяцевДляАнализа;	
			
		КонецЕсли; 
		
	КонецЦикла;		
	
КонецПроцедуры

Процедура ОпределитьСреднийРасходПоОбществу(Строка, МесяцевДляАнализа)
	
	Отбор = Новый Структура();
	Отбор.Вставить("Номенклатура", Строка.Наименование);
	Отбор.Вставить("Счет", Строка.Счет);
	
	Для каждого НайдСтрока Из ТЗОборачиваемостьПоОбществу.НайтиСтроки(Отбор) Цикл
		
		Если ЗначениеЗаполнено(НайдСтрока.КоличествоСписано)
			И НайдСтрока.КоличествоСписано > 0 Тогда
			
			Строка.СреднийРасходПоОбществу = НайдСтрока.КоличествоСписано / МесяцевДляАнализа;	
			
		КонецЕсли; 
		
	КонецЦикла;		
	
КонецПроцедуры


Процедура ОпределитьКонсервацию(Строка)
	
	Строка.КонсервацияБух = "";
	Строка.КонсервацияНал = "";
	Отбор = Новый Структура();
	Отбор.Вставить("ОсновноеСредство", Строка.Наименование);
	
	Для каждого НайдСтрока Из ТЗКонсервация.НайтиСтроки(Отбор) Цикл
		
		Попытка
			Строка.КонсервацияБух = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(НайдСтрока.Регистратор, "ОтражатьВБухгалтерскомУчете");
			Строка.КонсервацияНал = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(НайдСтрока.Регистратор, "ОтражатьВНалоговомУчете");
		Исключение
			ВызватьИсключение "Не удалось сформировать отчет, просьба обратиться к Администратору " + НайдСтрока.Регистратор;
		КонецПопытки;
		
	КонецЦикла;	
	
КонецПроцедуры

